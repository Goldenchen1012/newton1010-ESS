; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\obj\appserialcandavinci.o --asm_dir=.\List\ --list_dir=.\List\ --depend=.\obj\appserialcandavinci.d --cpu=Cortex-M4.fp.sp --apcs=interwork -O1 --diag_suppress=9931 -I../Inc -I../../../Drivers/CMSIS/Include -I../../../Drivers/CMSIS/Device/ST/STM32L4xx/Include -I../../../Drivers/STM32L4xx_HAL_Driver/Inc -I../../../Drivers/BSP/STM32L4xx_Nucleo_144 -I..\..\..\User -I..\..\..\HAL -I..\..\..\Lib -I..\..\..\Config_Common -I..\..\..\AppProtect -I..\..\..\APP -I..\..\..\Lib\SMP -I..\..\..\Drivers\SMP -I..\..\..\BSP -I..\..\..\Drivers\BSP\STM32L496V_Davinci -I..\..\..\API -I..\..\..\AppCommunication -I..\..\..\Drivers\W5500 -I..\..\..\RTT -I.\RTE\_HVESS_Normal -IC:\Users\88691\AppData\Local\Arm\Packs\ARM\CMSIS\5.8.0\CMSIS\Core\Include -IC:\Users\88691\AppData\Local\Arm\Packs\Keil\STM32L4xx_DFP\2.6.0\Drivers\CMSIS\Device\ST\STM32L4xx\Include -D__MICROLIB -D__UVISION_VERSION=535 -D_RTE_ -DSTM32L496xx -D_RTE_ -DSTM32L496xx -DUSE_HAL_DRIVER -DUSE_STM32L4XX_NUCLEO_144 -DBSPSMPS -DUSE_STM32L4XX_NUCLEO_144_SMPS -DUSE_ADP5301ACBZ -W ..\..\..\AppCommunication\AppSerialCanDavinci.c]
                          THUMB

                          AREA ||i.DavinciCan_cb||, CODE, READONLY, ALIGN=2

                  DavinciCan_cb PROC
;;;129    
;;;130    void DavinciCan_cb(can_evt_type p_evt){
000000  2800              CMP      r0,#0
000002  d103              BNE      |L1.12|
;;;131      switch(p_evt){
;;;132        case CAN_DATA_READY:
;;;133          /* received data handle */
;;;134    		can1_buf_c++;
000004  4802              LDR      r0,|L1.16|
000006  6801              LDR      r1,[r0,#0]  ; can1_buf_c
000008  1c49              ADDS     r1,r1,#1
00000a  6001              STR      r1,[r0,#0]  ; can1_buf_c
                  |L1.12|
;;;135        break;
;;;136        case CAN_TX_EMPTY:
;;;137          /* Data transmission complete handle */
;;;138        break;
;;;139        case CAN_COMMUNICATION_ERR:
;;;140          /* occurred during reception */
;;;141        break;
;;;142        case CAN_BUFFER_FULL:
;;;143          /* occurred UART buffer full */
;;;144        break;    
;;;145        default:
;;;146        break;
;;;147      }
;;;148    }
00000c  4770              BX       lr
;;;149    static void dump_danpackage(smp_can_package_t *pCanPkg)
                          ENDP

00000e  0000              DCW      0x0000
                  |L1.16|
                          DCD      ||.data||

                          AREA ||i.appSerialCanDavinciClose||, CODE, READONLY, ALIGN=2

                  appSerialCanDavinciClose PROC
;;;299    
;;;300    void appSerialCanDavinciClose(void)
000000  b510              PUSH     {r4,lr}
;;;301    {
;;;302    	smp_can_deinit(&mDavinci_can0);
000002  4804              LDR      r0,|L2.20|
000004  f7fffffe          BL       smp_can_deinit
;;;303    	smp_can_deinit(&mDavinci_can);
000008  4802              LDR      r0,|L2.20|
00000a  e8bd4010          POP      {r4,lr}
00000e  3018              ADDS     r0,r0,#0x18
000010  f7ffbffe          B.W      smp_can_deinit
;;;304    }
;;;305    
                          ENDP

                  |L2.20|
                          DCD      ||.data||+0x4

                          AREA ||i.appSerialCanDavinciIsCorrectScuId||, CODE, READONLY, ALIGN=1

                  appSerialCanDavinciIsCorrectScuId PROC
;;;198    /* Public function prototypes -----------------------------------------------*/
;;;199    uint8_t appSerialCanDavinciIsCorrectScuId(smp_can_package_t *pCanPkg)
000000  b510              PUSH     {r4,lr}
;;;200    {
000002  4604              MOV      r4,r0
;;;201    	if(SMP_CAN_GET_SCU_ID(pCanPkg->id) == appProjectGetScuId())
000004  f7fffffe          BL       appProjectGetScuId
000008  6821              LDR      r1,[r4,#0]
00000a  f3c14186          UBFX     r1,r1,#18,#7
00000e  4288              CMP      r0,r1
000010  d101              BNE      |L3.22|
;;;202    		return 1;
000012  2001              MOVS     r0,#1
;;;203    	else
;;;204    		return 0;
;;;205    }
000014  bd10              POP      {r4,pc}
                  |L3.22|
000016  2000              MOVS     r0,#0                 ;204
000018  bd10              POP      {r4,pc}
;;;206    
                          ENDP


                          AREA ||i.appSerialCanDavinciOpen||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                  appSerialCanDavinciOpen PROC
;;;278    
;;;279    void appSerialCanDavinciOpen(void)
000000  b500              PUSH     {lr}
;;;280    {
000002  b099              SUB      sp,sp,#0x64
;;;281    	char	str[100];
;;;282    	#if	1
;;;283    	int	res;
;;;284    	
;;;285    	res = smp_can_init(&mDavinci_can0, DavinciCan_cb);//
000004  490f              LDR      r1,|L4.68|
000006  4810              LDR      r0,|L4.72|
000008  f7fffffe          BL       smp_can_init
00000c  4602              MOV      r2,r0
;;;286    	sprintf(str,"Can0 ini %d", res);
00000e  a10f              ADR      r1,|L4.76|
000010  4668              MOV      r0,sp
000012  f7fffffe          BL       __2sprintf
;;;287    	appSerialCanDavinciDebugMsg(str);
000016  4668              MOV      r0,sp
000018  f7fffffe          BL       appSerialCanDavinciSendTextMessage
;;;288    
;;;289    	
;;;290    	if(smp_can_init(&mDavinci_can, DavinciCan_cb)==SMP_SUCCESS){
00001c  480a              LDR      r0,|L4.72|
00001e  4909              LDR      r1,|L4.68|
000020  3018              ADDS     r0,r0,#0x18
000022  f7fffffe          BL       smp_can_init
000026  b140              CBZ      r0,|L4.58|
;;;291    		appSerialCanDavinciDebugMsg("Can 1 ini success");
;;;292    	 }else{
;;;293    		appSerialCanDavinciDebugMsg("Can 1 ini fail");
000028  a00b              ADR      r0,|L4.88|
00002a  f7fffffe          BL       appSerialCanDavinciSendTextMessage
                  |L4.46|
;;;294      	}  
;;;295      	  	
;;;296    	#endif
;;;297      	LibSwTimerOpen(appSerialCanDavinciTimerHandler, 0);
00002e  2100              MOVS     r1,#0
000030  480d              LDR      r0,|L4.104|
000032  f7fffffe          BL       LibSwTimerOpen
;;;298    }
000036  b019              ADD      sp,sp,#0x64
000038  bd00              POP      {pc}
                  |L4.58|
00003a  a00c              ADR      r0,|L4.108|
00003c  f7fffffe          BL       appSerialCanDavinciSendTextMessage
000040  e7f5              B        |L4.46|
;;;299    
                          ENDP

000042  0000              DCW      0x0000
                  |L4.68|
                          DCD      DavinciCan_cb
                  |L4.72|
                          DCD      ||.data||+0x4
                  |L4.76|
00004c  43616e30          DCB      "Can0 ini %d",0
000050  20696e69
000054  20256400
                  |L4.88|
000058  43616e20          DCB      "Can 1 ini fail",0
00005c  3120696e
000060  69206661
000064  696c00  
000067  00                DCB      0
                  |L4.104|
                          DCD      appSerialCanDavinciTimerHandler
                  |L4.108|
00006c  43616e20          DCB      "Can 1 ini success",0
000070  3120696e
000074  69207375
000078  63636573
00007c  7300    
00007e  00                DCB      0
00007f  00                DCB      0

                          AREA ||i.appSerialCanDavinciPutPkgToCanFifo||, CODE, READONLY, ALIGN=2

                  appSerialCanDavinciPutPkgToCanFifo PROC
;;;206    
;;;207    void appSerialCanDavinciPutPkgToCanFifo(smp_can_package_t *pCanPkg)
000000  4601              MOV      r1,r0
;;;208    {
;;;209    //	SMP_CAN_GET_SCU_ID(id)		((id>>18)&0x7f)
;;;210    //	appSerialCanDavinciPutPkgToCanFifo
;;;211    	
;;;212    	smp_can_put(&mDavinci_can, pCanPkg);
000002  4801              LDR      r0,|L5.8|
000004  f7ffbffe          B.W      smp_can_put
;;;213    }
;;;214    
                          ENDP

                  |L5.8|
                          DCD      ||.data||+0x1c

                          AREA ||i.appSerialCanDavinciSendTextMessage||, CODE, READONLY, ALIGN=2

                  appSerialCanDavinciSendTextMessage PROC
;;;215    
;;;216    void appSerialCanDavinciSendTextMessage(char *msg)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;217    {
000004  b0c4              SUB      sp,sp,#0x110
000006  4605              MOV      r5,r0
;;;218    	uint8_t	buffer[256];
;;;219    	uint8_t	i,j,len,checksum,index;
;;;220    	smp_can_package_t	CanPkg;
;;;221    	uint8_t		scuid;
;;;222    	
;;;223    	if(appBmsIsScudIdReady() == 0)
000008  f7fffffe          BL       appBmsIsScudIdReady
00000c  b1c8              CBZ      r0,|L6.66|
;;;224    	{
;;;225    		scuid = 1;
;;;226    	//	return;
;;;227    	}
;;;228    	else
;;;229    	{
;;;230    		scuid = appProjectGetScuId();
00000e  f7fffffe          BL       appProjectGetScuId
000012  4680              MOV      r8,r0
                  |L6.20|
;;;231    	}
;;;232    	
;;;233    	len = strlen((char *)msg);
000014  4628              MOV      r0,r5
000016  f7fffffe          BL       strlen
00001a  b2c4              UXTB     r4,r0
;;;234    	buffer[0] = 0x5A;
00001c  205a              MOVS     r0,#0x5a
00001e  f88d0010          STRB     r0,[sp,#0x10]
;;;235    	buffer[1] = len + 5;
000022  1d60              ADDS     r0,r4,#5
000024  b2c0              UXTB     r0,r0
000026  f88d0011          STRB     r0,[sp,#0x11]
;;;236    	buffer[2] = 0;
00002a  2600              MOVS     r6,#0
00002c  f88d6012          STRB     r6,[sp,#0x12]
;;;237    	buffer[3] = 'T';
000030  2154              MOVS     r1,#0x54
000032  f88d1013          STRB     r1,[sp,#0x13]
;;;238    	checksum = 'T';
;;;239    	checksum ^= buffer[1];
000036  f0800354          EOR      r3,r0,#0x54
;;;240    	index = 4;
00003a  2204              MOVS     r2,#4
;;;241    	for(i=0; i<len; i++)
00003c  2100              MOVS     r1,#0
00003e  af04              ADD      r7,sp,#0x10           ;218
000040  e00d              B        |L6.94|
                  |L6.66|
000042  f04f0801          MOV      r8,#1                 ;225
000046  e7e5              B        |L6.20|
                  |L6.72|
;;;242    	{
;;;243    		buffer[index++] = msg[i];
000048  4610              MOV      r0,r2
00004a  f815c001          LDRB     r12,[r5,r1]
00004e  1c52              ADDS     r2,r2,#1
000050  b2d2              UXTB     r2,r2
000052  f807c000          STRB     r12,[r7,r0]
;;;244    		checksum ^= msg[i];
000056  5c68              LDRB     r0,[r5,r1]
000058  4043              EORS     r3,r3,r0
00005a  1c49              ADDS     r1,r1,#1              ;241
00005c  b2c9              UXTB     r1,r1                 ;241
                  |L6.94|
00005e  42a1              CMP      r1,r4                 ;241
000060  d3f2              BCC      |L6.72|
;;;245    	}
;;;246    	buffer[index++] = 0;
000062  1c50              ADDS     r0,r2,#1
000064  b2c0              UXTB     r0,r0
000066  54be              STRB     r6,[r7,r2]
;;;247    	buffer[index++] = checksum;
000068  1c41              ADDS     r1,r0,#1
00006a  b2c9              UXTB     r1,r1
00006c  543b              STRB     r3,[r7,r0]
;;;248    	buffer[index++] = 0x69;
00006e  2269              MOVS     r2,#0x69
000070  1c48              ADDS     r0,r1,#1
000072  b2c6              UXTB     r6,r0
000074  547a              STRB     r2,[r7,r1]
;;;249    
;;;250    
;;;251    	CanPkg.id = MAKE_SMP_CAN_ID(SMP_CAN_FUN_DEBUG_TX, scuid, //appProjectGetScuId(),
000076  480f              LDR      r0,|L6.180|
000078  ea404088          ORR      r0,r0,r8,LSL #18
00007c  9000              STR      r0,[sp,#0]
;;;252    									SMP_DEBUG_PKG_TX_OBJ_INDEX,
;;;253    									0);
;;;254    	for(i=0; i<index; i+=8)
00007e  2400              MOVS     r4,#0
000080  46e8              MOV      r8,sp                 ;220
000082  e011              B        |L6.168|
                  |L6.132|
;;;255    	{
;;;256    		len = index - i;
000084  1b30              SUBS     r0,r6,r4
000086  b2c5              UXTB     r5,r0
;;;257    		if(len > 8)
000088  2d08              CMP      r5,#8
00008a  d900              BLS      |L6.142|
;;;258    			len = 8;
00008c  2508              MOVS     r5,#8
                  |L6.142|
;;;259    		memcpy(CanPkg.dat, &buffer[i], len);
00008e  1939              ADDS     r1,r7,r4
000090  462a              MOV      r2,r5
000092  f1080005          ADD      r0,r8,#5
000096  f7fffffe          BL       __aeabi_memcpy
;;;260    		CanPkg.dlc = len;
00009a  f88d5004          STRB     r5,[sp,#4]
;;;261    		appSerialCanDavinciPutPkgToCanFifo(&CanPkg);
00009e  4668              MOV      r0,sp
0000a0  f7fffffe          BL       appSerialCanDavinciPutPkgToCanFifo
0000a4  3408              ADDS     r4,r4,#8              ;254
0000a6  b2e4              UXTB     r4,r4                 ;254
                  |L6.168|
0000a8  42b4              CMP      r4,r6                 ;254
0000aa  d3eb              BCC      |L6.132|
;;;262    	}
;;;263    }
0000ac  b044              ADD      sp,sp,#0x110
0000ae  e8bd81f0          POP      {r4-r8,pc}
;;;264    
                          ENDP

0000b2  0000              DCW      0x0000
                  |L6.180|
                          DCD      0x16001000

                          AREA ||i.appSerialCanDavinciTimerHandler||, CODE, READONLY, ALIGN=1

                  appSerialCanDavinciTimerHandler PROC
;;;266    
;;;267    void appSerialCanDavinciTimerHandler(__far void *dest, uint16_t evt, void *vDataPtr)
000000  4608              MOV      r0,r1
;;;268    {
;;;269    	if(evt == LIB_SW_TIMER_EVT_SW_1MS)
000002  280a              CMP      r0,#0xa
000004  d003              BEQ      |L7.14|
;;;270    	{
;;;271    		canDavinciPaserCanPackage();
;;;272    	}
;;;273    	else if(evt == LIB_SW_TIMER_EVT_SW_10MS_3)
000006  2803              CMP      r0,#3
000008  d103              BNE      |L7.18|
;;;274    	{
;;;275    		appSerialCanDavinciNotificationHandler(evt);
00000a  f7ffbffe          B.W      appSerialCanDavinciNotificationHandler
                  |L7.14|
00000e  f7ffbffe          B.W      canDavinciPaserCanPackage
                  |L7.18|
;;;276    	}
;;;277    }
000012  4770              BX       lr
;;;278    
                          ENDP


                          AREA ||i.canDavinciPaserCanPackage||, CODE, READONLY, ALIGN=2

                  canDavinciPaserCanPackage PROC
;;;164    
;;;165    static void canDavinciPaserCanPackage(void)
000000  b57f              PUSH     {r0-r6,lr}
;;;166    {
;;;167    	uint8_t	i,n;
;;;168    	smp_can_package_t	CanPkg;
;;;169    	uint8_t cmdIndex;
;;;170    	
;;;171    	char	str[100];
;;;172    	char	str1[100];
;;;173    	for(i=0; i<6; i++)
000002  2400              MOVS     r4,#0
;;;174    	{
;;;175    		if(smp_can_get(&mDavinci_can, &CanPkg) != SMP_SUCCESS)
;;;176    			break;
;;;177    		dump_danpackage(&CanPkg);	
;;;178    	 	cmdIndex = 0;
;;;179     		for(cmdIndex = 0; mDavinciCanFunDecodeTab[cmdIndex].fun != 0; cmdIndex++)
;;;180     		{
;;;181     			//sprintf(str,"%.8X %.8X %.8X",mDavinciCanFunDecodeTab[cmdIndex].canid,
;;;182     			//		mDavinciCanFunDecodeTab[cmdIndex].mask,
;;;183     			//		CanPkg.id
;;;184     			//	);
;;;185     			//appSerialCanDavinciDebugMsg(str);
;;;186     			
;;;187     			if((mDavinciCanFunDecodeTab[cmdIndex].canid & mDavinciCanFunDecodeTab[cmdIndex].mask) == 
000004  4d14              LDR      r5,|L8.88|
                  |L8.6|
000006  4669              MOV      r1,sp                 ;175
000008  4814              LDR      r0,|L8.92|
00000a  f7fffffe          BL       smp_can_get
00000e  2800              CMP      r0,#0                 ;175
000010  d121              BNE      |L8.86|
000012  4668              MOV      r0,sp                 ;177
000014  f7fffffe          BL       dump_danpackage
000018  2000              MOVS     r0,#0                 ;178
00001a  9b00              LDR      r3,[sp,#0]            ;168
00001c  e010              B        |L8.64|
                  |L8.30|
00001e  f8556021          LDR      r6,[r5,r1,LSL #2]
000022  6851              LDR      r1,[r2,#4]
000024  400e              ANDS     r6,r6,r1
000026  4019              ANDS     r1,r1,r3
000028  428e              CMP      r6,r1
00002a  d107              BNE      |L8.60|
;;;188     		  	 	(mDavinciCanFunDecodeTab[cmdIndex].mask & CanPkg.id))
;;;189     		  	{
;;;190     				mDavinciCanFunDecodeTab[cmdIndex].fun(&CanPkg);
00002c  eb000040          ADD      r0,r0,r0,LSL #1
000030  eb050080          ADD      r0,r5,r0,LSL #2
000034  6881              LDR      r1,[r0,#8]
000036  4668              MOV      r0,sp
000038  4788              BLX      r1
;;;191     				break;
00003a  e008              B        |L8.78|
                  |L8.60|
00003c  1c40              ADDS     r0,r0,#1              ;179
00003e  b2c0              UXTB     r0,r0                 ;179
                  |L8.64|
000040  eb000140          ADD      r1,r0,r0,LSL #1       ;179
000044  eb050281          ADD      r2,r5,r1,LSL #2       ;179
000048  6896              LDR      r6,[r2,#8]            ;179
00004a  2e00              CMP      r6,#0                 ;179
00004c  d1e7              BNE      |L8.30|
                  |L8.78|
00004e  1c64              ADDS     r4,r4,#1              ;173
000050  b2e4              UXTB     r4,r4                 ;173
000052  2c06              CMP      r4,#6                 ;173
000054  d3d7              BCC      |L8.6|
                  |L8.86|
;;;192     			}
;;;193     		}
;;;194    	}	
;;;195    		
;;;196    }
000056  bd7f              POP      {r0-r6,pc}
;;;197    
                          ENDP

                  |L8.88|
                          DCD      ||.constdata||
                  |L8.92|
                          DCD      ||.data||+0x1c

                          AREA ||i.dump_danpackage||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_sizespec
                          REQUIRE _printf_percent
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_d
                          REQUIRE _printf_x
                          REQUIRE _printf_int_dec
                          REQUIRE _printf_longlong_hex
                  dump_danpackage PROC
;;;148    }
;;;149    static void dump_danpackage(smp_can_package_t *pCanPkg)
000000  b530              PUSH     {r4,r5,lr}
;;;150    {
000002  b09d              SUB      sp,sp,#0x74
000004  4605              MOV      r5,r0
;;;151    	char	str[100];
;;;152    	char	str1[10];
;;;153    	int		i;
;;;154    	sprintf(str,"RCV: %.8lX %d",pCanPkg->id , pCanPkg->dlc);
000006  a10c              ADR      r1,|L9.56|
000008  792b              LDRB     r3,[r5,#4]
00000a  a804              ADD      r0,sp,#0x10
00000c  682a              LDR      r2,[r5,#0]
00000e  f7fffffe          BL       __2sprintf
;;;155    	
;;;156    	for(i=0; i<pCanPkg->dlc; i++)
000012  2400              MOVS     r4,#0
000014  e00a              B        |L9.44|
                  |L9.22|
;;;157    	{
;;;158    		sprintf(str1," %.2X",pCanPkg->dat[i]);
000016  1928              ADDS     r0,r5,r4
000018  a10b              ADR      r1,|L9.72|
00001a  7942              LDRB     r2,[r0,#5]
00001c  a801              ADD      r0,sp,#4
00001e  f7fffffe          BL       __2sprintf
;;;159    		strcat(str, str1);
000022  a901              ADD      r1,sp,#4
000024  a804              ADD      r0,sp,#0x10
000026  f7fffffe          BL       strcat
00002a  1c64              ADDS     r4,r4,#1              ;156
                  |L9.44|
00002c  7928              LDRB     r0,[r5,#4]            ;156
00002e  42a0              CMP      r0,r4                 ;156
000030  dcf1              BGT      |L9.22|
;;;160    	}
;;;161    //	appSerialCanDavinciDebugMsg(str);
;;;162    }
000032  b01d              ADD      sp,sp,#0x74
000034  bd30              POP      {r4,r5,pc}
;;;163    
                          ENDP

000036  0000              DCW      0x0000
                  |L9.56|
000038  5243563a          DCB      "RCV: %.8lX %d",0
00003c  20252e38
000040  6c582025
000044  6400    
000046  00                DCB      0
000047  00                DCB      0
                  |L9.72|
000048  20252e32          DCB      " %.2X",0
00004c  5800    
00004e  00                DCB      0
00004f  00                DCB      0

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  Davinci_can_tx_buffer
                          %        6400

                          AREA ||area_number.12||, DATA, NOINIT, ALIGN=2

                          EXPORTAS ||area_number.12||, ||.bss||
                  Davinci_can_rx_buffer
                          %        6400

                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

                  mDavinciCanFunDecodeTab
                          DCD      0x00000000
                          DCD      0x1e000000
                          DCD      DavinciCanFunBaseRxTx
                          DCD      0x02000000
                          DCD      0x1e000000
                          DCD      DavinciCanFunBaseRxTx
                          DCD      0x04000000
                          DCD      0x1e000000
                          DCD      DavinciCanFunCmdRx
                          DCD      0x14000000
                          DCD      0x1e000000
                          DCD      DavinciCanFunDebugRx
                          DCD      0x08000000
                          DCD      0x1e000000
                          DCD      DavinciCanFunCommonRx
                          DCD      0x0a000000
                          DCD      0x1e000000
                          DCD      DavinciCanFunCommonRx
                          DCD      0x18000000
                          DCD      0x1e000000
                          DCD      DavinciCanFunFuRx
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000

                          AREA ||.data||, DATA, ALIGN=2

                  can1_buf_c
                          DCD      0x00000000
                  mDavinci_can0
000004  00000000          DCB      0x00,0x00,0x00,0x00
                          DCD      0x0007a120
                          DCD      Davinci_can_rx_buffer
                          DCD      0x00000190
                          DCD      Davinci_can_tx_buffer
                          DCD      0x00000190
                  mDavinci_can
00001c  01000000          DCB      0x01,0x00,0x00,0x00
                          DCD      0x0007a120
                          DCD      Davinci_can_rx_buffer
                          DCD      0x00000190
                          DCD      Davinci_can_tx_buffer
                          DCD      0x00000190

;*** Start embedded assembler ***

#line 1 "..\\..\\..\\AppCommunication\\AppSerialCanDavinci.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___21_AppSerialCanDavinci_c_bdb2a0f7____REV16|
#line 492 "../../../Drivers/CMSIS/Include/cmsis_armcc.h"
|__asm___21_AppSerialCanDavinci_c_bdb2a0f7____REV16| PROC
#line 493

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___21_AppSerialCanDavinci_c_bdb2a0f7____REVSH|
#line 507
|__asm___21_AppSerialCanDavinci_c_bdb2a0f7____REVSH| PROC
#line 508

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___21_AppSerialCanDavinci_c_bdb2a0f7____RRX|
#line 694
|__asm___21_AppSerialCanDavinci_c_bdb2a0f7____RRX| PROC
#line 695

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
