; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\obj\apirelaycontrol.o --asm_dir=.\List\ --list_dir=.\List\ --depend=.\obj\apirelaycontrol.d --cpu=Cortex-M4.fp.sp --apcs=interwork -O1 --diag_suppress=9931 -I../Inc -I../../../Drivers/CMSIS/Include -I../../../Drivers/CMSIS/Device/ST/STM32L4xx/Include -I../../../Drivers/STM32L4xx_HAL_Driver/Inc -I../../../Drivers/BSP/STM32L4xx_Nucleo_144 -I..\..\..\User -I..\..\..\HAL -I..\..\..\Lib -I..\..\..\Config_Common -I..\..\..\AppProtect -I..\..\..\APP -I..\..\..\Lib\SMP -I..\..\..\Drivers\SMP -I..\..\..\BSP -I..\..\..\Drivers\BSP\STM32L496V_Davinci -I..\..\..\API -I..\..\..\AppCommunication -I..\..\..\Drivers\W5500 -I..\..\..\RTT -I.\RTE\_HVESS_Normal -IC:\Users\88691\AppData\Local\Arm\Packs\ARM\CMSIS\5.8.0\CMSIS\Core\Include -IC:\Users\88691\AppData\Local\Arm\Packs\Keil\STM32L4xx_DFP\2.6.0\Drivers\CMSIS\Device\ST\STM32L4xx\Include -D__MICROLIB -D__UVISION_VERSION=535 -D_RTE_ -DSTM32L496xx -D_RTE_ -DSTM32L496xx -DUSE_HAL_DRIVER -DUSE_STM32L4XX_NUCLEO_144 -DBSPSMPS -DUSE_STM32L4XX_NUCLEO_144_SMPS -DUSE_ADP5301ACBZ -W ..\..\..\API\ApiRelayControl.c]
                          THUMB

                          AREA ||i.apiRelayControlMainRelayOff||, CODE, READONLY, ALIGN=2

                  apiRelayControlMainRelayOff PROC
;;;179    
;;;180    void apiRelayControlMainRelayOff(void)
000000  b510              PUSH     {r4,lr}
;;;181    {
;;;182    	halBspPostiveRelayOff();
000002  f7fffffe          BL       halBspPostiveRelayOff
;;;183    	halBspNegtiveRelayOff();
000006  f7fffffe          BL       halBspNegtiveRelayOff
;;;184    	
;;;185    	halBspPreDischargeRelayOff();
00000a  f7fffffe          BL       halBspPreDischargeRelayOff
;;;186    	apiRelayControlFunctionProcessor = 0;
00000e  4803              LDR      r0,|L1.28|
000010  2100              MOVS     r1,#0
000012  6041              STR      r1,[r0,#4]  ; apiRelayControlFunctionProcessor
;;;187    	RelayOnStep = RELAY_CTRL_INI;
000014  7041              STRB     r1,[r0,#1]
;;;188    	MasterTurnOnRelayFlag = 0;
000016  7001              STRB     r1,[r0,#0]
;;;189    }
000018  bd10              POP      {r4,pc}
;;;190    
                          ENDP

00001a  0000              DCW      0x0000
                  |L1.28|
                          DCD      ||.data||

                          AREA ||i.apiRelayControlOpen||, CODE, READONLY, ALIGN=2

                  apiRelayControlOpen PROC
;;;190    
;;;191    void apiRelayControlOpen(void)
000000  2100              MOVS     r1,#0
;;;192    {
;;;193    	LibSwTimerOpen(relayControlSwTimerHandler, 0);
000002  4801              LDR      r0,|L2.8|
000004  f7ffbffe          B.W      LibSwTimerOpen
;;;194    }
;;;195    /************************ (C) COPYRIGHT Johnny Wang *****END OF FILE****/    
                          ENDP

                  |L2.8|
                          DCD      relayControlSwTimerHandler

                          AREA ||i.apiRelayControlSetMasterTurnOnFlag||, CODE, READONLY, ALIGN=2

                  apiRelayControlSetMasterTurnOnFlag PROC
;;;174    /* Public function prototypes -----------------------------------------------*/
;;;175    void apiRelayControlSetMasterTurnOnFlag(void)
000000  4901              LDR      r1,|L3.8|
;;;176    {
;;;177    	MasterTurnOnRelayFlag = 1;
000002  2001              MOVS     r0,#1
000004  7008              STRB     r0,[r1,#0]
;;;178    }
000006  4770              BX       lr
;;;179    
                          ENDP

                  |L3.8|
                          DCD      ||.data||

                          AREA ||i.checkRelayOn||, CODE, READONLY, ALIGN=2

                  checkRelayOn PROC
;;;104    
;;;105    static void checkRelayOn(void)
000000  b570              PUSH     {r4-r6,lr}
;;;106    {
;;;107    	uint32_t	SystemFlag1, SystemFlag2;
;;;108    	
;;;109    	SystemFlag1 = apiSystemFlagGetFlag1();
000002  f7fffffe          BL       apiSystemFlagGetFlag1
000006  4605              MOV      r5,r0
;;;110    	SystemFlag2 = apiSystemFlagGetFlag2();
000008  f7fffffe          BL       apiSystemFlagGetFlag2
00000c  4604              MOV      r4,r0
;;;111    	
;;;112    	if(SystemFlag2 & SYSTEM_FLAG2_RELAY_ON)
00000e  05e0              LSLS     r0,r4,#23
000010  d424              BMI      |L4.92|
;;;113    	{
;;;114    		return;
;;;115    	}
;;;116    //	else
;;;117    //	{
;;;118    //		RelayOnStep	= RELAY_CTRL_STEP_OFF;
;;;119    //	}
;;;120    	if(appProjectIsInEngMode())
000012  f7fffffe          BL       appProjectIsInEngMode
000016  2800              CMP      r0,#0
000018  d120              BNE      |L4.92|
;;;121    		return;
;;;122    	if(MasterTurnOnRelayFlag == 0)		
00001a  4e11              LDR      r6,|L4.96|
00001c  7830              LDRB     r0,[r6,#0]  ; MasterTurnOnRelayFlag
00001e  2800              CMP      r0,#0
000020  d01c              BEQ      |L4.92|
;;;123    		return;
;;;124    		
;;;125    	if((SystemFlag1 & SYSTEM_FLAG1_SYSTEM_READY) == 0)
000022  2d00              CMP      r5,#0
000024  da1a              BGE      |L4.92|
;;;126    		return;
;;;127    	
;;;128    //	if(SystemFlag2 & SYSTEM_FLAG2_RELAY_ON)		
;;;129    //		return;
;;;130    	if(SystemFlag1 & FLAG1_PROTECT_MASK)
000026  480f              LDR      r0,|L4.100|
000028  4205              TST      r5,r0
00002a  d117              BNE      |L4.92|
;;;131    		return;
;;;132    	if(SystemFlag2 & FLAG2_PROTECT_MASK)
00002c  f0140f78          TST      r4,#0x78
000030  d114              BNE      |L4.92|
;;;133    		return;
;;;134    
;;;135    	if(RelayOnStep != RELAY_CTRL_INI)
000032  7870              LDRB     r0,[r6,#1]  ; RelayOnStep
000034  2800              CMP      r0,#0
000036  d111              BNE      |L4.92|
;;;136    		return;
;;;137    		
;;;138    //		void halBspPreDischargeRelayOn(void);
;;;139    //void halBspPreDischargeRelayOff(void);
;;;140    
;;;141    //	HalBspK2Ctrl(1);
;;;142    	appRelayControlDebugMsg("On Pre..0");
000038  a00b              ADR      r0,|L4.104|
00003a  f7fffffe          BL       appSerialCanDavinciSendTextMessage
;;;143    	if(apiRelayControlFunctionProcessor == 0)
00003e  6870              LDR      r0,[r6,#4]  ; apiRelayControlFunctionProcessor
000040  2800              CMP      r0,#0
000042  d10b              BNE      |L4.92|
;;;144    	{
;;;145    		RelayOnStep = RELAY_CTRL_TURN_ON_PRE_RELAY;
000044  2001              MOVS     r0,#1
000046  7070              STRB     r0,[r6,#1]
;;;146    		apiRelayControlFunctionProcessor = turnOnRelayProcess;
000048  480a              LDR      r0,|L4.116|
00004a  6070              STR      r0,[r6,#4]  ; apiRelayControlFunctionProcessor
;;;147    		RELAY_POWER_ON();
00004c  2001              MOVS     r0,#1
00004e  f7fffffe          BL       HalBspRelayPsCtrl
;;;148    		appRelayControlDebugMsg("On Pre..1");
000052  e8bd4070          POP      {r4-r6,lr}
000056  a008              ADR      r0,|L4.120|
000058  f7ffbffe          B.W      appSerialCanDavinciSendTextMessage
                  |L4.92|
;;;149    	}
;;;150    
;;;151    //	P_MAIN_RELAY_ON();
;;;152    //	M_MAIN_RELAY_ON();
;;;153    }
00005c  bd70              POP      {r4-r6,pc}
;;;154    
                          ENDP

00005e  0000              DCW      0x0000
                  |L4.96|
                          DCD      ||.data||
                  |L4.100|
                          DCD      0x333924cc
                  |L4.104|
000068  4f6e2050          DCB      "On Pre..0",0
00006c  72652e2e
000070  3000    
000072  00                DCB      0
000073  00                DCB      0
                  |L4.116|
                          DCD      turnOnRelayProcess
                  |L4.120|
000078  4f6e2050          DCB      "On Pre..1",0
00007c  72652e2e
000080  3100    
000082  00                DCB      0
000083  00                DCB      0

                          AREA ||i.relayControlSwTimerHandler||, CODE, READONLY, ALIGN=2

                  relayControlSwTimerHandler PROC
;;;154    
;;;155    static void relayControlSwTimerHandler(__far void *dest, uint16_t evt, void *vDataPtr)
000000  290a              CMP      r1,#0xa
;;;156    {
000002  d00a              BEQ      |L5.26|
;;;157    //	GPIOD->ODR |= GPIO_PIN_14;
;;;158    	if(evt == LIB_SW_TIMER_EVT_SW_1MS)
;;;159    	{
;;;160    	}
;;;161    	else if(evt == LIB_SW_TIMER_EVT_SW_10MS_3)
000004  2903              CMP      r1,#3
000006  d003              BEQ      |L5.16|
;;;162    	{
;;;163    		if(apiRelayControlFunctionProcessor)
;;;164    			apiRelayControlFunctionProcessor();
;;;165    	}
;;;166    	else if(evt == LIB_SW_TIMER_EVT_SW_1S)
000008  290d              CMP      r1,#0xd
00000a  d106              BNE      |L5.26|
;;;167    	{
;;;168    		checkRelayOn();
00000c  f7ffbffe          B.W      checkRelayOn
                  |L5.16|
000010  4802              LDR      r0,|L5.28|
000012  6840              LDR      r0,[r0,#4]            ;163  ; apiRelayControlFunctionProcessor
000014  2800              CMP      r0,#0                 ;163
000016  d000              BEQ      |L5.26|
000018  4700              BX       r0                    ;164
                  |L5.26|
;;;169    		//appRelayControlDebugMsg("Relay Control");
;;;170    	}
;;;171    //	GPIOD->ODR &= ~GPIO_PIN_14;
;;;172    }
00001a  4770              BX       lr
;;;173    
                          ENDP

                  |L5.28|
                          DCD      ||.data||

                          AREA ||i.turnOnRelayProcess||, CODE, READONLY, ALIGN=2

                  turnOnRelayProcess PROC
;;;65     
;;;66     static void turnOnRelayProcess(void)
000000  b570              PUSH     {r4-r6,lr}
;;;67     {
;;;68     	switch(RelayOnStep)
000002  4c1b              LDR      r4,|L6.112|
000004  2500              MOVS     r5,#0
000006  7860              LDRB     r0,[r4,#1]  ; RelayOnStep
000008  2801              CMP      r0,#1
00000a  d014              BEQ      |L6.54|
00000c  4621              MOV      r1,r4
00000e  8849              LDRH     r1,[r1,#2]
;;;69     	{
;;;70     	case RELAY_CTRL_TURN_ON_PRE_RELAY:
;;;71     	 	DelayCount = 0;
;;;72     	 	halBspPreDischargeRelayOn();
;;;73     	 	RelayOnStep = RELAY_CTRL_PRE_DISCHARGE_DELAY;
;;;74     		break;
;;;75     	case RELAY_CTRL_PRE_DISCHARGE_DELAY:
;;;76     		DelayCount++;
000010  1c49              ADDS     r1,r1,#1
000012  b289              UXTH     r1,r1
000014  2802              CMP      r0,#2                 ;68
000016  d021              BEQ      |L6.92|
000018  2804              CMP      r0,#4                 ;68
00001a  d012              BEQ      |L6.66|
00001c  2806              CMP      r0,#6                 ;68
00001e  d10f              BNE      |L6.64|
;;;77     		if(DelayCount >= PreRelayOnTime10Ms())
;;;78     		{
;;;79     			RelayOnStep = RELAY_CTRL_TURN_ON_MAIN_RELAY;
;;;80     			appRelayControlDebugMsg("Main On");
;;;81     		}
;;;82     		break;
;;;83     	case RELAY_CTRL_TURN_ON_MAIN_RELAY:
;;;84     		DelayCount = 0;
000020  8065              STRH     r5,[r4,#2]
;;;85     		RelayOnStep = RELAY_CTRL_TURN_OFF_PRE_RELAY;
000022  2002              MOVS     r0,#2
000024  7060              STRB     r0,[r4,#1]
;;;86     		halBspPostiveRelayOn();
000026  f7fffffe          BL       halBspPostiveRelayOn
;;;87     		halBspNegtiveRelayOn();	
00002a  f7fffffe          BL       halBspNegtiveRelayOn
;;;88     		appProjectSetRelayOnFlag();
00002e  e8bd4070          POP      {r4-r6,lr}
000032  f7ffbffe          B.W      appProjectSetRelayOnFlag
                  |L6.54|
000036  8065              STRH     r5,[r4,#2]            ;71
000038  f7fffffe          BL       halBspPreDischargeRelayOn
00003c  2004              MOVS     r0,#4                 ;73
00003e  7060              STRB     r0,[r4,#1]            ;73
                  |L6.64|
;;;89     		break;
;;;90     	case RELAY_CTRL_TURN_OFF_PRE_RELAY:
;;;91     		DelayCount++;
;;;92     //		if(DelayCount >= 500)
;;;93     		if(DelayCount >= 100)
;;;94     		{
;;;95     			halBspPreDischargeRelayOff();
;;;96     			apiRelayControlFunctionProcessor = 0;
;;;97     			RelayOnStep = RELAY_CTRL_INI;
;;;98     			MasterTurnOnRelayFlag = 0;
;;;99     		}
;;;100    		break;
;;;101    	}
;;;102    }
000040  bd70              POP      {r4-r6,pc}
                  |L6.66|
000042  8061              STRH     r1,[r4,#2]            ;76
000044  f7fffffe          BL       apiSysParGetPreDischargeTime
000048  8861              LDRH     r1,[r4,#2]            ;77  ; DelayCount
00004a  4288              CMP      r0,r1                 ;77
00004c  d8f8              BHI      |L6.64|
00004e  2006              MOVS     r0,#6                 ;79
000050  7060              STRB     r0,[r4,#1]            ;79
000052  e8bd4070          POP      {r4-r6,lr}            ;80
000056  a007              ADR      r0,|L6.116|
000058  f7ffbffe          B.W      appSerialCanDavinciSendTextMessage
                  |L6.92|
00005c  8061              STRH     r1,[r4,#2]            ;91
00005e  2964              CMP      r1,#0x64              ;93
000060  d3ee              BCC      |L6.64|
000062  f7fffffe          BL       halBspPreDischargeRelayOff
000066  6065              STR      r5,[r4,#4]            ;96  ; apiRelayControlFunctionProcessor
000068  7065              STRB     r5,[r4,#1]            ;97
00006a  7025              STRB     r5,[r4,#0]            ;98
00006c  bd70              POP      {r4-r6,pc}
;;;103    
                          ENDP

00006e  0000              DCW      0x0000
                  |L6.112|
                          DCD      ||.data||
                  |L6.116|
000074  4d61696e          DCB      "Main On",0
000078  204f6e00

                          AREA ||.data||, DATA, ALIGN=2

                  MasterTurnOnRelayFlag
000000  00                DCB      0x00
                  RelayOnStep
000001  00                DCB      0x00
                  DelayCount
000002  0000              DCB      0x00,0x00
                  apiRelayControlFunctionProcessor
                          DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "..\\..\\..\\API\\ApiRelayControl.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___17_ApiRelayControl_c_f99ef335____REV16|
#line 492 "../../../Drivers/CMSIS/Include/cmsis_armcc.h"
|__asm___17_ApiRelayControl_c_f99ef335____REV16| PROC
#line 493

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___17_ApiRelayControl_c_f99ef335____REVSH|
#line 507
|__asm___17_ApiRelayControl_c_f99ef335____REVSH| PROC
#line 508

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___17_ApiRelayControl_c_f99ef335____RRX|
#line 694
|__asm___17_ApiRelayControl_c_f99ef335____RRX| PROC
#line 695

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
