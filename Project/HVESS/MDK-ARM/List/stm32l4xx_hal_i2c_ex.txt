; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\obj\stm32l4xx_hal_i2c_ex.o --asm_dir=.\List\ --list_dir=.\List\ --depend=.\obj\stm32l4xx_hal_i2c_ex.d --cpu=Cortex-M4.fp.sp --apcs=interwork -O1 --diag_suppress=9931 -I../Inc -I../../../Drivers/CMSIS/Include -I../../../Drivers/CMSIS/Device/ST/STM32L4xx/Include -I../../../Drivers/STM32L4xx_HAL_Driver/Inc -I../../../Drivers/BSP/STM32L4xx_Nucleo_144 -I..\..\..\User -I..\..\..\HAL -I..\..\..\Lib -I..\..\..\Config_Common -I..\..\..\AppProtect -I..\..\..\APP -I..\..\..\Lib\SMP -I..\..\..\Drivers\SMP -I..\..\..\BSP -I..\..\..\Drivers\BSP\STM32L496V_Davinci -I..\..\..\API -I..\..\..\AppCommunication -I..\..\..\Drivers\W5500 -I..\..\..\RTT -I.\RTE\_HVESS_Normal -IC:\Users\88691\AppData\Local\Arm\Packs\ARM\CMSIS\5.8.0\CMSIS\Core\Include -IC:\Users\88691\AppData\Local\Arm\Packs\Keil\STM32L4xx_DFP\2.6.0\Drivers\CMSIS\Device\ST\STM32L4xx\Include -D__MICROLIB -D__UVISION_VERSION=535 -D_RTE_ -DSTM32L496xx -D_RTE_ -DSTM32L496xx -DUSE_HAL_DRIVER -DUSE_STM32L4XX_NUCLEO_144 -DBSPSMPS -DUSE_STM32L4XX_NUCLEO_144_SMPS -DUSE_ADP5301ACBZ -W ..\..\..\Drivers\STM32L4xx_HAL_Driver\Src\stm32l4xx_hal_i2c_ex.c]
                          THUMB

                          AREA ||i.HAL_I2CEx_ConfigAnalogFilter||, CODE, READONLY, ALIGN=1

                  HAL_I2CEx_ConfigAnalogFilter PROC
;;;96       */
;;;97     HAL_StatusTypeDef HAL_I2CEx_ConfigAnalogFilter(I2C_HandleTypeDef *hi2c, uint32_t AnalogFilter)
000000  f8902041          LDRB     r2,[r0,#0x41]
;;;98     {
;;;99       /* Check the parameters */
;;;100      assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
;;;101      assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));
;;;102    
;;;103      if (hi2c->State == HAL_I2C_STATE_READY)
000004  2a20              CMP      r2,#0x20
000006  d001              BEQ      |L1.12|
;;;104      {
;;;105        /* Process Locked */
;;;106        __HAL_LOCK(hi2c);
;;;107    
;;;108        hi2c->State = HAL_I2C_STATE_BUSY;
;;;109    
;;;110        /* Disable the selected I2C peripheral */
;;;111        __HAL_I2C_DISABLE(hi2c);
;;;112    
;;;113        /* Reset I2Cx ANOFF bit */
;;;114        hi2c->Instance->CR1 &= ~(I2C_CR1_ANFOFF);
;;;115    
;;;116        /* Set analog filter bit*/
;;;117        hi2c->Instance->CR1 |= AnalogFilter;
;;;118    
;;;119        __HAL_I2C_ENABLE(hi2c);
;;;120    
;;;121        hi2c->State = HAL_I2C_STATE_READY;
;;;122    
;;;123        /* Process Unlocked */
;;;124        __HAL_UNLOCK(hi2c);
;;;125    
;;;126        return HAL_OK;
;;;127      }
;;;128      else
;;;129      {
;;;130        return HAL_BUSY;
000008  2002              MOVS     r0,#2
;;;131      }
;;;132    }
00000a  4770              BX       lr
                  |L1.12|
00000c  f8902040          LDRB     r2,[r0,#0x40]         ;106
000010  2a01              CMP      r2,#1                 ;106
000012  d020              BEQ      |L1.86|
000014  2201              MOVS     r2,#1                 ;106
000016  f8802040          STRB     r2,[r0,#0x40]         ;106
00001a  2224              MOVS     r2,#0x24              ;108
00001c  f8802041          STRB     r2,[r0,#0x41]         ;108
000020  6802              LDR      r2,[r0,#0]            ;111
000022  6813              LDR      r3,[r2,#0]            ;111
000024  f0230301          BIC      r3,r3,#1              ;111
000028  6013              STR      r3,[r2,#0]            ;111
00002a  6802              LDR      r2,[r0,#0]            ;114
00002c  6813              LDR      r3,[r2,#0]            ;114
00002e  f4235380          BIC      r3,r3,#0x1000         ;114
000032  6013              STR      r3,[r2,#0]            ;114
000034  6802              LDR      r2,[r0,#0]            ;117
000036  6813              LDR      r3,[r2,#0]            ;117
000038  430b              ORRS     r3,r3,r1              ;117
00003a  6013              STR      r3,[r2,#0]            ;117
00003c  6801              LDR      r1,[r0,#0]            ;119
00003e  680a              LDR      r2,[r1,#0]            ;119
000040  f0420201          ORR      r2,r2,#1              ;119
000044  600a              STR      r2,[r1,#0]            ;119
000046  2120              MOVS     r1,#0x20              ;121
000048  f8801041          STRB     r1,[r0,#0x41]         ;121
00004c  2100              MOVS     r1,#0                 ;124
00004e  f8801040          STRB     r1,[r0,#0x40]         ;124
000052  2000              MOVS     r0,#0                 ;126
000054  4770              BX       lr
                  |L1.86|
000056  2002              MOVS     r0,#2                 ;106
000058  4770              BX       lr
;;;133    
                          ENDP


                          AREA ||i.HAL_I2CEx_ConfigDigitalFilter||, CODE, READONLY, ALIGN=1

                  HAL_I2CEx_ConfigDigitalFilter PROC
;;;140      */
;;;141    HAL_StatusTypeDef HAL_I2CEx_ConfigDigitalFilter(I2C_HandleTypeDef *hi2c, uint32_t DigitalFilter)
000000  f8902041          LDRB     r2,[r0,#0x41]
;;;142    {
;;;143      uint32_t tmpreg;
;;;144    
;;;145      /* Check the parameters */
;;;146      assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
;;;147      assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));
;;;148    
;;;149      if (hi2c->State == HAL_I2C_STATE_READY)
000004  2a20              CMP      r2,#0x20
000006  d001              BEQ      |L2.12|
;;;150      {
;;;151        /* Process Locked */
;;;152        __HAL_LOCK(hi2c);
;;;153    
;;;154        hi2c->State = HAL_I2C_STATE_BUSY;
;;;155    
;;;156        /* Disable the selected I2C peripheral */
;;;157        __HAL_I2C_DISABLE(hi2c);
;;;158    
;;;159        /* Get the old register value */
;;;160        tmpreg = hi2c->Instance->CR1;
;;;161    
;;;162        /* Reset I2Cx DNF bits [11:8] */
;;;163        tmpreg &= ~(I2C_CR1_DNF);
;;;164    
;;;165        /* Set I2Cx DNF coefficient */
;;;166        tmpreg |= DigitalFilter << 8U;
;;;167    
;;;168        /* Store the new register value */
;;;169        hi2c->Instance->CR1 = tmpreg;
;;;170    
;;;171        __HAL_I2C_ENABLE(hi2c);
;;;172    
;;;173        hi2c->State = HAL_I2C_STATE_READY;
;;;174    
;;;175        /* Process Unlocked */
;;;176        __HAL_UNLOCK(hi2c);
;;;177    
;;;178        return HAL_OK;
;;;179      }
;;;180      else
;;;181      {
;;;182        return HAL_BUSY;
000008  2002              MOVS     r0,#2
;;;183      }
;;;184    }
00000a  4770              BX       lr
                  |L2.12|
00000c  f8902040          LDRB     r2,[r0,#0x40]         ;152
000010  2a01              CMP      r2,#1                 ;152
000012  d01e              BEQ      |L2.82|
000014  2201              MOVS     r2,#1                 ;152
000016  f8802040          STRB     r2,[r0,#0x40]         ;152
00001a  2224              MOVS     r2,#0x24              ;154
00001c  f8802041          STRB     r2,[r0,#0x41]         ;154
000020  6802              LDR      r2,[r0,#0]            ;157
000022  6813              LDR      r3,[r2,#0]            ;157
000024  f0230301          BIC      r3,r3,#1              ;157
000028  6013              STR      r3,[r2,#0]            ;157
00002a  6802              LDR      r2,[r0,#0]            ;160
00002c  6813              LDR      r3,[r2,#0]            ;160
00002e  f4236370          BIC      r3,r3,#0xf00          ;163
000032  ea432101          ORR      r1,r3,r1,LSL #8       ;166
000036  6011              STR      r1,[r2,#0]            ;169
000038  6801              LDR      r1,[r0,#0]            ;171
00003a  680a              LDR      r2,[r1,#0]            ;171
00003c  f0420201          ORR      r2,r2,#1              ;171
000040  600a              STR      r2,[r1,#0]            ;171
000042  2120              MOVS     r1,#0x20              ;173
000044  f8801041          STRB     r1,[r0,#0x41]         ;173
000048  2100              MOVS     r1,#0                 ;176
00004a  f8801040          STRB     r1,[r0,#0x40]         ;176
00004e  2000              MOVS     r0,#0                 ;178
000050  4770              BX       lr
                  |L2.82|
000052  2002              MOVS     r0,#2                 ;152
000054  4770              BX       lr
;;;185    
                          ENDP


                          AREA ||i.HAL_I2CEx_DisableFastModePlus||, CODE, READONLY, ALIGN=2

                  HAL_I2CEx_DisableFastModePlus PROC
;;;309      */
;;;310    void HAL_I2CEx_DisableFastModePlus(uint32_t ConfigFastModePlus)
000000  b508              PUSH     {r3,lr}
;;;311    {
;;;312      /* Check the parameter */
;;;313      assert_param(IS_I2C_FASTMODEPLUS(ConfigFastModePlus));
;;;314    
;;;315      /* Enable SYSCFG clock */
;;;316      __HAL_RCC_SYSCFG_CLK_ENABLE();
000002  4907              LDR      r1,|L3.32|
000004  6e0a              LDR      r2,[r1,#0x60]
000006  f0420201          ORR      r2,r2,#1
00000a  660a              STR      r2,[r1,#0x60]
00000c  6e09              LDR      r1,[r1,#0x60]
00000e  f0010101          AND      r1,r1,#1
000012  9100              STR      r1,[sp,#0]
;;;317    
;;;318      /* Disable fast mode plus driving capability for selected pin */
;;;319      CLEAR_BIT(SYSCFG->CFGR1, (uint32_t)ConfigFastModePlus);
000014  4903              LDR      r1,|L3.36|
000016  684a              LDR      r2,[r1,#4]
000018  4382              BICS     r2,r2,r0
00001a  604a              STR      r2,[r1,#4]
;;;320    }
00001c  bd08              POP      {r3,pc}
;;;321    
                          ENDP

00001e  0000              DCW      0x0000
                  |L3.32|
                          DCD      0x40021000
                  |L3.36|
                          DCD      0x40010000

                          AREA ||i.HAL_I2CEx_DisableWakeUp||, CODE, READONLY, ALIGN=1

                  HAL_I2CEx_DisableWakeUp PROC
;;;230      */
;;;231    HAL_StatusTypeDef HAL_I2CEx_DisableWakeUp(I2C_HandleTypeDef *hi2c)
000000  f8901041          LDRB     r1,[r0,#0x41]
;;;232    {
;;;233      /* Check the parameters */
;;;234      assert_param(IS_I2C_WAKEUP_FROMSTOP_INSTANCE(hi2c->Instance));
;;;235    
;;;236      if (hi2c->State == HAL_I2C_STATE_READY)
000004  2920              CMP      r1,#0x20
000006  d001              BEQ      |L4.12|
;;;237      {
;;;238        /* Process Locked */
;;;239        __HAL_LOCK(hi2c);
;;;240    
;;;241        hi2c->State = HAL_I2C_STATE_BUSY;
;;;242    
;;;243        /* Disable the selected I2C peripheral */
;;;244        __HAL_I2C_DISABLE(hi2c);
;;;245    
;;;246        /* Enable wakeup from stop mode */
;;;247        hi2c->Instance->CR1 &= ~(I2C_CR1_WUPEN);
;;;248    
;;;249        __HAL_I2C_ENABLE(hi2c);
;;;250    
;;;251        hi2c->State = HAL_I2C_STATE_READY;
;;;252    
;;;253        /* Process Unlocked */
;;;254        __HAL_UNLOCK(hi2c);
;;;255    
;;;256        return HAL_OK;
;;;257      }
;;;258      else
;;;259      {
;;;260        return HAL_BUSY;
000008  2002              MOVS     r0,#2
;;;261      }
;;;262    }
00000a  4770              BX       lr
                  |L4.12|
00000c  f8901040          LDRB     r1,[r0,#0x40]         ;239
000010  2901              CMP      r1,#1                 ;239
000012  d01c              BEQ      |L4.78|
000014  2101              MOVS     r1,#1                 ;239
000016  f8801040          STRB     r1,[r0,#0x40]         ;239
00001a  2124              MOVS     r1,#0x24              ;241
00001c  f8801041          STRB     r1,[r0,#0x41]         ;241
000020  6801              LDR      r1,[r0,#0]            ;244
000022  680a              LDR      r2,[r1,#0]            ;244
000024  f0220201          BIC      r2,r2,#1              ;244
000028  600a              STR      r2,[r1,#0]            ;244
00002a  6801              LDR      r1,[r0,#0]            ;247
00002c  680a              LDR      r2,[r1,#0]            ;247
00002e  f4222280          BIC      r2,r2,#0x40000        ;247
000032  600a              STR      r2,[r1,#0]            ;247
000034  6801              LDR      r1,[r0,#0]            ;249
000036  680a              LDR      r2,[r1,#0]            ;249
000038  f0420201          ORR      r2,r2,#1              ;249
00003c  600a              STR      r2,[r1,#0]            ;249
00003e  2120              MOVS     r1,#0x20              ;251
000040  f8801041          STRB     r1,[r0,#0x41]         ;251
000044  2100              MOVS     r1,#0                 ;254
000046  f8801040          STRB     r1,[r0,#0x40]         ;254
00004a  2000              MOVS     r0,#0                 ;256
00004c  4770              BX       lr
                  |L4.78|
00004e  2002              MOVS     r0,#2                 ;239
000050  4770              BX       lr
;;;263    
                          ENDP


                          AREA ||i.HAL_I2CEx_EnableFastModePlus||, CODE, READONLY, ALIGN=2

                  HAL_I2CEx_EnableFastModePlus PROC
;;;280      */
;;;281    void HAL_I2CEx_EnableFastModePlus(uint32_t ConfigFastModePlus)
000000  b508              PUSH     {r3,lr}
;;;282    {
;;;283      /* Check the parameter */
;;;284      assert_param(IS_I2C_FASTMODEPLUS(ConfigFastModePlus));
;;;285    
;;;286      /* Enable SYSCFG clock */
;;;287      __HAL_RCC_SYSCFG_CLK_ENABLE();
000002  4907              LDR      r1,|L5.32|
000004  6e0a              LDR      r2,[r1,#0x60]
000006  f0420201          ORR      r2,r2,#1
00000a  660a              STR      r2,[r1,#0x60]
00000c  6e09              LDR      r1,[r1,#0x60]
00000e  f0010101          AND      r1,r1,#1
000012  9100              STR      r1,[sp,#0]
;;;288    
;;;289      /* Enable fast mode plus driving capability for selected pin */
;;;290      SET_BIT(SYSCFG->CFGR1, (uint32_t)ConfigFastModePlus);
000014  4903              LDR      r1,|L5.36|
000016  684a              LDR      r2,[r1,#4]
000018  4302              ORRS     r2,r2,r0
00001a  604a              STR      r2,[r1,#4]
;;;291    }
00001c  bd08              POP      {r3,pc}
;;;292    
                          ENDP

00001e  0000              DCW      0x0000
                  |L5.32|
                          DCD      0x40021000
                  |L5.36|
                          DCD      0x40010000

                          AREA ||i.HAL_I2CEx_EnableWakeUp||, CODE, READONLY, ALIGN=1

                  HAL_I2CEx_EnableWakeUp PROC
;;;191      */
;;;192    HAL_StatusTypeDef HAL_I2CEx_EnableWakeUp(I2C_HandleTypeDef *hi2c)
000000  f8901041          LDRB     r1,[r0,#0x41]
;;;193    {
;;;194      /* Check the parameters */
;;;195      assert_param(IS_I2C_WAKEUP_FROMSTOP_INSTANCE(hi2c->Instance));
;;;196    
;;;197      if (hi2c->State == HAL_I2C_STATE_READY)
000004  2920              CMP      r1,#0x20
000006  d001              BEQ      |L6.12|
;;;198      {
;;;199        /* Process Locked */
;;;200        __HAL_LOCK(hi2c);
;;;201    
;;;202        hi2c->State = HAL_I2C_STATE_BUSY;
;;;203    
;;;204        /* Disable the selected I2C peripheral */
;;;205        __HAL_I2C_DISABLE(hi2c);
;;;206    
;;;207        /* Enable wakeup from stop mode */
;;;208        hi2c->Instance->CR1 |= I2C_CR1_WUPEN;
;;;209    
;;;210        __HAL_I2C_ENABLE(hi2c);
;;;211    
;;;212        hi2c->State = HAL_I2C_STATE_READY;
;;;213    
;;;214        /* Process Unlocked */
;;;215        __HAL_UNLOCK(hi2c);
;;;216    
;;;217        return HAL_OK;
;;;218      }
;;;219      else
;;;220      {
;;;221        return HAL_BUSY;
000008  2002              MOVS     r0,#2
;;;222      }
;;;223    }
00000a  4770              BX       lr
                  |L6.12|
00000c  f8901040          LDRB     r1,[r0,#0x40]         ;200
000010  2901              CMP      r1,#1                 ;200
000012  d01c              BEQ      |L6.78|
000014  2101              MOVS     r1,#1                 ;200
000016  f8801040          STRB     r1,[r0,#0x40]         ;200
00001a  2124              MOVS     r1,#0x24              ;202
00001c  f8801041          STRB     r1,[r0,#0x41]         ;202
000020  6801              LDR      r1,[r0,#0]            ;205
000022  680a              LDR      r2,[r1,#0]            ;205
000024  f0220201          BIC      r2,r2,#1              ;205
000028  600a              STR      r2,[r1,#0]            ;205
00002a  6801              LDR      r1,[r0,#0]            ;208
00002c  680a              LDR      r2,[r1,#0]            ;208
00002e  f4422280          ORR      r2,r2,#0x40000        ;208
000032  600a              STR      r2,[r1,#0]            ;208
000034  6801              LDR      r1,[r0,#0]            ;210
000036  680a              LDR      r2,[r1,#0]            ;210
000038  f0420201          ORR      r2,r2,#1              ;210
00003c  600a              STR      r2,[r1,#0]            ;210
00003e  2120              MOVS     r1,#0x20              ;212
000040  f8801041          STRB     r1,[r0,#0x41]         ;212
000044  2100              MOVS     r1,#0                 ;215
000046  f8801040          STRB     r1,[r0,#0x40]         ;215
00004a  2000              MOVS     r0,#0                 ;217
00004c  4770              BX       lr
                  |L6.78|
00004e  2002              MOVS     r0,#2                 ;200
000050  4770              BX       lr
;;;224    
                          ENDP


;*** Start embedded assembler ***

#line 1 "..\\..\\..\\Drivers\\STM32L4xx_HAL_Driver\\Src\\stm32l4xx_hal_i2c_ex.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___22_stm32l4xx_hal_i2c_ex_c_a642fad8____REV16|
#line 492 "../../../Drivers/CMSIS/Include/cmsis_armcc.h"
|__asm___22_stm32l4xx_hal_i2c_ex_c_a642fad8____REV16| PROC
#line 493

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___22_stm32l4xx_hal_i2c_ex_c_a642fad8____REVSH|
#line 507
|__asm___22_stm32l4xx_hal_i2c_ex_c_a642fad8____REVSH| PROC
#line 508

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___22_stm32l4xx_hal_i2c_ex_c_a642fad8____RRX|
#line 694
|__asm___22_stm32l4xx_hal_i2c_ex_c_a642fad8____RRX| PROC
#line 695

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
