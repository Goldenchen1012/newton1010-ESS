; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\obj\apifuflashrom.o --asm_dir=.\List\ --list_dir=.\List\ --depend=.\obj\apifuflashrom.d --cpu=Cortex-M4.fp.sp --apcs=interwork -O1 --diag_suppress=9931 -I../Inc -I../../../Drivers/CMSIS/Include -I../../../Drivers/CMSIS/Device/ST/STM32L4xx/Include -I../../../Drivers/STM32L4xx_HAL_Driver/Inc -I../../../Drivers/BSP/STM32L4xx_Nucleo_144 -I..\..\..\User -I..\..\..\HAL -I..\..\..\Lib -I..\..\..\Config_Common -I..\..\..\AppProtect -I..\..\..\APP -I..\..\..\Lib\SMP -I..\..\..\Drivers\SMP -I..\..\..\BSP -I..\..\..\Drivers\BSP\STM32L496V_Davinci -I..\..\..\API -I..\..\..\AppCommunication -I..\..\..\Drivers\W5500 -I..\..\..\RTT -I.\RTE\_HVESS_Normal -IC:\Users\88691\AppData\Local\Arm\Packs\ARM\CMSIS\5.8.0\CMSIS\Core\Include -IC:\Users\88691\AppData\Local\Arm\Packs\Keil\STM32L4xx_DFP\2.6.0\Drivers\CMSIS\Device\ST\STM32L4xx\Include -D__MICROLIB -D__UVISION_VERSION=535 -D_RTE_ -DSTM32L496xx -D_RTE_ -DSTM32L496xx -DUSE_HAL_DRIVER -DUSE_STM32L4XX_NUCLEO_144 -DBSPSMPS -DUSE_STM32L4XX_NUCLEO_144_SMPS -DUSE_ADP5301ACBZ -W ..\..\..\API\ApiFuFlashRom.c]
                          THUMB

                          AREA ||i.apiFuGetFwCheckStatus||, CODE, READONLY, ALIGN=2

                  apiFuGetFwCheckStatus PROC
;;;387    }
;;;388    uint8_t	apiFuGetFwCheckStatus(void)
000000  4801              LDR      r0,|L1.8|
;;;389    {
;;;390    	return FwUpdateInfo.FwCheckStatus;
000002  f8900223          LDRB     r0,[r0,#0x223]  ; FwUpdateInfo
;;;391    }
000006  4770              BX       lr
;;;392    
                          ENDP

                  |L1.8|
                          DCD      ||.bss||

                          AREA ||i.apiFuRcvSetBaseAddr||, CODE, READONLY, ALIGN=2

                  apiFuRcvSetBaseAddr PROC
;;;266    
;;;267    void apiFuRcvSetBaseAddr(uint32_t BaseAddr)
000000  4903              LDR      r1,|L2.16|
;;;268    {
;;;269    //	fuDebugMsg("Base Addr");
;;;270    	//if(BaseAddr == EEPROM_FW_SECTOR_ADDR)
;;;271    	{
;;;272    		FwUpdateInfo.BaseAddress = BaseAddr;
000002  6008              STR      r0,[r1,#0]  ; FwUpdateInfo
;;;273    		FwUpdateInfo.InfoStatus |= FW_UPDATE_STATUS_BASEADDR;
000004  7d88              LDRB     r0,[r1,#0x16]  ; FwUpdateInfo
000006  f0400008          ORR      r0,r0,#8
00000a  7588              STRB     r0,[r1,#0x16]
;;;274    		//FwUpdatePackageIdleTime=FWUPDATE_INFO_IDLE_TIME;
;;;275    
;;;276    #ifdef SHOW_PDO_DEBUG_MSG				
;;;277    				//sprintf(str,"Rcv Base Address:%.8lX",FwUpdateInfo.BaseAddress);
;;;278    				//SendUartMessage((BYTE *)str);
;;;279    				//sprintf(str,"InfoStatus:%.2X",FwUpdateInfo.InfoStatus);
;;;280    				//SendUartMessage((BYTE *)str);
;;;281    #endif				
;;;282    	}
;;;283    }	
00000c  4770              BX       lr
;;;284    
                          ENDP

00000e  0000              DCW      0x0000
                  |L2.16|
                          DCD      ||.bss||+0xc

                          AREA ||i.apiFuRcvSetVersion||, CODE, READONLY, ALIGN=2

                  apiFuRcvSetVersion PROC
;;;234    
;;;235    void apiFuRcvSetVersion(uint32_t Version)
000000  4802              LDR      r0,|L3.12|
;;;236    {
;;;237    	//-------------------------------
;;;238    	//	check fw version
;;;239    //	fuDebugMsg("Version");
;;;240    	//if(Version > FwHeaderInfo.Version.l)	//版本號比ROM 裡面的新,可以更新FW
;;;241    	if(1)
;;;242    	{
;;;243    		//fuDebugMsg("apiFuRcvSetVersion....0");
;;;244    		FwUpdateInfo.InfoStatus |= FW_UPDATE_STATUS_VERSION;
000002  7801              LDRB     r1,[r0,#0]  ; FwUpdateInfo
000004  f0410102          ORR      r1,r1,#2
000008  7001              STRB     r1,[r0,#0]
;;;245    //		FwUpdatePackageIdleTime = FWUPDATE_INFO_IDLE_TIME;
;;;246    #ifdef SHOW_PDO_DEBUG_MSG				
;;;247    		//sprintf(str,"Ver1:%.8lX %.8lX",value,FwHeaderInfo.Version.l);
;;;248    		//SendUartMessage((BYTE *)str);
;;;249    #endif				
;;;250    	}
;;;251    	else
;;;252    	{
;;;253    #ifdef SHOW_PDO_DEBUG_MSG				
;;;254    		//sprintf(str,"Ver2:%.8lX %.8lX",value,FwHeaderInfo.Version.l);
;;;255    		//SendUartMessage((BYTE *)str);
;;;256    #endif				
;;;257    		;
;;;258    	}
;;;259    	if((FwUpdateInfo.InfoStatus&0x0f) == 0x0f)
;;;260    	{
;;;261    		//FwHeadInfoTime=30;
;;;262    		//		SystemParameter.Battery[0].SystemFlag2.l|=SYSTEMFLAG2_RCV_FW_UPDATE_HEAD_INFO;
;;;263    		//		SystemParameter.Battery[1].SystemFlag2.l|=SYSTEMFLAG2_RCV_FW_UPDATE_HEAD_INFO;
;;;264    	}
;;;265    }
00000a  4770              BX       lr
;;;266    
                          ENDP

                  |L3.12|
                          DCD      ||.bss||+0x22

                          AREA ||i.apiFuSetTotalPackageNum||, CODE, READONLY, ALIGN=2

                  apiFuSetTotalPackageNum PROC
;;;224    }
;;;225    void apiFuSetTotalPackageNum(uint32_t num)
000000  4905              LDR      r1,|L4.24|
;;;226    {
;;;227    	FwUpdateInfo.FwPackageNum = num;
000002  b280              UXTH     r0,r0
000004  8208              STRH     r0,[r1,#0x10]
;;;228    	if(FwUpdateInfo.FwPackageNum)
000006  2800              CMP      r0,#0
000008  d004              BEQ      |L4.20|
;;;229    	{
;;;230    		FwUpdateInfo.InfoStatus |= FW_UPDATE_STATUS_PACKAGENUM;
00000a  f8110f22          LDRB     r0,[r1,#0x22]!  ; FwUpdateInfo
00000e  f0400004          ORR      r0,r0,#4
000012  7008              STRB     r0,[r1,#0]
                  |L4.20|
;;;231    //		fuDebugMsg("apiFuSetTotalPackageNum....0");
;;;232    	}
;;;233    }
000014  4770              BX       lr
;;;234    
                          ENDP

000016  0000              DCW      0x0000
                  |L4.24|
                          DCD      ||.bss||

                          AREA ||i.apiFuSetUpgradeData||, CODE, READONLY, ALIGN=2

                  apiFuSetUpgradeData PROC
;;;284    
;;;285    void apiFuSetUpgradeData(uint32_t address, uint8_t *pDatBuf, uint16_t leng)
000000  e92d47f0          PUSH     {r4-r10,lr}
;;;286    {
000004  b086              SUB      sp,sp,#0x18
000006  4605              MOV      r5,r0
000008  4688              MOV      r8,r1
00000a  4692              MOV      r10,r2
;;;287    	const uint8_t	BitsTab[]={0x01,0x02,0x04,0x08,0x10,0x20,0x40,0x80};
00000c  a04b              ADR      r0,|L5.316|
00000e  c803              LDM      r0,{r0,r1}
000010  e9cd0104          STRD     r0,r1,[sp,#0x10]
;;;288    	uint16_t	u16;
;;;289    	uint8_t		offset,B,b,i;
;;;290    	char	str[100];
;;;291    	uint8_t		buffer[10];
;;;292    	
;;;293    	if(isValidInfoStatus() == 0)
000014  f7fffffe          BL       isValidInfoStatus
000018  2800              CMP      r0,#0
00001a  d07a              BEQ      |L5.274|
;;;294    	{
;;;295    		//fuDebugMsg("Rcv Data....0");
;;;296    		return;
;;;297    	}
;;;298    		
;;;299    	if(FwUpdateInfo.FwPackageNumCnt >= FwUpdateInfo.FwPackageNum)
00001c  4e49              LDR      r6,|L5.324|
00001e  8a70              LDRH     r0,[r6,#0x12]  ; FwUpdateInfo
000020  8a31              LDRH     r1,[r6,#0x10]  ; FwUpdateInfo
000022  4288              CMP      r0,r1
000024  d275              BCS      |L5.274|
;;;300    	{
;;;301    		//fuDebugMsg("Rcv Data....1");
;;;302    		return;
;;;303    	}
;;;304    	if(FwUpdateInfo.UpdateAddressTemp == address)
000026  68b0              LDR      r0,[r6,#8]  ; FwUpdateInfo
000028  42a8              CMP      r0,r5
00002a  d072              BEQ      |L5.274|
;;;305    	{
;;;306    		//fuDebugMsg("Rcv Data....2");
;;;307    		return;		//??????
;;;308    	}
;;;309    	//sprintf(str, "Rcv Data....:%.6lX %d" , address,leng);
;;;310    	//fuDebugMsg(str);
;;;311    
;;;312    	for(u16=0 ;u16<leng; u16 += 8)
00002c  2700              MOVS     r7,#0
00002e  46b9              MOV      r9,r7
000030  e07d              B        |L5.302|
                  |L5.50|
;;;313    	{				
;;;314    #if	1
;;;315    		if((FwUpdateInfo.UpdateAddress[FwUpdateInfo.FwBufIndexEptr].l&0xffffff00) != 
000032  f8960021          LDRB     r0,[r6,#0x21]  ; FwUpdateInfo
000036  f8561020          LDR      r1,[r6,r0,LSL #2]
00003a  1209              ASRS     r1,r1,#8
00003c  ebb12f25          CMP      r1,r5,ASR #8
000040  d003              BEQ      |L5.74|
;;;316    		   (address&0xffffff00L))
;;;317    		{
;;;318    			FwUpdateInfo.CodeBufStatus[FwUpdateInfo.FwBufIndexEptr].l = 0;
000042  eb060080          ADD      r0,r6,r0,LSL #2
000046  f8c09018          STR      r9,[r0,#0x18]
                  |L5.74|
;;;319    		}
;;;320    		offset = (uint8_t)address;
00004a  b2eb              UXTB     r3,r5
;;;321    		B = offset /64;
00004c  0998              LSRS     r0,r3,#6
;;;322    		b = ((offset /8) &0x07);
00004e  f3c301c2          UBFX     r1,r3,#3,#3
;;;323    		
;;;324    //		sprintf(str, "Rcv Data ....B d %.2X %d %d" ,offset ,B, b);
;;;325    //		fuDebugMsg(str);
;;;326    		
;;;327    		FwUpdateInfo.CodeBufStatus[FwUpdateInfo.FwBufIndexEptr].b[B] |= BitsTab[b];
000052  f8962021          LDRB     r2,[r6,#0x21]  ; FwUpdateInfo
000056  ac04              ADD      r4,sp,#0x10
000058  eb060282          ADD      r2,r6,r2,LSL #2
00005c  4410              ADD      r0,r0,r2
00005e  5c61              LDRB     r1,[r4,r1]
000060  7e02              LDRB     r2,[r0,#0x18]
000062  430a              ORRS     r2,r2,r1
000064  7602              STRB     r2,[r0,#0x18]
;;;328    		for(i=0; i<8; i++)
000066  2400              MOVS     r4,#0
                  |L5.104|
;;;329    			FwUpdateInfo.CodeBuf[FwUpdateInfo.FwBufIndexEptr][offset++] = pDatBuf[i];
000068  f8961021          LDRB     r1,[r6,#0x21]  ; FwUpdateInfo
00006c  f8180004          LDRB     r0,[r8,r4]
000070  eb062201          ADD      r2,r6,r1,LSL #8
000074  4619              MOV      r1,r3
000076  4411              ADD      r1,r1,r2
000078  1c5b              ADDS     r3,r3,#1
00007a  b2db              UXTB     r3,r3
00007c  f8810023          STRB     r0,[r1,#0x23]
000080  1c64              ADDS     r4,r4,#1              ;328
000082  b2e4              UXTB     r4,r4                 ;328
000084  2c08              CMP      r4,#8                 ;328
000086  d3ef              BCC      |L5.104|
;;;330    		FwUpdateInfo.UpdateAddress[FwUpdateInfo.FwBufIndexEptr].l = address;
000088  f8960021          LDRB     r0,[r6,#0x21]  ; FwUpdateInfo
00008c  f8465020          STR      r5,[r6,r0,LSL #2]
;;;331    		FwUpdateInfo.UpdateAddressTemp = address;
000090  60b5              STR      r5,[r6,#8]  ; FwUpdateInfo
;;;332    		if(offset == 0 && 
000092  bbeb              CBNZ     r3,|L5.272|
;;;333    			FwUpdateInfo.CodeBufStatus[FwUpdateInfo.FwBufIndexEptr].l == (DWORD)0xffffffffL)	//
000094  f8960021          LDRB     r0,[r6,#0x21]  ; FwUpdateInfo
000098  eb060180          ADD      r1,r6,r0,LSL #2
00009c  6989              LDR      r1,[r1,#0x18]
00009e  1c49              ADDS     r1,r1,#1
0000a0  d142              BNE      |L5.296|
;;;334    		{
;;;335    //			fuDebugMsg("............1");
;;;336    			FwUpdateInfo.UpdateAddress[FwUpdateInfo.FwBufIndexEptr].b[0] = 0;	//????256B
0000a2  f8069020          STRB     r9,[r6,r0,LSL #2]
;;;337    		//	FwUpdateInfo.UpdateAddress[FwUpdateInfo.FwBufIndexEptr].l +=
;;;338    		//				 FwUpdateInfo.BaseAddress;
;;;339    			FwUpdateInfo.CodeBufStatus[FwUpdateInfo.FwBufIndexEptr].l = 0;
0000a6  f8960021          LDRB     r0,[r6,#0x21]  ; FwUpdateInfo
0000aa  eb060080          ADD      r0,r6,r0,LSL #2
0000ae  f8c09018          STR      r9,[r0,#0x18]
;;;340    			FwUpdateInfo.FwPackageNumCnt++;
0000b2  8a70              LDRH     r0,[r6,#0x12]  ; FwUpdateInfo
0000b4  1c40              ADDS     r0,r0,#1
0000b6  8270              STRH     r0,[r6,#0x12]
;;;341    			//-------------------------------
;;;342    			//	return update progress
;;;343    //				fuDebugMsg("............2");
;;;344    			//sprintf(str, "addr = %.8lX ",&FwUpdateInfo.CodeBuf[FwUpdateInfo.FwBufIndexEptr][0]);
;;;345    			//fuDebugMsg(str);
;;;346    			
;;;347    			writeCodeDataToFlashRom(FwUpdateInfo.UpdateAddress[FwUpdateInfo.FwBufIndexEptr].l, 
0000b8  f8960021          LDRB     r0,[r6,#0x21]  ; FwUpdateInfo
0000bc  f44f7280          MOV      r2,#0x100
0000c0  eb062100          ADD      r1,r6,r0,LSL #8
0000c4  3123              ADDS     r1,r1,#0x23
0000c6  f8560020          LDR      r0,[r6,r0,LSL #2]
0000ca  f7fffffe          BL       writeCodeDataToFlashRom
;;;348    					&FwUpdateInfo.CodeBuf[FwUpdateInfo.FwBufIndexEptr][0],
;;;349    					256);
;;;350    			if(FwUpdateInfo.CbFunction)
0000ce  f8d62224          LDR      r2,[r6,#0x224]  ; FwUpdateInfo
0000d2  b142              CBZ      r2,|L5.230|
;;;351    			{
;;;352    				buffer[0] = FwUpdateInfo.FwPackageNumCnt % 0x100;
0000d4  8a70              LDRH     r0,[r6,#0x12]  ; FwUpdateInfo
0000d6  f88d0004          STRB     r0,[sp,#4]
;;;353    				buffer[1] = FwUpdateInfo.FwPackageNumCnt / 0x100;
0000da  0a00              LSRS     r0,r0,#8
0000dc  f88d0005          STRB     r0,[sp,#5]
;;;354    				FwUpdateInfo.CbFunction(API_FU_EVT_PROGRESS, buffer);				
0000e0  a901              ADD      r1,sp,#4
0000e2  2000              MOVS     r0,#0
0000e4  4790              BLX      r2
                  |L5.230|
;;;355    			}
;;;356    			checkRcvFuCodeData();
0000e6  f7fffffe          BL       checkRcvFuCodeData
;;;357    //				else
;;;358    //					fuDebugMsg("............3");
;;;359    			//sprintf(str,"Full %d %d %.8lX",
;;;360    			//	FwUpdateInfo.FwBufIndexEptr,FwUpdateInfo.FwPackageNumCnt,
;;;361    			//	FwUpdateInfo.UpdateAddress[FwUpdateInfo.FwBufIndexEptr].l
;;;362    			//	);
;;;363    			//SendUartMessage((BYTE *)str);	
;;;364    			
;;;365    			FwUpdateInfo.FwBufIndexEptr++;
0000ea  f8960021          LDRB     r0,[r6,#0x21]  ; FwUpdateInfo
0000ee  1c40              ADDS     r0,r0,#1
0000f0  b2c0              UXTB     r0,r0
0000f2  f8860021          STRB     r0,[r6,#0x21]
;;;366    			if(FwUpdateInfo.FwBufIndexEptr >= FW_CODE_BUF_ITEM)
0000f6  2802              CMP      r0,#2
0000f8  d301              BCC      |L5.254|
;;;367    				FwUpdateInfo.FwBufIndexEptr = 0;			
0000fa  f8869021          STRB     r9,[r6,#0x21]
                  |L5.254|
;;;368    			if(FwUpdateInfo.FwBufIndexSptr == FwUpdateInfo.FwBufIndexEptr)
0000fe  f8960020          LDRB     r0,[r6,#0x20]  ; FwUpdateInfo
000102  f8961021          LDRB     r1,[r6,#0x21]  ; FwUpdateInfo
000106  4288              CMP      r0,r1
000108  d10a              BNE      |L5.288|
;;;369    			{
;;;370    				FwUpdateInfo.FwBufIndexSptr++;
00010a  1c40              ADDS     r0,r0,#1
00010c  b2c0              UXTB     r0,r0
00010e  e001              B        |L5.276|
                  |L5.272|
000110  e00a              B        |L5.296|
                  |L5.274|
000112  e00f              B        |L5.308|
                  |L5.276|
000114  f8860020          STRB     r0,[r6,#0x20]
;;;371    				if(FwUpdateInfo.FwBufIndexSptr >= FW_CODE_BUF_ITEM)
000118  2802              CMP      r0,#2
00011a  d301              BCC      |L5.288|
;;;372    					FwUpdateInfo.FwBufIndexSptr = 0;
00011c  f8869020          STRB     r9,[r6,#0x20]
                  |L5.288|
;;;373    			}
;;;374    			FwUpdateInfo.UpdateAddress[FwUpdateInfo.FwBufIndexEptr].l = 0xffffff;
000120  f06f407f          MVN      r0,#0xff000000
000124  f8460021          STR      r0,[r6,r1,LSL #2]
                  |L5.296|
;;;375    		}							
;;;376    #endif
;;;377    		address += 8;
000128  3508              ADDS     r5,r5,#8
00012a  3708              ADDS     r7,r7,#8              ;312
00012c  b2bf              UXTH     r7,r7                 ;312
                  |L5.302|
00012e  4557              CMP      r7,r10                ;312
000130  f4ffaf7f          BCC      |L5.50|
                  |L5.308|
;;;378    	}
;;;379    	/*
;;;380    	if(ResetToIspFlag || CheckAndUpdateFlag)	///??????Reset,??????SPI ROM
;;;381    			return;
;;;382    		if((FwUpdateInfo.InfoStatus&0x0f)!=0x0f)		//???????????
;;;383    		{
;;;384    			return;
;;;385    		}
;;;386    	*/
;;;387    }
000134  b006              ADD      sp,sp,#0x18
000136  e8bd87f0          POP      {r4-r10,pc}
;;;388    uint8_t	apiFuGetFwCheckStatus(void)
                          ENDP

00013a  0000              DCW      0x0000
                  |L5.316|
00013c  01020408          DCB      1,2,4,"\b",16," @",128
000140  10204080
                  |L5.324|
                          DCD      ||.bss||

                          AREA ||i.apiFuStartUp||, CODE, READONLY, ALIGN=2

                  apiFuStartUp PROC
;;;207    /* Public function prototypes -----------------------------------------------*/
;;;208    void apiFuStartUp(tApiFuCallbackFunction CbFunction)
000000  b510              PUSH     {r4,lr}
;;;209    {
000002  4604              MOV      r4,r0
;;;210    	memset(&FwUpdateInfo, 0, sizeof(tFwUpdateInfo));
000004  f44f710c          MOV      r1,#0x230
000008  4809              LDR      r0,|L6.48|
00000a  f7fffffe          BL       __aeabi_memclr4
;;;211    	//SystemParameter.Battery[0].SystemFlag2.l&=~SYSTEMFLAG2_FW_BUF_FULL;
;;;212    	//SystemParameter.Battery[0].SystemFlag2.l&=~SYSTEMFLAG2_CAN2_FW_CHECK_ERROR;
;;;213    	//SystemParameter.Battery[1].SystemFlag2.l&=~SYSTEMFLAG2_FW_BUF_FULL;
;;;214    	//SystemParameter.Battery[1].SystemFlag2.l&=~SYSTEMFLAG2_CAN2_FW_CHECK_ERROR;
;;;215    	//ValidFwCodeFlag=FALSE;
;;;216    	//CheckAndUpdateFlag=FALSE;
;;;217    	FwUpdateInfo.InfoStatus |= FW_UPDATE_STATUS_INITIAL;
00000e  4908              LDR      r1,|L6.48|
000010  f8910022          LDRB     r0,[r1,#0x22]  ; FwUpdateInfo
000014  f0400001          ORR      r0,r0,#1
000018  f8810022          STRB     r0,[r1,#0x22]
;;;218    //	FwUpdatePackageIdleTime = FWUPDATE_INFO_IDLE_TIME;
;;;219    	FwUpdateInfo.UpdateAddress[0].l = 0xffffff;
00001c  f06f427f          MVN      r2,#0xff000000
000020  600a              STR      r2,[r1,#0]  ; FwUpdateInfo
;;;220    	FwUpdateInfo.UpdateAddressTemp = 0xffffff;
000022  608a              STR      r2,[r1,#8]  ; FwUpdateInfo
;;;221    	FwUpdateInfo.FwPackageNumCnt = 0;
000024  2000              MOVS     r0,#0
000026  8248              STRH     r0,[r1,#0x12]
;;;222    	FwUpdateInfo.CbFunction = CbFunction;
000028  f8c14224          STR      r4,[r1,#0x224]  ; FwUpdateInfo
;;;223    //	fuDebugMsg("apiFuStartUp....0");
;;;224    }
00002c  bd10              POP      {r4,pc}
;;;225    void apiFuSetTotalPackageNum(uint32_t num)
                          ENDP

00002e  0000              DCW      0x0000
                  |L6.48|
                          DCD      ||.bss||

                          AREA ||i.checkFuCodeDataSwTimerHandler||, CODE, READONLY, ALIGN=2

                  checkFuCodeDataSwTimerHandler PROC
;;;120    
;;;121    static void checkFuCodeDataSwTimerHandler(__far void *dest, uint16_t evt, void *vDataPtr)
000000  b5f0              PUSH     {r4-r7,lr}
;;;122    {
000002  b0c9              SUB      sp,sp,#0x124
;;;123    	uint8_t		i;
;;;124    	uint32_t		buffer[65];
;;;125    	tHalEeProm		mHalEeProm;
;;;126    	uint8_t			MsgBuf[10];
;;;127    
;;;128    	if(evt == LIB_SW_TIMER_EVT_SW_1MS)
000004  290a              CMP      r1,#0xa
000006  d079              BEQ      |L7.252|
;;;129    		;
;;;130    	else if(evt == LIB_SW_TIMER_EVT_SW_10MS_7)
000008  2907              CMP      r1,#7
00000a  d177              BNE      |L7.252|
;;;131    	{
;;;132    		GPIOD->ODR |= GPIO_PIN_13;
00000c  4d3c              LDR      r5,|L7.256|
00000e  6828              LDR      r0,[r5,#0]
000010  f4405000          ORR      r0,r0,#0x2000
000014  6028              STR      r0,[r5,#0]
;;;133    		mHalEeProm.StartAddress = FwUpdateInfo.FwCheck.PackageNumCnt;
000016  4c3b              LDR      r4,|L7.260|
000018  f8b40228          LDRH     r0,[r4,#0x228]  ; FwUpdateInfo
00001c  9004              STR      r0,[sp,#0x10]
;;;134    		mHalEeProm.StartAddress *= 256;
00001e  9804              LDR      r0,[sp,#0x10]
000020  0200              LSLS     r0,r0,#8
000022  9004              STR      r0,[sp,#0x10]
;;;135    		mHalEeProm.StartAddress += FLASHROM_FU_START_ADDR;
000024  4938              LDR      r1,|L7.264|
000026  9804              LDR      r0,[sp,#0x10]
000028  4408              ADD      r0,r0,r1
00002a  9004              STR      r0,[sp,#0x10]
;;;136    		mHalEeProm.Length = 256;
00002c  14c8              ASRS     r0,r1,#19
00002e  f8ad0018          STRH     r0,[sp,#0x18]
;;;137    		mHalEeProm.pDataBuffer = (uint8_t *)&buffer[0];
000032  af08              ADD      r7,sp,#0x20
000034  9707              STR      r7,[sp,#0x1c]
;;;138    		HalEePromRead(&mHalEeProm);
000036  a804              ADD      r0,sp,#0x10
000038  f7fffffe          BL       HalEePromRead
;;;139    		if(FwUpdateInfo.FwCheck.PackageNumCnt == 0)
00003c  f8b40228          LDRH     r0,[r4,#0x228]  ; FwUpdateInfo
;;;140    		{
;;;141    			if(isCorrectFwCodeHead1((uint8_t *)&buffer[0]) &&
;;;142    			   isCorrectFwCodeHead2((uint8_t *)&buffer[12]))
;;;143    			{
;;;144    				
;;;145    			}
;;;146    			else
;;;147    			{
;;;148    				MsgBuf[0] = 1;
;;;149    				FwUpdateInfo.CbFunction(API_FU_EVT_CHECK_RESULT, MsgBuf);
;;;150    				FwUpdateInfo.FwCheckStatus = API_FU_FW_CHECK_FAIL;
000040  2603              MOVS     r6,#3
000042  b9c0              CBNZ     r0,|L7.118|
000044  a808              ADD      r0,sp,#0x20           ;141
000046  f7fffffe          BL       isCorrectFwCodeHead1
00004a  b118              CBZ      r0,|L7.84|
00004c  a814              ADD      r0,sp,#0x50           ;142
00004e  f7fffffe          BL       isCorrectFwCodeHead2
000052  b980              CBNZ     r0,|L7.118|
                  |L7.84|
000054  2001              MOVS     r0,#1                 ;148
000056  f88d0004          STRB     r0,[sp,#4]            ;148
00005a  f8d42224          LDR      r2,[r4,#0x224]        ;149  ; FwUpdateInfo
00005e  a901              ADD      r1,sp,#4              ;149
000060  2002              MOVS     r0,#2                 ;149
000062  4790              BLX      r2                    ;149
000064  f8846223          STRB     r6,[r4,#0x223]
;;;151    				LibSwTimerClose(checkFuCodeDataSwTimerHandler, 0);
000068  2100              MOVS     r1,#0
00006a  4828              LDR      r0,|L7.268|
00006c  f7fffffe          BL       LibSwTimerClose
;;;152    				fuDebugMsg("Fw Check error");
000070  a027              ADR      r0,|L7.272|
000072  f7fffffe          BL       appSerialCanDavinciSendTextMessage
                  |L7.118|
;;;153    			}
;;;154    		}
;;;155    		for(i=0; i<64; i++)
000076  2000              MOVS     r0,#0
                  |L7.120|
;;;156    		{
;;;157    			FwUpdateInfo.FwCheck.CheckSum ^= buffer[i];
000078  f8d4122c          LDR      r1,[r4,#0x22c]  ; FwUpdateInfo
00007c  f8572020          LDR      r2,[r7,r0,LSL #2]
000080  4051              EORS     r1,r1,r2
000082  f8c4122c          STR      r1,[r4,#0x22c]  ; FwUpdateInfo
000086  1c40              ADDS     r0,r0,#1              ;155
000088  b2c0              UXTB     r0,r0                 ;155
00008a  2840              CMP      r0,#0x40              ;155
00008c  d3f4              BCC      |L7.120|
;;;158    		}
;;;159    		FwUpdateInfo.FwCheck.PackageNumCnt++;
00008e  f8b40228          LDRH     r0,[r4,#0x228]  ; FwUpdateInfo
000092  1c40              ADDS     r0,r0,#1
000094  b280              UXTH     r0,r0
000096  f8a40228          STRH     r0,[r4,#0x228]
;;;160    		if(FwUpdateInfo.FwCheck.PackageNumCnt >= FwUpdateInfo.FwPackageNum)
00009a  8a21              LDRH     r1,[r4,#0x10]  ; FwUpdateInfo
00009c  4288              CMP      r0,r1
00009e  d31f              BCC      |L7.224|
;;;161    		{
;;;162    			if(FwUpdateInfo.FwCheck.CheckSum == 0)
0000a0  f8d4022c          LDR      r0,[r4,#0x22c]  ; FwUpdateInfo
0000a4  b148              CBZ      r0,|L7.186|
;;;163    			{
;;;164    				MsgBuf[0] = 0;
;;;165    				FwUpdateInfo.CbFunction(API_FU_EVT_CHECK_RESULT, MsgBuf);
;;;166    				LibSwTimerClose(checkFuCodeDataSwTimerHandler, 0);
;;;167    				FwUpdateInfo.FwCheckStatus = API_FU_FW_CHECK_SUCCESS;
;;;168    				fuDebugMsg("Fw Check success");
;;;169    			}
;;;170    			else
;;;171    				FwUpdateInfo.FwCheckStatus = API_FU_FW_CHECK_FAIL;
0000a6  f8846223          STRB     r6,[r4,#0x223]
                  |L7.170|
;;;172    			LibSwTimerClose(checkFuCodeDataSwTimerHandler, 0);
0000aa  2100              MOVS     r1,#0
0000ac  4817              LDR      r0,|L7.268|
0000ae  f7fffffe          BL       LibSwTimerClose
;;;173    			fuDebugMsg("FW Check Finish");
0000b2  a01b              ADR      r0,|L7.288|
0000b4  f7fffffe          BL       appSerialCanDavinciSendTextMessage
0000b8  e01c              B        |L7.244|
                  |L7.186|
0000ba  2000              MOVS     r0,#0                 ;164
0000bc  f88d0004          STRB     r0,[sp,#4]            ;164
0000c0  f8d42224          LDR      r2,[r4,#0x224]        ;165  ; FwUpdateInfo
0000c4  a901              ADD      r1,sp,#4              ;165
0000c6  2002              MOVS     r0,#2                 ;165
0000c8  4790              BLX      r2                    ;165
0000ca  2100              MOVS     r1,#0                 ;166
0000cc  480f              LDR      r0,|L7.268|
0000ce  f7fffffe          BL       LibSwTimerClose
0000d2  2002              MOVS     r0,#2                 ;167
0000d4  f8840223          STRB     r0,[r4,#0x223]        ;167
0000d8  a015              ADR      r0,|L7.304|
0000da  f7fffffe          BL       appSerialCanDavinciSendTextMessage
0000de  e7e4              B        |L7.170|
                  |L7.224|
;;;174    		}
;;;175    		else
;;;176    		{
;;;177    			MsgBuf[0] = FwUpdateInfo.FwCheck.PackageNumCnt % 0x100;
0000e0  f88d0004          STRB     r0,[sp,#4]
;;;178    			MsgBuf[1] = FwUpdateInfo.FwCheck.PackageNumCnt / 0x100;
0000e4  0a00              LSRS     r0,r0,#8
0000e6  f88d0005          STRB     r0,[sp,#5]
;;;179    			FwUpdateInfo.CbFunction(API_FU_EVT_FW_CHECKING, MsgBuf);	
0000ea  f8d42224          LDR      r2,[r4,#0x224]  ; FwUpdateInfo
0000ee  a901              ADD      r1,sp,#4
0000f0  2003              MOVS     r0,#3
0000f2  4790              BLX      r2
                  |L7.244|
;;;180    			
;;;181    			//MsgBuf[0] = 1;
;;;182    			//FwUpdateInfo.CbFunction(API_FU_EVT_CHECK_RESULT, MsgBuf);
;;;183    		}
;;;184    		GPIOD->ODR &= ~GPIO_PIN_13;
0000f4  6828              LDR      r0,[r5,#0]
0000f6  f4205000          BIC      r0,r0,#0x2000
0000fa  6028              STR      r0,[r5,#0]
                  |L7.252|
;;;185    	}	
;;;186    }
0000fc  b049              ADD      sp,sp,#0x124
0000fe  bdf0              POP      {r4-r7,pc}
;;;187    
                          ENDP

                  |L7.256|
                          DCD      0x48000c14
                  |L7.260|
                          DCD      ||.bss||
                  |L7.264|
                          DCD      0x08040000
                  |L7.268|
                          DCD      checkFuCodeDataSwTimerHandler
                  |L7.272|
000110  46772043          DCB      "Fw Check error",0
000114  6865636b
000118  20657272
00011c  6f7200  
00011f  00                DCB      0
                  |L7.288|
000120  46572043          DCB      "FW Check Finish",0
000124  6865636b
000128  2046696e
00012c  69736800
                  |L7.304|
000130  46772043          DCB      "Fw Check success",0
000134  6865636b
000138  20737563
00013c  63657373
000140  00      
000141  00                DCB      0
000142  00                DCB      0
000143  00                DCB      0

                          AREA ||i.checkRcvFuCodeData||, CODE, READONLY, ALIGN=2

                  checkRcvFuCodeData PROC
;;;187    
;;;188    static void checkRcvFuCodeData(void)
000000  b53e              PUSH     {r1-r5,lr}
;;;189    {
;;;190    	uint8_t	MsgBuf[10];
;;;191    	if(FwUpdateInfo.FwPackageNumCnt >= FwUpdateInfo.FwPackageNum)
000002  4c11              LDR      r4,|L8.72|
000004  8a60              LDRH     r0,[r4,#0x12]  ; FwUpdateInfo
000006  8a21              LDRH     r1,[r4,#0x10]  ; FwUpdateInfo
000008  4288              CMP      r0,r1
00000a  d31b              BCC      |L8.68|
;;;192    	{
;;;193    		fuDebugMsg("FW 接收完畢,自動檢查是否正確");
00000c  a00f              ADR      r0,|L8.76|
00000e  f7fffffe          BL       appSerialCanDavinciSendTextMessage
;;;194    		FwUpdateInfo.FwCheck.PackageNumCnt = 0;
000012  2000              MOVS     r0,#0
000014  f8a40228          STRH     r0,[r4,#0x228]
;;;195    		FwUpdateInfo.FwCheck.CheckSum = 0x13848255;
000018  4814              LDR      r0,|L8.108|
00001a  f8c4022c          STR      r0,[r4,#0x22c]  ; FwUpdateInfo
;;;196    				
;;;197    		if(FwUpdateInfo.CbFunction)
00001e  f8d42224          LDR      r2,[r4,#0x224]  ; FwUpdateInfo
000022  b142              CBZ      r2,|L8.54|
;;;198    		{
;;;199    			MsgBuf[0] = FwUpdateInfo.FwPackageNum % 0x100;
000024  8a20              LDRH     r0,[r4,#0x10]  ; FwUpdateInfo
000026  f88d0000          STRB     r0,[sp,#0]
;;;200    			MsgBuf[1] = FwUpdateInfo.FwPackageNum / 0x100;
00002a  0a00              LSRS     r0,r0,#8
00002c  f88d0001          STRB     r0,[sp,#1]
;;;201    			FwUpdateInfo.CbFunction(API_FU_EVT_START_FW_CHECK, MsgBuf);				
000030  4669              MOV      r1,sp
000032  2001              MOVS     r0,#1
000034  4790              BLX      r2
                  |L8.54|
;;;202    		}
;;;203    		FwUpdateInfo.FwCheckStatus = API_FU_FW_CHECKING;
000036  2001              MOVS     r0,#1
000038  f8840223          STRB     r0,[r4,#0x223]
;;;204    		LibSwTimerOpen(checkFuCodeDataSwTimerHandler, 0);
00003c  2100              MOVS     r1,#0
00003e  480c              LDR      r0,|L8.112|
000040  f7fffffe          BL       LibSwTimerOpen
                  |L8.68|
;;;205    	}
;;;206    }		
000044  bd3e              POP      {r1-r5,pc}
;;;207    /* Public function prototypes -----------------------------------------------*/
                          ENDP

000046  0000              DCW      0x0000
                  |L8.72|
                          DCD      ||.bss||
                  |L8.76|
00004c  465720b1          DCB      "FW ",177,181,166,172,167,185,178,166,",",166,219,176,202
000050  b5a6aca7
000054  b9b2a62c
000058  a6dbb0ca
00005c  c0cbac64          DCB      192,203,172,"d",172,"O",167,"_",165,191,189,"T",0
000060  ac4fa75f
000064  a5bfbd54
000068  00      
000069  00                DCB      0
00006a  00                DCB      0
00006b  00                DCB      0
                  |L8.108|
                          DCD      0x13848255
                  |L8.112|
                          DCD      checkFuCodeDataSwTimerHandler

                          AREA ||i.isCorrectFwCodeHead1||, CODE, READONLY, ALIGN=2

                  isCorrectFwCodeHead1 PROC
;;;105    }
;;;106    static uint8_t isCorrectFwCodeHead1(uint8_t *pHeadinfo)
000000  b510              PUSH     {r4,lr}
;;;107    {
;;;108    	if(memcmp(pHeadinfo, SmpFwHeadInfo1, 16) == 0)
000002  2210              MOVS     r2,#0x10
000004  4903              LDR      r1,|L9.20|
000006  f7fffffe          BL       memcmp
00000a  b108              CBZ      r0,|L9.16|
;;;109    		return 1;
;;;110    	return 0;
00000c  2000              MOVS     r0,#0
;;;111    	
;;;112    }
00000e  bd10              POP      {r4,pc}
                  |L9.16|
000010  2001              MOVS     r0,#1                 ;109
000012  bd10              POP      {r4,pc}
;;;113    static uint8_t isCorrectFwCodeHead2(uint8_t *pHeadinfo)
                          ENDP

                  |L9.20|
                          DCD      SmpFwHeadInfo1

                          AREA ||i.isCorrectFwCodeHead2||, CODE, READONLY, ALIGN=2

                  isCorrectFwCodeHead2 PROC
;;;112    }
;;;113    static uint8_t isCorrectFwCodeHead2(uint8_t *pHeadinfo)
000000  b510              PUSH     {r4,lr}
;;;114    {
;;;115    	if(memcmp(pHeadinfo, SmpFwHeadInfo2, 16) == 0)
000002  2210              MOVS     r2,#0x10
000004  4903              LDR      r1,|L10.20|
000006  f7fffffe          BL       memcmp
00000a  b108              CBZ      r0,|L10.16|
;;;116    		return 1;
;;;117    	return 0;
00000c  2000              MOVS     r0,#0
;;;118    }
00000e  bd10              POP      {r4,pc}
                  |L10.16|
000010  2001              MOVS     r0,#1                 ;116
000012  bd10              POP      {r4,pc}
;;;119    
                          ENDP

                  |L10.20|
                          DCD      SmpFwHeadInfo2

                          AREA ||i.isValidInfoStatus||, CODE, READONLY, ALIGN=2

                  isValidInfoStatus PROC
;;;69     /* Private function prototypes -----------------------------------------------*/
;;;70     static uint8_t isValidInfoStatus(void)
000000  4804              LDR      r0,|L11.20|
;;;71     {
;;;72     	if((FwUpdateInfo.InfoStatus&0x0f) != 0x0f)
000002  f8900022          LDRB     r0,[r0,#0x22]  ; FwUpdateInfo
000006  43c0              MVNS     r0,r0
000008  0700              LSLS     r0,r0,#28
00000a  d001              BEQ      |L11.16|
;;;73     		return 0;
00000c  2000              MOVS     r0,#0
;;;74     	return 1;
;;;75     }
00000e  4770              BX       lr
                  |L11.16|
000010  2001              MOVS     r0,#1                 ;74
000012  4770              BX       lr
;;;76     
                          ENDP

                  |L11.20|
                          DCD      ||.bss||

                          AREA ||i.writeCodeDataToFlashRom||, CODE, READONLY, ALIGN=2

                  writeCodeDataToFlashRom PROC
;;;76     
;;;77     static void writeCodeDataToFlashRom(uint32_t addr, uint8_t *pDatBuf, uint16_t leng)
000000  b51f              PUSH     {r0-r4,lr}
;;;78     {
;;;79     	tHalEeProm		mHalEeProm;
;;;80     	char			str[100];
;;;81     //	uint32_t		d;
;;;82     	
;;;83     	mHalEeProm.StartAddress = FLASHROM_FU_START_ADDR + addr;
000002  4b0a              LDR      r3,|L12.44|
000004  4403              ADD      r3,r3,r0
000006  9300              STR      r3,[sp,#0]
;;;84     	mHalEeProm.Length = leng;
000008  f8ad2008          STRH     r2,[sp,#8]
;;;85     	mHalEeProm.pDataBuffer = pDatBuf;
00000c  9103              STR      r1,[sp,#0xc]
;;;86     	
;;;87     //	sprintf(str,"W Flash = %.8lX %d", mHalEeProm.StartAddress, leng);
;;;88     //	fuDebugMsg(str);
;;;89     	
;;;90     	if((addr&0x7ff) == 0)
00000e  0540              LSLS     r0,r0,#21
000010  d108              BNE      |L12.36|
;;;91     	{
;;;92     		//fuDebugMsg("Erase");
;;;93     		if(HalEePromErase(&mHalEeProm) != 0)
000012  4668              MOV      r0,sp
000014  f7fffffe          BL       HalEePromErase
000018  b120              CBZ      r0,|L12.36|
;;;94     		{
;;;95     			if(HalEePromErase(&mHalEeProm) != 0)
00001a  4668              MOV      r0,sp
00001c  f7fffffe          BL       HalEePromErase
000020  2800              CMP      r0,#0
000022  d102              BNE      |L12.42|
                  |L12.36|
;;;96     			{
;;;97     				//fuDebugMsg("FU FlashRom Erase Error");
;;;98     				return;
;;;99     			}
;;;100    		}
;;;101    	}
;;;102    	//fuDebugMsg("Write");
;;;103    	//for(d=0; d<10000;d++);
;;;104    	HalEePromWrite(&mHalEeProm);
000024  4668              MOV      r0,sp
000026  f7fffffe          BL       HalEePromWrite
                  |L12.42|
;;;105    }
00002a  bd1f              POP      {r0-r4,pc}
;;;106    static uint8_t isCorrectFwCodeHead1(uint8_t *pHeadinfo)
                          ENDP

                  |L12.44|
                          DCD      0x08040000

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  FwUpdateInfo
                          %        560

;*** Start embedded assembler ***

#line 1 "..\\..\\..\\API\\ApiFuFlashRom.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___15_ApiFuFlashRom_c_7111ec8e____REV16|
#line 492 "../../../Drivers/CMSIS/Include/cmsis_armcc.h"
|__asm___15_ApiFuFlashRom_c_7111ec8e____REV16| PROC
#line 493

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___15_ApiFuFlashRom_c_7111ec8e____REVSH|
#line 507
|__asm___15_ApiFuFlashRom_c_7111ec8e____REVSH| PROC
#line 508

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___15_ApiFuFlashRom_c_7111ec8e____RRX|
#line 694
|__asm___15_ApiFuFlashRom_c_7111ec8e____RRX| PROC
#line 695

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
