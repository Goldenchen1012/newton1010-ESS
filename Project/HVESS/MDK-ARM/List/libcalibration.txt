; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\obj\libcalibration.o --asm_dir=.\List\ --list_dir=.\List\ --depend=.\obj\libcalibration.d --cpu=Cortex-M4.fp.sp --apcs=interwork -O1 --diag_suppress=9931 -I../Inc -I../../../Drivers/CMSIS/Include -I../../../Drivers/CMSIS/Device/ST/STM32L4xx/Include -I../../../Drivers/STM32L4xx_HAL_Driver/Inc -I../../../Drivers/BSP/STM32L4xx_Nucleo_144 -I..\..\..\User -I..\..\..\HAL -I..\..\..\Lib -I..\..\..\Config_Common -I..\..\..\AppProtect -I..\..\..\APP -I..\..\..\Lib\SMP -I..\..\..\Drivers\SMP -I..\..\..\BSP -I..\..\..\Drivers\BSP\STM32L496V_Davinci -I..\..\..\API -I..\..\..\AppCommunication -I..\..\..\Drivers\W5500 -I..\..\..\RTT -I.\RTE\_HVESS_Normal -IC:\Users\88691\AppData\Local\Arm\Packs\ARM\CMSIS\5.8.0\CMSIS\Core\Include -IC:\Users\88691\AppData\Local\Arm\Packs\Keil\STM32L4xx_DFP\2.6.0\Drivers\CMSIS\Device\ST\STM32L4xx\Include -D__MICROLIB -D__UVISION_VERSION=535 -D_RTE_ -DSTM32L496xx -D_RTE_ -DSTM32L496xx -DUSE_HAL_DRIVER -DUSE_STM32L4XX_NUCLEO_144 -DBSPSMPS -DUSE_STM32L4XX_NUCLEO_144_SMPS -DUSE_ADP5301ACBZ -W ..\..\..\Lib\LibCalibration.c]
                          THUMB

                          AREA ||i.calCoef||, CODE, READONLY, ALIGN=2

                  calCoef PROC
;;;36     
;;;37     tCalibCoef calCoef(int32_t valL, int32_t adcL, int32_t valH, int32_t adcH){
000000  b5f0              PUSH     {r4-r7,lr}
000002  4604              MOV      r4,r0
000004  ed2d8b08          VPUSH    {d8-d11}
000008  b083              SUB      sp,sp,#0xc
00000a  4608              MOV      r0,r1
00000c  4617              MOV      r7,r2
00000e  461e              MOV      r6,r3
000010  9d10              LDR      r5,[sp,#0x40]
;;;38         tCalibCoef coef;
;;;39         double y1, y2, x1, x2;
;;;40         double cA, cB;
;;;41         
;;;42         if(valL == valH){
000012  42b0              CMP      r0,r6
000014  d104              BNE      |L1.32|
;;;43             coef.A1 = 0;
000016  2000              MOVS     r0,#0
000018  9000              STR      r0,[sp,#0]
;;;44             coef.A2 = 0;
00001a  9001              STR      r0,[sp,#4]
;;;45             coef.B = 0;
00001c  9002              STR      r0,[sp,#8]
00001e  e04c              B        |L1.186|
                  |L1.32|
;;;46         }else{
;;;47             y1 = valL;
000020  f7fffffe          BL       __aeabi_i2d
000024  ec410b19          VMOV     d9,r0,r1
;;;48             y2 = valH;
000028  4630              MOV      r0,r6
00002a  f7fffffe          BL       __aeabi_i2d
00002e  ec410b1b          VMOV     d11,r0,r1
;;;49             x1 = adcL;
000032  4638              MOV      r0,r7
000034  f7fffffe          BL       __aeabi_i2d
000038  ec410b1a          VMOV     d10,r0,r1
;;;50             x2 = adcH;
00003c  4628              MOV      r0,r5
00003e  f7fffffe          BL       __aeabi_i2d
000042  ec410b10          VMOV     d0,r0,r1
;;;51             cA = (y1 - y2) / (x1 - x2);
000046  ec510b1a          VMOV     r0,r1,d10
00004a  ec532b10          VMOV     r2,r3,d0
00004e  f7fffffe          BL       __aeabi_dsub
000052  ec410b18          VMOV     d8,r0,r1
000056  ec532b1b          VMOV     r2,r3,d11
00005a  ec510b19          VMOV     r0,r1,d9
00005e  f7fffffe          BL       __aeabi_dsub
000062  ec532b18          VMOV     r2,r3,d8
000066  f7fffffe          BL       __aeabi_ddiv
00006a  ec410b18          VMOV     d8,r0,r1
;;;52             cB = y1 - (cA * x1);
00006e  ec532b1a          VMOV     r2,r3,d10
000072  ec510b18          VMOV     r0,r1,d8
000076  f7fffffe          BL       __aeabi_dmul
00007a  ec532b19          VMOV     r2,r3,d9
00007e  f7fffffe          BL       __aeabi_drsub
000082  ec410b19          VMOV     d9,r0,r1
;;;53             coef.A1 = (int32_t)cA;
000086  ec510b18          VMOV     r0,r1,d8
00008a  f7fffffe          BL       __aeabi_d2iz
00008e  9000              STR      r0,[sp,#0]
;;;54             coef.A2 = (int32_t)((cA - (double)coef.A1) * 100000);
000090  9800              LDR      r0,[sp,#0]
000092  f7fffffe          BL       __aeabi_i2d
000096  ec532b18          VMOV     r2,r3,d8
00009a  f7fffffe          BL       __aeabi_drsub
00009e  ed9f1b0a          VLDR     d1,|L1.200|
0000a2  ec532b11          VMOV     r2,r3,d1
0000a6  f7fffffe          BL       __aeabi_dmul
0000aa  f7fffffe          BL       __aeabi_d2iz
0000ae  9001              STR      r0,[sp,#4]
;;;55             coef.B = (int32_t)cB;
0000b0  ec510b19          VMOV     r0,r1,d9
0000b4  f7fffffe          BL       __aeabi_d2iz
0000b8  9002              STR      r0,[sp,#8]
                  |L1.186|
;;;56         }
;;;57     #if 0    
;;;58         {
;;;59         	char	str[100];
;;;60         	sprintf(str,"A1=%d A2=%d B =%d",
;;;61         			coef.A1,	coef.A2,coef.B);
;;;62         		
;;;63         	appSerialCanDavinciSendTextMessage(str);
;;;64         }
;;;65     #endif    
;;;66         return coef;
0000ba  e89d0007          LDM      sp,{r0-r2}
0000be  c407              STM      r4!,{r0-r2}
;;;67     }
0000c0  b003              ADD      sp,sp,#0xc
0000c2  ecbd8b08          VPOP     {d8-d11}
0000c6  bdf0              POP      {r4-r7,pc}
;;;68     
                          ENDP

                  |L1.200|
0000c8  00000000          DCFD     0x40f86a0000000000 ; 100000
0000cc  40f86a00

                          AREA ||i.doCalibration||, CODE, READONLY, ALIGN=2

                  doCalibration PROC
;;;28     /* Public function prototypes -----------------------------------------------*/
;;;29     int32_t doCalibration(tCalibCoef *par, int32_t dataX){ //Y = A1*X + A2*X/10000 + B
000000  6802              LDR      r2,[r0,#0]
;;;30     	int32_t dataTemp;
;;;31     	dataTemp = dataX * par->A1;
000002  434a              MULS     r2,r1,r2
;;;32     	dataTemp += (dataX * par->A2) / 100000;
000004  6843              LDR      r3,[r0,#4]
000006  434b              MULS     r3,r1,r3
000008  4903              LDR      r1,|L2.24|
00000a  fb93f1f1          SDIV     r1,r3,r1
00000e  4411              ADD      r1,r1,r2
;;;33     	dataTemp += par->B;
000010  6880              LDR      r0,[r0,#8]
000012  4408              ADD      r0,r0,r1
;;;34     	return dataTemp;
;;;35     }
000014  4770              BX       lr
;;;36     
                          ENDP

000016  0000              DCW      0x0000
                  |L2.24|
                          DCD      0x000186a0
