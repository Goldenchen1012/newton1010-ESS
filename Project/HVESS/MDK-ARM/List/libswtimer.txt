; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\obj\libswtimer.o --asm_dir=.\List\ --list_dir=.\List\ --depend=.\obj\libswtimer.d --cpu=Cortex-M4.fp.sp --apcs=interwork -O1 --diag_suppress=9931 -I../Inc -I../../../Drivers/CMSIS/Include -I../../../Drivers/CMSIS/Device/ST/STM32L4xx/Include -I../../../Drivers/STM32L4xx_HAL_Driver/Inc -I../../../Drivers/BSP/STM32L4xx_Nucleo_144 -I..\..\..\User -I..\..\..\HAL -I..\..\..\Lib -I..\..\..\Config_Common -I..\..\..\AppProtect -I..\..\..\APP -I..\..\..\Lib\SMP -I..\..\..\Drivers\SMP -I..\..\..\BSP -I..\..\..\Drivers\BSP\STM32L496V_Davinci -I..\..\..\API -I..\..\..\AppCommunication -I..\..\..\Drivers\W5500 -I..\..\..\RTT -I.\RTE\_HVESS_Normal -IC:\Users\88691\AppData\Local\Arm\Packs\ARM\CMSIS\5.8.0\CMSIS\Core\Include -IC:\Users\88691\AppData\Local\Arm\Packs\Keil\STM32L4xx_DFP\2.6.0\Drivers\CMSIS\Device\ST\STM32L4xx\Include -D__MICROLIB -D__UVISION_VERSION=535 -D_RTE_ -DSTM32L496xx -D_RTE_ -DSTM32L496xx -DUSE_HAL_DRIVER -DUSE_STM32L4XX_NUCLEO_144 -DBSPSMPS -DUSE_STM32L4XX_NUCLEO_144_SMPS -DUSE_ADP5301ACBZ -W ..\..\..\Lib\LibSwTimer.c]
                          THUMB

                          AREA ||i.LibGetSwTimer||, CODE, READONLY, ALIGN=2

                  LibGetSwTimer PROC
;;;33     /* Private function prototypes -----------------------------------------------*/
;;;34     uint16_t LibGetSwTimer(void)
000000  4801              LDR      r0,|L1.8|
;;;35     {
;;;36     	return count1ms;
000002  8840              LDRH     r0,[r0,#2]  ; count1ms
;;;37     }
000004  4770              BX       lr
;;;38     
                          ENDP

000006  0000              DCW      0x0000
                  |L1.8|
                          DCD      ||.data||

                          AREA ||i.LibSwTimerClearCount||, CODE, READONLY, ALIGN=2

                  LibSwTimerClearCount PROC
;;;38     
;;;39     void LibSwTimerClearCount(void)
000000  4802              LDR      r0,|L2.12|
;;;40     {
;;;41     	count1ms = 0;
000002  2100              MOVS     r1,#0
000004  8041              STRH     r1,[r0,#2]
;;;42     	count1s = 0;
000006  8081              STRH     r1,[r0,#4]
;;;43     	delayCount = 0;
000008  80c1              STRH     r1,[r0,#6]
;;;44     }
00000a  4770              BX       lr
;;;45     
                          ENDP

                  |L2.12|
                          DCD      ||.data||

                          AREA ||i.LibSwTimerClose||, CODE, READONLY, ALIGN=2

                  LibSwTimerClose PROC
;;;61     
;;;62     tErrCode LibSwTimerClose(tLibSwTimerEvtHandler handler, __far void *dest){
000000  460a              MOV      r2,r1
;;;63       return LibRegisterRm(&EvtHandlerRegister, handler, dest);
000002  4601              MOV      r1,r0
000004  4801              LDR      r0,|L3.12|
000006  f7ffbffe          B.W      _LibRegisterRm
;;;64     }
;;;65     
                          ENDP

00000a  0000              DCW      0x0000
                  |L3.12|
                          DCD      ||.bss||

                          AREA ||i.LibSwTimerHandle||, CODE, READONLY, ALIGN=2

                  LibSwTimerHandle PROC
;;;87     
;;;88     void LibSwTimerHandle(void){
000000  b510              PUSH     {r4,lr}
;;;89     	uint8_t i;
;;;90     	//LibRegisterTypeHandlerExe(&EvtHandlerRegisterTask, LIB_SW_TIMER_EVT_SW_TASK, 0);
;;;91       //for(i=0; i<10; i++)
;;;92       {
;;;93         if(count1ms > 0){
000002  4c22              LDR      r4,|L4.140|
000004  8860              LDRH     r0,[r4,#2]  ; count1ms
000006  2800              CMP      r0,#0
000008  d03e              BEQ      |L4.136|
;;;94     
;;;95     		//count1ms--;
;;;96     		count1ms = 0;
00000a  2000              MOVS     r0,#0
00000c  8060              STRH     r0,[r4,#2]
;;;97     		if(LibRegisterIsMemberNull(&EvtHandlerRegister) == true){
00000e  4820              LDR      r0,|L4.144|
000010  f7fffffe          BL       _LibRegisterIsMemberNull
000014  2800              CMP      r0,#0
000016  d137              BNE      |L4.136|
;;;98     		return;
;;;99     		}
;;;100    
;;;101    		count1s++;
000018  88a0              LDRH     r0,[r4,#4]  ; count1s
00001a  1c40              ADDS     r0,r0,#1
00001c  80a0              STRH     r0,[r4,#4]
;;;102    		LibRegisterTypeHandlerExe(&EvtHandlerRegister, LIB_SW_TIMER_EVT_SW_1MS, 0);
00001e  2200              MOVS     r2,#0
000020  210a              MOVS     r1,#0xa
000022  481b              LDR      r0,|L4.144|
000024  f7fffffe          BL       _LibRegisterTypeHandlerExe
;;;103    		LibRegisterTypeHandlerExe(&EvtHandlerRegister, count1s%10, 0);
000028  88a0              LDRH     r0,[r4,#4]  ; count1s
00002a  210a              MOVS     r1,#0xa
00002c  fbb0f2f1          UDIV     r2,r0,r1
000030  fb010112          MLS      r1,r1,r2,r0
000034  2200              MOVS     r2,#0
000036  4816              LDR      r0,|L4.144|
000038  f7fffffe          BL       _LibRegisterTypeHandlerExe
;;;104    	
;;;105    		if(count1s%100 == 0){
00003c  88a0              LDRH     r0,[r4,#4]  ; count1s
00003e  2164              MOVS     r1,#0x64
000040  fbb0f2f1          UDIV     r2,r0,r1
000044  fb010012          MLS      r0,r1,r2,r0
000048  b920              CBNZ     r0,|L4.84|
;;;106    		  LibRegisterTypeHandlerExe(&EvtHandlerRegister, LIB_SW_TIMER_EVT_SW_100MS, 0);
00004a  2200              MOVS     r2,#0
00004c  210b              MOVS     r1,#0xb
00004e  4810              LDR      r0,|L4.144|
000050  f7fffffe          BL       _LibRegisterTypeHandlerExe
                  |L4.84|
;;;107    		}
;;;108    		if(count1s%500 == 0){
000054  88a0              LDRH     r0,[r4,#4]  ; count1s
000056  f44f71fa          MOV      r1,#0x1f4
00005a  fbb0f2f1          UDIV     r2,r0,r1
00005e  fb010012          MLS      r0,r1,r2,r0
000062  b920              CBNZ     r0,|L4.110|
;;;109    		  LibRegisterTypeHandlerExe(&EvtHandlerRegister, LIB_SW_TIMER_EVT_SW_500MS, 0);
000064  2200              MOVS     r2,#0
000066  210c              MOVS     r1,#0xc
000068  4809              LDR      r0,|L4.144|
00006a  f7fffffe          BL       _LibRegisterTypeHandlerExe
                  |L4.110|
;;;110    		} 
;;;111    
;;;112    		if(count1s >= 1000){
00006e  88a0              LDRH     r0,[r4,#4]  ; count1s
000070  f5b07f7a          CMP      r0,#0x3e8
000074  d308              BCC      |L4.136|
;;;113    		LibRegisterTypeHandlerExe(&EvtHandlerRegister, LIB_SW_TIMER_EVT_SW_1S, 0);
000076  2200              MOVS     r2,#0
000078  210d              MOVS     r1,#0xd
00007a  4805              LDR      r0,|L4.144|
00007c  f7fffffe          BL       _LibRegisterTypeHandlerExe
;;;114    		count1s -= 1000;
000080  88a0              LDRH     r0,[r4,#4]  ; count1s
000082  f5a0707a          SUB      r0,r0,#0x3e8
000086  80a0              STRH     r0,[r4,#4]
                  |L4.136|
;;;115    		}
;;;116    	}
;;;117      }
;;;118    }
000088  bd10              POP      {r4,pc}
;;;119    
                          ENDP

00008a  0000              DCW      0x0000
                  |L4.140|
                          DCD      ||.data||
                  |L4.144|
                          DCD      ||.bss||

                          AREA ||i.LibSwTimerHwDelay||, CODE, READONLY, ALIGN=2

                  LibSwTimerHwDelay PROC
;;;81     
;;;82     void LibSwTimerHwDelay(uint16_t ms){
000000  4902              LDR      r1,|L5.12|
;;;83      //   uint32_t delayTimeout = 300000 
;;;84         delayCount = ms;
000002  80c8              STRH     r0,[r1,#6]
                  |L5.4|
;;;85         while(delayCount >0);
000004  2800              CMP      r0,#0
000006  d1fd              BNE      |L5.4|
;;;86     }
000008  4770              BX       lr
;;;87     
                          ENDP

00000a  0000              DCW      0x0000
                  |L5.12|
                          DCD      ||.data||

                          AREA ||i.LibSwTimerHwHandler||, CODE, READONLY, ALIGN=2

                  LibSwTimerHwHandler PROC
;;;65     
;;;66     void LibSwTimerHwHandler(tLibSwTimerEvt evt, __far void *data){
000000  b510              PUSH     {r4,lr}
;;;67       if(evt == LIB_SW_TIMER_EVT_HW_1MS){
;;;68         count1ms++;
000002  4c0c              LDR      r4,|L6.52|
;;;69         if(delayCount > 0){
000004  88e3              LDRH     r3,[r4,#6]
000006  8861              LDRH     r1,[r4,#2]            ;68
;;;70           delayCount--;
000008  1e5a              SUBS     r2,r3,#1
00000a  b292              UXTH     r2,r2
00000c  280f              CMP      r0,#0xf               ;67
00000e  d007              BEQ      |L6.32|
;;;71         }
;;;72       }else if(evt == LIB_SW_TIMER_EVT_HW_5MS){
000010  2810              CMP      r0,#0x10
000012  d104              BNE      |L6.30|
;;;73         count1ms+=5;
000014  1d49              ADDS     r1,r1,#5
000016  8061              STRH     r1,[r4,#2]
;;;74         if(delayCount > 5){
000018  2b05              CMP      r3,#5
00001a  d907              BLS      |L6.44|
;;;75           delayCount--;
00001c  80e2              STRH     r2,[r4,#6]
                  |L6.30|
;;;76         }else{
;;;77           delayCount = 0;
;;;78         }
;;;79       }
;;;80     }
00001e  bd10              POP      {r4,pc}
                  |L6.32|
000020  1c49              ADDS     r1,r1,#1              ;68
000022  8061              STRH     r1,[r4,#2]            ;68
000024  2b00              CMP      r3,#0                 ;69
000026  d0fa              BEQ      |L6.30|
000028  80e2              STRH     r2,[r4,#6]            ;70
00002a  bd10              POP      {r4,pc}
                  |L6.44|
00002c  2000              MOVS     r0,#0                 ;77
00002e  80e0              STRH     r0,[r4,#6]            ;77
000030  bd10              POP      {r4,pc}
;;;81     
                          ENDP

000032  0000              DCW      0x0000
                  |L6.52|
                          DCD      ||.data||

                          AREA ||i.LibSwTimerOpen||, CODE, READONLY, ALIGN=2

                  LibSwTimerOpen PROC
;;;46     
;;;47     tErrCode LibSwTimerOpen(tLibSwTimerEvtHandler handler, __far void *dest){
000000  b570              PUSH     {r4-r6,lr}
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;48     static bool initFlag = false; 
;;;49       if(LibRegisterIsMemberNull(&EvtHandlerRegister) == true){
000006  480a              LDR      r0,|L7.48|
000008  f7fffffe          BL       _LibRegisterIsMemberNull
;;;50     	  if(initFlag == true){
00000c  4909              LDR      r1,|L7.52|
00000e  b120              CBZ      r0,|L7.26|
000010  7808              LDRB     r0,[r1,#0]  ; initFlag
000012  b110              CBZ      r0,|L7.26|
;;;51               count1ms = 0;
000014  2300              MOVS     r3,#0
000016  804b              STRH     r3,[r1,#2]
;;;52               count1s = 0;
000018  808b              STRH     r3,[r1,#4]
                  |L7.26|
;;;53     	  }
;;;54       }
;;;55       
;;;56       if(initFlag == false){
00001a  7808              LDRB     r0,[r1,#0]  ; initFlag
00001c  b908              CBNZ     r0,|L7.34|
;;;57     	  initFlag = true;  
00001e  2001              MOVS     r0,#1
000020  7008              STRB     r0,[r1,#0]
                  |L7.34|
;;;58       }
;;;59       return LibRegisterAdd(&EvtHandlerRegister, handler, dest);
000022  462a              MOV      r2,r5
000024  4621              MOV      r1,r4
000026  e8bd4070          POP      {r4-r6,lr}
00002a  4801              LDR      r0,|L7.48|
00002c  f7ffbffe          B.W      _LibRegisterAdd
;;;60     }
;;;61     
                          ENDP

                  |L7.48|
                          DCD      ||.bss||
                  |L7.52|
                          DCD      ||.data||

                          AREA ||i.LibSwTimerTaskClose||, CODE, READONLY, ALIGN=2

                  LibSwTimerTaskClose PROC
;;;123    
;;;124    tErrCode LibSwTimerTaskClose(tLibSwTimerEvtHandler handler, __far void *dest){
000000  460a              MOV      r2,r1
;;;125      return LibRegisterRm(&EvtHandlerRegisterTask, handler, dest);
000002  4601              MOV      r1,r0
000004  4801              LDR      r0,|L8.12|
000006  f7ffbffe          B.W      _LibRegisterRm
;;;126    }
                          ENDP

00000a  0000              DCW      0x0000
                  |L8.12|
                          DCD      ||.bss||+0xc

                          AREA ||i.LibSwTimerTaskOpen||, CODE, READONLY, ALIGN=2

                  LibSwTimerTaskOpen PROC
;;;119    
;;;120    tErrCode LibSwTimerTaskOpen(tLibSwTimerEvtHandler handler, __far void *dest){
000000  460a              MOV      r2,r1
;;;121      return LibRegisterAdd(&EvtHandlerRegisterTask, handler, dest);
000002  4601              MOV      r1,r0
000004  4801              LDR      r0,|L9.12|
000006  f7ffbffe          B.W      _LibRegisterAdd
;;;122    }
;;;123    
                          ENDP

00000a  0000              DCW      0x0000
                  |L9.12|
                          DCD      ||.bss||+0xc

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  EvtHandlerRegister
                          %        12
                  EvtHandlerRegisterTask
                          %        12

                          AREA ||.data||, DATA, ALIGN=1

                  initFlag
000000  0000              DCB      0x00,0x00
                  count1ms
000002  0000              DCW      0x0000
                  count1s
000004  0000              DCW      0x0000
                  delayCount
000006  0000              DCW      0x0000
