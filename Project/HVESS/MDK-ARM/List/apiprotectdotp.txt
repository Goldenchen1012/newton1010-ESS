; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\obj\apiprotectdotp.o --asm_dir=.\List\ --list_dir=.\List\ --depend=.\obj\apiprotectdotp.d --cpu=Cortex-M4.fp.sp --apcs=interwork -O1 --diag_suppress=9931 -I../Inc -I../../../Drivers/CMSIS/Include -I../../../Drivers/CMSIS/Device/ST/STM32L4xx/Include -I../../../Drivers/STM32L4xx_HAL_Driver/Inc -I../../../Drivers/BSP/STM32L4xx_Nucleo_144 -I..\..\..\User -I..\..\..\HAL -I..\..\..\Lib -I..\..\..\Config_Common -I..\..\..\AppProtect -I..\..\..\APP -I..\..\..\Lib\SMP -I..\..\..\Drivers\SMP -I..\..\..\BSP -I..\..\..\Drivers\BSP\STM32L496V_Davinci -I..\..\..\API -I..\..\..\AppCommunication -I..\..\..\Drivers\W5500 -I..\..\..\RTT -I.\RTE\_HVESS_Normal -IC:\Users\88691\AppData\Local\Arm\Packs\ARM\CMSIS\5.8.0\CMSIS\Core\Include -IC:\Users\88691\AppData\Local\Arm\Packs\Keil\STM32L4xx_DFP\2.6.0\Drivers\CMSIS\Device\ST\STM32L4xx\Include -D__MICROLIB -D__UVISION_VERSION=535 -D_RTE_ -DSTM32L496xx -D_RTE_ -DSTM32L496xx -DUSE_HAL_DRIVER -DUSE_STM32L4XX_NUCLEO_144 -DBSPSMPS -DUSE_STM32L4XX_NUCLEO_144_SMPS -DUSE_ADP5301ACBZ -W ..\..\..\AppProtect\ApiProtectDotp.c]
                          THUMB

                          AREA ||i.apiProtectDotpGetFlag||, CODE, READONLY, ALIGN=2

                  apiProtectDotpGetFlag PROC
;;;51     /* Public function prototypes -----------------------------------------------*/
;;;52     uint8_t	apiProtectDotpGetFlag(uint16_t NtcIndex)
000000  4901              LDR      r1,|L1.8|
;;;53     {
;;;54     	return mDotpProtect.Flag[NtcIndex];
000002  5c08              LDRB     r0,[r1,r0]
;;;55     }
000004  4770              BX       lr
;;;56     
                          ENDP

000006  0000              DCW      0x0000
                  |L1.8|
                          DCD      ||.bss||

                          AREA ||i.apiProtectDotpHandler||, CODE, READONLY, ALIGN=2

                  apiProtectDotpHandler PROC
;;;57     
;;;58     uint8_t apiProtectDotpHandler(uint8_t ProtectLevel)
000000  e92d4ff0          PUSH     {r4-r11,lr}
;;;59     {
000004  b087              SUB      sp,sp,#0x1c
000006  4607              MOV      r7,r0
;;;60     	BYTE	str[200];
;;;61     	uint8_t	checkcount;
;;;62     //	if(InEngineerModeFlag)
;;;63     //		return;	
;;;64     	static 	uint8_t		flag = 0;
;;;65     	uint16_t		NtcAdcValue;
;;;66     	tProtectFlagValue	ProtectFlagValue;
;;;67     	tScuProtectPar		ProtectPar;
;;;68     	
;;;69     	apiSysParGetDotpProtectPar(ProtectLevel, &ProtectPar);
000008  a901              ADD      r1,sp,#4
00000a  4638              MOV      r0,r7
00000c  f7fffffe          BL       apiSysParGetDotpProtectPar
;;;70     	appProtectGetLevelMask(ProtectLevel, &ProtectFlagValue);
000010  a905              ADD      r1,sp,#0x14
000012  4638              MOV      r0,r7
000014  f7fffffe          BL       appProtectGetLevelMask
;;;71     
;;;72     
;;;73     //	sprintf(str,"DOTP %d %d %d %d %d",ProtectLevel,
;;;74     //					ProtectPar.SetValue.l,	ProtectPar.STime.l,
;;;75     //					ProtectPar.RelValue.l,ProtectPar.RTime.l);
;;;76     //	if(!flag)					
;;;77     //		appProtectDotpDebugMsg(str);
;;;78     
;;;79     	while(1)
;;;80     	{			
;;;81     		NtcAdcValue = HalAfeGetNtcAdc(DotpNtcIndex);
;;;82     //		sprintf(str,"%d %d",DotpNtcIndex, NtcAdcValue);
;;;83     //		if(!flag)
;;;84     //			appProtectDotpDebugMsg(str);
;;;85     //		flag = 1;
;;;86     
;;;87     		if(appProtectIsOverTemperter(NtcAdcValue, ProtectPar.SetValue.l))
;;;88     		{
;;;89     			if((mDotpProtect.Flag[DotpNtcIndex] & ProtectFlagValue.Mask) == 0)
000018  f8df8184          LDR      r8,|L2.416|
;;;90     			{
;;;91     				mDotpProtect.Flag[DotpNtcIndex] &= ProtectFlagValue.ClearMask;
;;;92     				mDotpProtect.Flag[DotpNtcIndex] |= ProtectFlagValue.Setting;
;;;93     				mDotpProtect.SetCount[ProtectLevel][DotpNtcIndex] = 1;
00001c  eb0700c7          ADD      r0,r7,r7,LSL #3
000020  4d60              LDR      r5,|L2.420|
000022  eb001007          ADD      r0,r0,r7,LSL #4
000026  f04f0a01          MOV      r10,#1
00002a  f04f0900          MOV      r9,#0
00002e  eb081400          ADD      r4,r8,r0,LSL #4
                  |L2.50|
000032  8828              LDRH     r0,[r5,#0]            ;81  ; DotpNtcIndex
000034  f7fffffe          BL       HalAfeGetNtcAdc
000038  4683              MOV      r11,r0                ;81
00003a  9801              LDR      r0,[sp,#4]            ;87
00003c  b281              UXTH     r1,r0                 ;87
00003e  4658              MOV      r0,r11                ;87
000040  f7fffffe          BL       appProtectIsOverTemperter
000044  b3b0              CBZ      r0,|L2.180|
000046  8828              LDRH     r0,[r5,#0]            ;89  ; DotpNtcIndex
000048  f89d3014          LDRB     r3,[sp,#0x14]         ;89
00004c  f8181000          LDRB     r1,[r8,r0]            ;89
000050  460a              MOV      r2,r1                 ;89
000052  4019              ANDS     r1,r1,r3              ;89
000054  d022              BEQ      |L2.156|
;;;94     			}	
;;;95     			else if((mDotpProtect.Flag[DotpNtcIndex] & ProtectFlagValue.Mask) == ProtectFlagValue.Setting)
000056  f89d2016          LDRB     r2,[sp,#0x16]
00005a  4291              CMP      r1,r2
00005c  d13a              BNE      |L2.212|
;;;96     			{
;;;97     				mDotpProtect.SetCount[ProtectLevel][DotpNtcIndex]++;
00005e  1821              ADDS     r1,r4,r0
000060  f8912190          LDRB     r2,[r1,#0x190]
000064  1c52              ADDS     r2,r2,#1
000066  b2d2              UXTB     r2,r2
000068  f8812190          STRB     r2,[r1,#0x190]
;;;98     				if(mDotpProtect.SetCount[ProtectLevel][DotpNtcIndex] >= ProtectPar.STime.l)
00006c  9b02              LDR      r3,[sp,#8]
00006e  429a              CMP      r2,r3
000070  d330              BCC      |L2.212|
;;;99     				{
;;;100    					mDotpProtect.Flag[DotpNtcIndex] &= ProtectFlagValue.ClearMask;
000072  f8182000          LDRB     r2,[r8,r0]
000076  f89d3015          LDRB     r3,[sp,#0x15]
00007a  401a              ANDS     r2,r2,r3
;;;101    					mDotpProtect.Flag[DotpNtcIndex] |= ProtectFlagValue.Setted;
00007c  f89d3017          LDRB     r3,[sp,#0x17]
000080  431a              ORRS     r2,r2,r3
000082  f8082000          STRB     r2,[r8,r0]
;;;102    					mDotpProtect.SetCount[ProtectLevel][DotpNtcIndex] = 0;
000086  f8819190          STRB     r9,[r1,#0x190]
;;;103    
;;;104    					if(mDotpProtect.EvtHandler)
00008a  f8d83af0          LDR      r3,[r8,#0xaf0]  ; mDotpProtect
00008e  b30b              CBZ      r3,|L2.212|
;;;105    					{
;;;106    						mDotpProtect.EvtHandler(0, APP_PROTECT_DOTP_L1_SET + ProtectLevel, &DotpNtcIndex);
000090  4a44              LDR      r2,|L2.420|
000092  f107011d          ADD      r1,r7,#0x1d
000096  2000              MOVS     r0,#0
000098  4798              BLX      r3
00009a  e01b              B        |L2.212|
                  |L2.156|
00009c  f89d1015          LDRB     r1,[sp,#0x15]         ;91
0000a0  400a              ANDS     r2,r2,r1              ;91
0000a2  f89d1016          LDRB     r1,[sp,#0x16]         ;92
0000a6  430a              ORRS     r2,r2,r1              ;92
0000a8  f8082000          STRB     r2,[r8,r0]            ;92
0000ac  4420              ADD      r0,r0,r4              ;93
0000ae  f880a190          STRB     r10,[r0,#0x190]       ;93
0000b2  e00f              B        |L2.212|
                  |L2.180|
0000b4  e7ff              B        |L2.182|
                  |L2.182|
;;;107    					}
;;;108    				}
;;;109    			}
;;;110    		}
;;;111    		else if((mDotpProtect.Flag[DotpNtcIndex] & ProtectFlagValue.Mask) == ProtectFlagValue.Setting)
0000b6  8829              LDRH     r1,[r5,#0]  ; DotpNtcIndex
0000b8  f89d2014          LDRB     r2,[sp,#0x14]
0000bc  f89d3016          LDRB     r3,[sp,#0x16]
0000c0  f8180001          LDRB     r0,[r8,r1]
0000c4  4002              ANDS     r2,r2,r0
0000c6  429a              CMP      r2,r3
0000c8  d104              BNE      |L2.212|
;;;112    		{
;;;113    			mDotpProtect.Flag[DotpNtcIndex] &= ProtectFlagValue.ClearMask;
0000ca  f89d2015          LDRB     r2,[sp,#0x15]
0000ce  4010              ANDS     r0,r0,r2
0000d0  f8080001          STRB     r0,[r8,r1]
                  |L2.212|
;;;114    		}
;;;115    		//--------------------------------------------------------------------------
;;;116    		//	Level	Release
;;;117    		if(appProtectIsUnderTemperter(NtcAdcValue, ProtectPar.RelValue.l))
0000d4  9803              LDR      r0,[sp,#0xc]
0000d6  b281              UXTH     r1,r0
0000d8  4658              MOV      r0,r11
0000da  f7fffffe          BL       appProtectIsUnderTemperter
0000de  b3b0              CBZ      r0,|L2.334|
;;;118    		{
;;;119    			if((mDotpProtect.Flag[DotpNtcIndex] & ProtectFlagValue.Mask) == ProtectFlagValue.Setted)
0000e0  8828              LDRH     r0,[r5,#0]  ; DotpNtcIndex
0000e2  f89d3014          LDRB     r3,[sp,#0x14]
0000e6  f8181000          LDRB     r1,[r8,r0]
0000ea  460a              MOV      r2,r1
0000ec  4019              ANDS     r1,r1,r3
0000ee  f89d3017          LDRB     r3,[sp,#0x17]
0000f2  4299              CMP      r1,r3
0000f4  d10b              BNE      |L2.270|
;;;120    			{
;;;121    				mDotpProtect.Flag[DotpNtcIndex] &= ProtectFlagValue.ClearMask;
0000f6  f89d1015          LDRB     r1,[sp,#0x15]
0000fa  400a              ANDS     r2,r2,r1
;;;122    				mDotpProtect.Flag[DotpNtcIndex] |= ProtectFlagValue.Releasing;
0000fc  f89d1018          LDRB     r1,[sp,#0x18]
000100  430a              ORRS     r2,r2,r1
000102  f8082000          STRB     r2,[r8,r0]
;;;123    				mDotpProtect.ReleaseCount[ProtectLevel][DotpNtcIndex] = 1;
000106  4420              ADD      r0,r0,r4
000108  f880a640          STRB     r10,[r0,#0x640]
00010c  e032              B        |L2.372|
                  |L2.270|
;;;124    			}	
;;;125    			else if((mDotpProtect.Flag[DotpNtcIndex] & ProtectFlagValue.Mask) == ProtectFlagValue.Releasing)
00010e  f89d2018          LDRB     r2,[sp,#0x18]
000112  4291              CMP      r1,r2
000114  d12e              BNE      |L2.372|
;;;126    			{
;;;127    				mDotpProtect.ReleaseCount[ProtectLevel][DotpNtcIndex]++;
000116  1821              ADDS     r1,r4,r0
000118  f8912640          LDRB     r2,[r1,#0x640]
00011c  1c52              ADDS     r2,r2,#1
00011e  b2d2              UXTB     r2,r2
000120  f8812640          STRB     r2,[r1,#0x640]
;;;128    				if(mDotpProtect.ReleaseCount[ProtectLevel][DotpNtcIndex] >= ProtectPar.RTime.l)
000124  9b04              LDR      r3,[sp,#0x10]
000126  429a              CMP      r2,r3
000128  d324              BCC      |L2.372|
;;;129    				{
;;;130    					mDotpProtect.Flag[DotpNtcIndex] &= ProtectFlagValue.ClearMask;
00012a  f8182000          LDRB     r2,[r8,r0]
00012e  f89d3015          LDRB     r3,[sp,#0x15]
000132  401a              ANDS     r2,r2,r3
000134  f8082000          STRB     r2,[r8,r0]
;;;131    					mDotpProtect.ReleaseCount[ProtectLevel][DotpNtcIndex] = 0;
000138  f8819640          STRB     r9,[r1,#0x640]
;;;132    					if(mDotpProtect.EvtHandler)
00013c  f8d83af0          LDR      r3,[r8,#0xaf0]  ; mDotpProtect
000140  b1c3              CBZ      r3,|L2.372|
;;;133    					{
;;;134    						mDotpProtect.EvtHandler(0, APP_PROTECT_DOTP_L1_RELEASE + ProtectLevel, &DotpNtcIndex);
000142  4a18              LDR      r2,|L2.420|
000144  f1070120          ADD      r1,r7,#0x20
000148  2000              MOVS     r0,#0
00014a  4798              BLX      r3
00014c  e012              B        |L2.372|
                  |L2.334|
00014e  e7ff              B        |L2.336|
                  |L2.336|
;;;135    					}
;;;136    				}
;;;137    			}
;;;138    		}
;;;139    		else if((mDotpProtect.Flag[DotpNtcIndex] & ProtectFlagValue.Mask) == ProtectFlagValue.Releasing)
000150  8829              LDRH     r1,[r5,#0]  ; DotpNtcIndex
000152  f89d2014          LDRB     r2,[sp,#0x14]
000156  f89d3018          LDRB     r3,[sp,#0x18]
00015a  f8180001          LDRB     r0,[r8,r1]
00015e  4002              ANDS     r2,r2,r0
000160  429a              CMP      r2,r3
000162  d107              BNE      |L2.372|
;;;140    		{
;;;141    			mDotpProtect.Flag[DotpNtcIndex] &= ProtectFlagValue.ClearMask;
000164  f89d2015          LDRB     r2,[sp,#0x15]
000168  4010              ANDS     r0,r0,r2
;;;142    			mDotpProtect.Flag[DotpNtcIndex] |= ProtectFlagValue.Setted;
00016a  f89d2017          LDRB     r2,[sp,#0x17]
00016e  4310              ORRS     r0,r0,r2
000170  f8080001          STRB     r0,[r8,r1]
                  |L2.372|
;;;143    		}
;;;144    		DotpNtcIndex++;
000174  8828              LDRH     r0,[r5,#0]  ; DotpNtcIndex
000176  1c40              ADDS     r0,r0,#1
000178  8028              STRH     r0,[r5,#0]
;;;145    		if(DotpNtcIndex >= dotpNtcNumber())
00017a  f7fffffe          BL       apiSysParGetNtcNumber
00017e  8829              LDRH     r1,[r5,#0]  ; DotpNtcIndex
000180  4288              CMP      r0,r1
000182  d805              BHI      |L2.400|
;;;146    		{
;;;147    			DotpNtcIndex = 0;
000184  f8a59000          STRH     r9,[r5,#0]
;;;148    			return 1;
000188  2001              MOVS     r0,#1
                  |L2.394|
;;;149    		}
;;;150    		checkcount++;
;;;151    		if(checkcount >= DOTP_CHECK_COUNT)
;;;152    			break;
;;;153    	}
;;;154    
;;;155    	return 0;
;;;156    }
00018a  b007              ADD      sp,sp,#0x1c
00018c  e8bd8ff0          POP      {r4-r11,pc}
                  |L2.400|
000190  1c76              ADDS     r6,r6,#1              ;150
000192  b2f6              UXTB     r6,r6                 ;150
000194  2e14              CMP      r6,#0x14              ;151
000196  f4ffaf4c          BCC      |L2.50|
00019a  2000              MOVS     r0,#0                 ;155
00019c  e7f5              B        |L2.394|
;;;157    
                          ENDP

00019e  0000              DCW      0x0000
                  |L2.416|
                          DCD      ||.bss||
                  |L2.420|
                          DCD      ||.data||

                          AREA ||i.apiProtectDotpOpen||, CODE, READONLY, ALIGN=2

                  apiProtectDotpOpen PROC
;;;157    
;;;158    void apiProtectDotpOpen(tAppProtectEvtHandler evtHandler)
000000  b510              PUSH     {r4,lr}
;;;159    {
000002  4604              MOV      r4,r0
;;;160    	dotpProtectIni();
000004  f7fffffe          BL       dotpProtectIni
;;;161    	
;;;162    	mDotpProtect.EvtHandler = evtHandler;
000008  4801              LDR      r0,|L3.16|
00000a  f8c04af0          STR      r4,[r0,#0xaf0]  ; mDotpProtect
;;;163    }
00000e  bd10              POP      {r4,pc}
;;;164    
                          ENDP

                  |L3.16|
                          DCD      ||.bss||

                          AREA ||i.dotpProtectIni||, CODE, READONLY, ALIGN=2

                  dotpProtectIni PROC
;;;44     /* Private variables ---------------------------------------------------------*/
;;;45     static void dotpProtectIni(void)
000000  4901              LDR      r1,|L4.8|
;;;46     {
;;;47     	DotpNtcIndex = 0;	
000002  2000              MOVS     r0,#0
000004  8008              STRH     r0,[r1,#0]
;;;48     }
000006  4770              BX       lr
;;;49     /* Private function prototypes -----------------------------------------------*/
                          ENDP

                  |L4.8|
                          DCD      ||.data||

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  mDotpProtect
                          %        2804

                          AREA ||.data||, DATA, ALIGN=1

                  DotpNtcIndex
000000  0000              DCB      0x00,0x00
