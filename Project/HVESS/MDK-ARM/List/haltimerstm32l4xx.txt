; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\obj\haltimerstm32l4xx.o --asm_dir=.\List\ --list_dir=.\List\ --depend=.\obj\haltimerstm32l4xx.d --cpu=Cortex-M4.fp.sp --apcs=interwork -O1 --diag_suppress=9931 -I../Inc -I../../../Drivers/CMSIS/Include -I../../../Drivers/CMSIS/Device/ST/STM32L4xx/Include -I../../../Drivers/STM32L4xx_HAL_Driver/Inc -I../../../Drivers/BSP/STM32L4xx_Nucleo_144 -I..\..\..\User -I..\..\..\HAL -I..\..\..\Lib -I..\..\..\Config_Common -I..\..\..\AppProtect -I..\..\..\APP -I..\..\..\Lib\SMP -I..\..\..\Drivers\SMP -I..\..\..\BSP -I..\..\..\Drivers\BSP\STM32L496V_Davinci -I..\..\..\API -I..\..\..\AppCommunication -I..\..\..\Drivers\W5500 -I..\..\..\RTT -I.\RTE\_HVESS_Normal -IC:\Users\88691\AppData\Local\Arm\Packs\ARM\CMSIS\5.8.0\CMSIS\Core\Include -IC:\Users\88691\AppData\Local\Arm\Packs\Keil\STM32L4xx_DFP\2.6.0\Drivers\CMSIS\Device\ST\STM32L4xx\Include -D__MICROLIB -D__UVISION_VERSION=535 -D_RTE_ -DSTM32L496xx -D_RTE_ -DSTM32L496xx -DUSE_HAL_DRIVER -DUSE_STM32L4XX_NUCLEO_144 -DBSPSMPS -DUSE_STM32L4XX_NUCLEO_144_SMPS -DUSE_ADP5301ACBZ -W ..\..\..\HAL\HalTimerSTM32L4xx.c]
                          THUMB

                          AREA ||i.HalTimerClose||, CODE, READONLY, ALIGN=2

                  HalTimerClose PROC
;;;112    
;;;113    tErrCode HalTimerClose(tHalTimer *pHalTimer)
000000  7800              LDRB     r0,[r0,#0]
;;;114    {
;;;115    	if(pHalTimer->TimerNo == 3)
000002  2803              CMP      r0,#3
000004  d002              BEQ      |L1.12|
;;;116    	{
;;;117    		TimerEvtHandler3 = NULL;
;;;118    	}
;;;119    	else 
;;;120    		return RES_ERROR_INVALID_PARAM;	
000006  f06f0002          MVN      r0,#2
;;;121    	return RES_SUCCESS;
;;;122    
;;;123    }
00000a  4770              BX       lr
                  |L1.12|
00000c  4901              LDR      r1,|L1.20|
00000e  2000              MOVS     r0,#0                 ;117
000010  6008              STR      r0,[r1,#0]            ;117  ; TimerEvtHandler3
000012  4770              BX       lr
;;;124    
                          ENDP

                  |L1.20|
                          DCD      ||.data||

                          AREA ||i.HalTimerOpen||, CODE, READONLY, ALIGN=2

                  HalTimerOpen PROC
;;;60     /* Public function prototypes -----------------------------------------------*/
;;;61     tErrCode HalTimerOpen(tHalTimer *pHalTimer, tHalTimerEvtHandler evtHandler)
000000  b57c              PUSH     {r2-r6,lr}
;;;62     {
000002  460c              MOV      r4,r1
;;;63     	__IO uint32_t uwPrescalerValue = 0;
000004  2300              MOVS     r3,#0
000006  9301              STR      r3,[sp,#4]
;;;64     
;;;65     	if(pHalTimer->TimerNo == 3)
000008  7801              LDRB     r1,[r0,#0]
00000a  2903              CMP      r1,#3
00000c  d001              BEQ      |L2.18|
;;;66     	{
;;;67           __HAL_RCC_TIM3_CLK_ENABLE();
;;;68     		
;;;69     		  uwPrescalerValue = (uint32_t)(SystemCoreClock / 1000000) - 1;
;;;70     
;;;71     		  /* Set TIMx instance */
;;;72       		TimHandle3.Instance = TIM3;
;;;73     
;;;74     		  /* Initialize TIMx peripheral as follows:
;;;75     	       + Period = 10000 - 1
;;;76         	   + Prescaler = (SystemCoreClock/10000) - 1
;;;77         	   + ClockDivision = 0
;;;78     	       + Counter direction = Up
;;;79       		*/
;;;80       		TimHandle3.Init.Period            = pHalTimer->IntervalUs - 1;
;;;81       		TimHandle3.Init.Prescaler         = uwPrescalerValue;
;;;82       		TimHandle3.Init.ClockDivision     = 0;
;;;83       		TimHandle3.Init.CounterMode       = TIM_COUNTERMODE_UP;
;;;84       		TimHandle3.Init.RepetitionCounter = 0;
;;;85     
;;;86       		if (HAL_TIM_Base_Init(&TimHandle3) != HAL_OK)
;;;87       		{
;;;88         		/* Initialization Error */
;;;89         		return RES_ERROR_INIT;//Error_Handler();
;;;90       		}
;;;91     
;;;92       		/*##-2- Start the TIM Base generation in interrupt mode ####################*/
;;;93       		/* Start Channel1 */
;;;94       		if (HAL_TIM_Base_Start_IT(&TimHandle3) != HAL_OK)
;;;95       		{
;;;96         		/* Starting Error */
;;;97         		//Error_Handler();
;;;98         		return RES_ERROR_INIT;
;;;99       		}
;;;100      		TimerEvtHandler3 = evtHandler;
;;;101    		
;;;102    		  /* Enable and set Button EXTI Interrupt to the lowest priority */
;;;103    		  //HAL_NVIC_SetPriority(TIM3_IRQn, 0x0F, 0x00);
;;;104    		  HAL_NVIC_EnableIRQ(TIM3_IRQn);
;;;105    	
;;;106    	}
;;;107    	else 
;;;108    		return RES_ERROR_INVALID_PARAM;
00000e  1ed8              SUBS     r0,r3,#3
;;;109    	return RES_SUCCESS;
;;;110    }
000010  bd7c              POP      {r2-r6,pc}
                  |L2.18|
000012  4a18              LDR      r2,|L2.116|
000014  6d91              LDR      r1,[r2,#0x58]         ;67
000016  f0410102          ORR      r1,r1,#2              ;67
00001a  6591              STR      r1,[r2,#0x58]         ;67
00001c  6d91              LDR      r1,[r2,#0x58]         ;67
00001e  f0010102          AND      r1,r1,#2              ;67
000022  9100              STR      r1,[sp,#0]            ;67
000024  4914              LDR      r1,|L2.120|
000026  4a15              LDR      r2,|L2.124|
000028  6809              LDR      r1,[r1,#0]            ;69  ; SystemCoreClock
00002a  fbb1f1f2          UDIV     r1,r1,r2              ;69
00002e  1e49              SUBS     r1,r1,#1              ;69
000030  9101              STR      r1,[sp,#4]            ;69
000032  4a14              LDR      r2,|L2.132|
000034  4912              LDR      r1,|L2.128|
000036  6011              STR      r1,[r2,#0]            ;72  ; TimHandle3
000038  6840              LDR      r0,[r0,#4]            ;80
00003a  1e40              SUBS     r0,r0,#1              ;80
00003c  60d0              STR      r0,[r2,#0xc]          ;80  ; TimHandle3
00003e  9801              LDR      r0,[sp,#4]            ;81
000040  6050              STR      r0,[r2,#4]            ;81  ; TimHandle3
000042  6113              STR      r3,[r2,#0x10]         ;82  ; TimHandle3
000044  6093              STR      r3,[r2,#8]            ;83  ; TimHandle3
000046  6153              STR      r3,[r2,#0x14]         ;84  ; TimHandle3
000048  4610              MOV      r0,r2                 ;86
00004a  f7fffffe          BL       HAL_TIM_Base_Init
00004e  f06f0514          MVN      r5,#0x14              ;89
000052  b108              CBZ      r0,|L2.88|
000054  4628              MOV      r0,r5                 ;89
000056  bd7c              POP      {r2-r6,pc}
                  |L2.88|
000058  480a              LDR      r0,|L2.132|
00005a  f7fffffe          BL       HAL_TIM_Base_Start_IT
00005e  b108              CBZ      r0,|L2.100|
000060  4628              MOV      r0,r5                 ;98
000062  bd7c              POP      {r2-r6,pc}
                  |L2.100|
000064  4808              LDR      r0,|L2.136|
000066  6004              STR      r4,[r0,#0]            ;100  ; TimerEvtHandler3
000068  201d              MOVS     r0,#0x1d              ;104
00006a  f7fffffe          BL       HAL_NVIC_EnableIRQ
00006e  2000              MOVS     r0,#0                 ;109
000070  bd7c              POP      {r2-r6,pc}
;;;111    
                          ENDP

000072  0000              DCW      0x0000
                  |L2.116|
                          DCD      0x40021000
                  |L2.120|
                          DCD      SystemCoreClock
                  |L2.124|
                          DCD      0x000f4240
                  |L2.128|
                          DCD      0x40000400
                  |L2.132|
                          DCD      ||.bss||
                  |L2.136|
                          DCD      ||.data||

                          AREA ||i.TIM3_IRQHandler||, CODE, READONLY, ALIGN=2

                  TIM3_IRQHandler PROC
;;;45       */
;;;46     void TIM3_IRQHandler(void)
000000  b510              PUSH     {r4,lr}
;;;47     {
;;;48     	HAL_TIM_IRQHandler(&TimHandle3);
000002  4807              LDR      r0,|L3.32|
000004  f7fffffe          BL       HAL_TIM_IRQHandler
;;;49     	if(TimerEvtHandler3){
000008  4806              LDR      r0,|L3.36|
00000a  6803              LDR      r3,[r0,#0]  ; TimerEvtHandler3
00000c  2b00              CMP      r3,#0
00000e  d005              BEQ      |L3.28|
;;;50     	    TimerEvtHandler3(0,0,0);
000010  2200              MOVS     r2,#0
000012  e8bd4010          POP      {r4,lr}
000016  4611              MOV      r1,r2
000018  4610              MOV      r0,r2
00001a  4718              BX       r3
                  |L3.28|
;;;51     	}
;;;52     		
;;;53     	#if 0
;;;54     	GPIOA->ODR ^= (GPIO_PIN_1 | GPIO_PIN_3);//| GPIO_PIN_1 | GPIO_PIN_2);
;;;55     /	GPIOD->ODR ^= GPIO_PIN_13;
;;;56       #endif
;;;57     	
;;;58     }
00001c  bd10              POP      {r4,pc}
;;;59     
                          ENDP

00001e  0000              DCW      0x0000
                  |L3.32|
                          DCD      ||.bss||
                  |L3.36|
                          DCD      ||.data||

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  TimHandle3
                          %        76

                          AREA ||.data||, DATA, ALIGN=2

                  TimerEvtHandler3
                          DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "..\\..\\..\\HAL\\HalTimerSTM32L4xx.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___19_HalTimerSTM32L4xx_c_2848f329____REV16|
#line 492 "../../../Drivers/CMSIS/Include/cmsis_armcc.h"
|__asm___19_HalTimerSTM32L4xx_c_2848f329____REV16| PROC
#line 493

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___19_HalTimerSTM32L4xx_c_2848f329____REVSH|
#line 507
|__asm___19_HalTimerSTM32L4xx_c_2848f329____REVSH| PROC
#line 508

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___19_HalTimerSTM32L4xx_c_2848f329____RRX|
#line 694
|__asm___19_HalTimerSTM32L4xx_c_2848f329____RRX| PROC
#line 695

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
