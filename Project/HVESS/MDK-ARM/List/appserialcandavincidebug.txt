; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\obj\appserialcandavincidebug.o --asm_dir=.\List\ --list_dir=.\List\ --depend=.\obj\appserialcandavincidebug.d --cpu=Cortex-M4.fp.sp --apcs=interwork -O1 --diag_suppress=9931 -I../Inc -I../../../Drivers/CMSIS/Include -I../../../Drivers/CMSIS/Device/ST/STM32L4xx/Include -I../../../Drivers/STM32L4xx_HAL_Driver/Inc -I../../../Drivers/BSP/STM32L4xx_Nucleo_144 -I..\..\..\User -I..\..\..\HAL -I..\..\..\Lib -I..\..\..\Config_Common -I..\..\..\AppProtect -I..\..\..\APP -I..\..\..\Lib\SMP -I..\..\..\Drivers\SMP -I..\..\..\BSP -I..\..\..\Drivers\BSP\STM32L496V_Davinci -I..\..\..\API -I..\..\..\AppCommunication -I..\..\..\Drivers\W5500 -I..\..\..\RTT -I.\RTE\_HVESS_Normal -IC:\Users\88691\AppData\Local\Arm\Packs\ARM\CMSIS\5.8.0\CMSIS\Core\Include -IC:\Users\88691\AppData\Local\Arm\Packs\Keil\STM32L4xx_DFP\2.6.0\Drivers\CMSIS\Device\ST\STM32L4xx\Include -D__MICROLIB -D__UVISION_VERSION=535 -D_RTE_ -DSTM32L496xx -D_RTE_ -DSTM32L496xx -DUSE_HAL_DRIVER -DUSE_STM32L4XX_NUCLEO_144 -DBSPSMPS -DUSE_STM32L4XX_NUCLEO_144_SMPS -DUSE_ADP5301ACBZ -W ..\..\..\AppCommunication\AppSerialCanDavinciDebug.c]
                          THUMB

                          AREA ||i.DavinciCanDebugCellVSimu||, CODE, READONLY, ALIGN=1

                  DavinciCanDebugCellVSimu PROC
;;;112    
;;;113    static void DavinciCanDebugCellVSimu(smp_can_package_t *pCanPkg)
000000  b570              PUSH     {r4-r6,lr}
;;;114    {
000002  4606              MOV      r6,r0
;;;115    	uint8_t		i;
;;;116    	uint16_t	subindex, voltage;
;;;117    	char	str[100];
;;;118    	
;;;119    	subindex = SMP_CAN_GET_SUB_INDEX(pCanPkg->id);
000004  8830              LDRH     r0,[r6,#0]
000006  f3c00509          UBFX     r5,r0,#0,#10
;;;120    
;;;121    	for(i=0; i<4 ; i++)
00000a  2400              MOVS     r4,#0
                  |L1.12|
;;;122    	{
;;;123    		voltage = GET_WORD(&pCanPkg->dat[i*2]);
00000c  eb060044          ADD      r0,r6,r4,LSL #1
000010  7941              LDRB     r1,[r0,#5]
000012  7980              LDRB     r0,[r0,#6]
000014  eb012000          ADD      r0,r1,r0,LSL #8
000018  b281              UXTH     r1,r0
;;;124    		halAfeSetCellVoltage(subindex++, voltage);
00001a  4628              MOV      r0,r5
00001c  1c6d              ADDS     r5,r5,#1
00001e  b2ad              UXTH     r5,r5
000020  f7fffffe          BL       halAfeSetCellVoltage
000024  1c64              ADDS     r4,r4,#1              ;121
000026  b2e4              UXTB     r4,r4                 ;121
000028  2c04              CMP      r4,#4                 ;121
00002a  d3ef              BCC      |L1.12|
;;;125    	}
;;;126    }
00002c  bd70              POP      {r4-r6,pc}
;;;127    
                          ENDP


                          AREA ||i.DavinciCanDebugCurrentAdc||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                  DavinciCanDebugCurrentAdc PROC
;;;86     
;;;87     static void DavinciCanDebugCurrentAdc(smp_can_package_t *pCanPkg)
000000  b530              PUSH     {r4,r5,lr}
;;;88     {
000002  b099              SUB      sp,sp,#0x64
000004  4604              MOV      r4,r0
;;;89     	int32_t	adc;
;;;90     	char	str[100];
;;;91     	
;;;92     	adc = (int32_t)(GET_WORD(&pCanPkg->dat[0]));
000006  7960              LDRB     r0,[r4,#5]
000008  79a1              LDRB     r1,[r4,#6]
00000a  eb002501          ADD      r5,r0,r1,LSL #8
;;;93     
;;;94     	halAfeSetCurrentAdcValue(SMP_CAN_GET_SUB_INDEX(pCanPkg->id), adc);
00000e  7820              LDRB     r0,[r4,#0]
000010  4629              MOV      r1,r5
000012  f7fffffe          BL       halAfeSetCurrentAdcValue
;;;95     
;;;96     	sprintf(str,"adc:%d I = %d", adc, appCurrDebug(SMP_CAN_GET_SUB_INDEX(pCanPkg->id), adc));
000016  7820              LDRB     r0,[r4,#0]
000018  4629              MOV      r1,r5
00001a  f7fffffe          BL       appCurrDebug
00001e  4603              MOV      r3,r0
000020  462a              MOV      r2,r5
000022  a104              ADR      r1,|L2.52|
000024  4668              MOV      r0,sp
000026  f7fffffe          BL       __2sprintf
;;;97     	appSerialCanDavinciDebugMsg(str);
00002a  4668              MOV      r0,sp
00002c  f7fffffe          BL       appSerialCanDavinciSendTextMessage
;;;98     }
000030  b019              ADD      sp,sp,#0x64
000032  bd30              POP      {r4,r5,pc}
;;;99     static void DavinciCanDebugVbatAdc(smp_can_package_t *pCanPkg)
                          ENDP

                  |L2.52|
000034  6164633a          DCB      "adc:%d I = %d",0
000038  25642049
00003c  203d2025
000040  6400    
000042  00                DCB      0
000043  00                DCB      0

                          AREA ||i.DavinciCanDebugCurrentSimu||, CODE, READONLY, ALIGN=1

                  DavinciCanDebugCurrentSimu PROC
;;;171    
;;;172    static void DavinciCanDebugCurrentSimu(smp_can_package_t *pCanPkg)
000000  8801              LDRH     r1,[r0,#0]
;;;173    {
;;;174    	uint8_t		i;
;;;175    	uint16_t	subindex, voltage;
;;;176    	char	str[100];
;;;177    	
;;;178    	subindex = SMP_CAN_GET_SUB_INDEX(pCanPkg->id);
000002  f3c10109          UBFX     r1,r1,#0,#10
;;;179    
;;;180    	if(subindex == 0)
000006  2900              CMP      r1,#0
000008  d00e              BEQ      |L3.40|
;;;181    	{
;;;182    		HalAfeSetCurrentValue(0, (int32_t)GET_DWORD(&pCanPkg->dat[0]));
;;;183    //		sprintf(str,"Decode Current:%d", (int32_t)GET_DWORD(&pCanPkg->dat[0]));
;;;184    //		appSerialCanDavinciDebugMsg(str);
;;;185    	}
;;;186    	else if(subindex == 1)
00000a  2901              CMP      r1,#1
00000c  d119              BNE      |L3.66|
;;;187    	{
;;;188    		HalAfeSetCurrentValue(1, (int32_t)GET_DWORD(&pCanPkg->dat[0]));
00000e  7941              LDRB     r1,[r0,#5]
000010  7a02              LDRB     r2,[r0,#8]
000012  eb016102          ADD      r1,r1,r2,LSL #24
000016  79c2              LDRB     r2,[r0,#7]
000018  7980              LDRB     r0,[r0,#6]
00001a  0412              LSLS     r2,r2,#16
00001c  eb022000          ADD      r0,r2,r0,LSL #8
000020  4401              ADD      r1,r1,r0
000022  2001              MOVS     r0,#1
000024  f7ffbffe          B.W      HalAfeSetCurrentValue
                  |L3.40|
000028  7941              LDRB     r1,[r0,#5]            ;182
00002a  7a02              LDRB     r2,[r0,#8]            ;182
00002c  eb016102          ADD      r1,r1,r2,LSL #24      ;182
000030  79c2              LDRB     r2,[r0,#7]            ;182
000032  7980              LDRB     r0,[r0,#6]            ;182
000034  0412              LSLS     r2,r2,#16             ;182
000036  eb022000          ADD      r0,r2,r0,LSL #8       ;182
00003a  4401              ADD      r1,r1,r0              ;182
00003c  2000              MOVS     r0,#0                 ;182
00003e  f7ffbffe          B.W      HalAfeSetCurrentValue
                  |L3.66|
;;;189    	}
;;;190    }
000042  4770              BX       lr
;;;191    
                          ENDP


                          AREA ||i.DavinciCanDebugGpio||, CODE, READONLY, ALIGN=1

                  DavinciCanDebugGpio PROC
;;;191    
;;;192    static void DavinciCanDebugGpio(smp_can_package_t *pCanPkg)
000000  7940              LDRB     r0,[r0,#5]
;;;193    {
;;;194    	int32_t	adc;
;;;195    	char	str[100];
;;;196    	
;;;197    	switch(pCanPkg->dat[0])
;;;198    	{
;;;199    	case 0:
;;;200    		//HalBslK1Ctrl(pCanPkg->dat[1]);
;;;201    		break;
;;;202    	case 1:
;;;203    		//HalBspK2Ctrl(pCanPkg->dat[1]);
;;;204    		break;
;;;205    	case 2:
;;;206    		//HalBspK3Ctrl(pCanPkg->dat[1]);
;;;207    		//HalBspReleaseCtrl(pCanPkg->dat[1]);
;;;208    		break;
;;;209    	case 3:
;;;210    		//HalBspK4Ctrl(pCanPkg->dat[1]);
;;;211    		//HalBspRelayPsCtrl(pCanPkg->dat[1]);
;;;212    		break;
;;;213    	}
;;;214    
;;;215    	//sprintf(str,"Gpio Ctrl %d %d", pCanPkg->dat[0] ,pCanPkg->dat[1]);
;;;216    	//appSerialCanDavinciDebugMsg(str);
;;;217    }
000002  4770              BX       lr
;;;218    
                          ENDP


                          AREA ||i.DavinciCanDebugModeChange||, CODE, READONLY, ALIGN=2

                  DavinciCanDebugModeChange PROC
;;;49     
;;;50     static void DavinciCanDebugModeChange(smp_can_package_t *pCanPkg)
000000  b510              PUSH     {r4,lr}
;;;51     {
000002  4604              MOV      r4,r0
;;;52     	uint8_t		i;
;;;53     	uint16_t	subindex, voltage;
;;;54     	char	str[100];
;;;55     	
;;;56     	//appSerialCanDavinciDebugMsg("Rcv Simu");
;;;57     	//
;;;58     	subindex = SMP_CAN_GET_SUB_INDEX(pCanPkg->id);
000004  8820              LDRH     r0,[r4,#0]
000006  f3c00009          UBFX     r0,r0,#0,#10
;;;59     	if(subindex == SMP_SIMU_MODE_SUB_INDEX)
00000a  2801              CMP      r0,#1
00000c  d015              BEQ      |L5.58|
;;;60     	{
;;;61     		if(memcmp(pCanPkg->dat, "EnSimuM", 7) == 0)
;;;62     		{
;;;63     			appProjectEnableSimuMode();
;;;64     			//appSerialCanDavinciDebugMsg("EnSimuM");
;;;65     		}
;;;66     		else if(memcmp(pCanPkg->dat, "ExSimuM", 7) == 0)
;;;67     		{
;;;68     			appProjectDisableSimuMode();
;;;69     			//appSerialCanDavinciDebugMsg("ExSimuM");
;;;70     		}
;;;71     	}
;;;72     	else if(subindex == SMP_ENG_MODE_SUB_INDEX)
00000e  2802              CMP      r0,#2
000010  d12f              BNE      |L5.114|
;;;73     	{
;;;74     		if(memcmp(pCanPkg->dat, "EnterEng", 8) == 0)
000012  2208              MOVS     r2,#8
000014  a117              ADR      r1,|L5.116|
000016  1d60              ADDS     r0,r4,#5
000018  f7fffffe          BL       memcmp
00001c  b310              CBZ      r0,|L5.100|
;;;75     		{
;;;76     			appProjectEnableEngMode();
;;;77     			appSerialCanDavinciDebugMsg("Enter Eng. Mode");
;;;78     		}
;;;79     		else if(memcmp(pCanPkg->dat, "ExitEngM", 8) == 0)
00001e  2208              MOVS     r2,#8
000020  a117              ADR      r1,|L5.128|
000022  1d60              ADDS     r0,r4,#5
000024  f7fffffe          BL       memcmp
000028  2800              CMP      r0,#0
00002a  d122              BNE      |L5.114|
;;;80     		{
;;;81     			appProjectDisableEngMode();
00002c  f7fffffe          BL       appProjectDisableEngMode
;;;82     			appSerialCanDavinciDebugMsg("Exit Eng. Mode");
000030  e8bd4010          POP      {r4,lr}
000034  a015              ADR      r0,|L5.140|
000036  f7ffbffe          B.W      appSerialCanDavinciSendTextMessage
                  |L5.58|
00003a  2207              MOVS     r2,#7                 ;61
00003c  a117              ADR      r1,|L5.156|
00003e  1d60              ADDS     r0,r4,#5              ;61
000040  f7fffffe          BL       memcmp
000044  b150              CBZ      r0,|L5.92|
000046  2207              MOVS     r2,#7                 ;66
000048  a116              ADR      r1,|L5.164|
00004a  1d60              ADDS     r0,r4,#5              ;66
00004c  f7fffffe          BL       memcmp
000050  2800              CMP      r0,#0                 ;66
000052  d10e              BNE      |L5.114|
000054  e8bd4010          POP      {r4,lr}               ;68
000058  f7ffbffe          B.W      appProjectDisableSimuMode
                  |L5.92|
00005c  e8bd4010          POP      {r4,lr}               ;63
000060  f7ffbffe          B.W      appProjectEnableSimuMode
                  |L5.100|
000064  f7fffffe          BL       appProjectEnableEngMode
000068  e8bd4010          POP      {r4,lr}               ;77
00006c  a00f              ADR      r0,|L5.172|
00006e  f7ffbffe          B.W      appSerialCanDavinciSendTextMessage
                  |L5.114|
;;;83     		}
;;;84     	}
;;;85     }
000072  bd10              POP      {r4,pc}
;;;86     
                          ENDP

                  |L5.116|
000074  456e7465          DCB      "EnterEng",0
000078  72456e67
00007c  00      
00007d  00                DCB      0
00007e  00                DCB      0
00007f  00                DCB      0
                  |L5.128|
000080  45786974          DCB      "ExitEngM",0
000084  456e674d
000088  00      
000089  00                DCB      0
00008a  00                DCB      0
00008b  00                DCB      0
                  |L5.140|
00008c  45786974          DCB      "Exit Eng. Mode",0
000090  20456e67
000094  2e204d6f
000098  646500  
00009b  00                DCB      0
                  |L5.156|
00009c  456e5369          DCB      "EnSimuM",0
0000a0  6d754d00
                  |L5.164|
0000a4  45785369          DCB      "ExSimuM",0
0000a8  6d754d00
                  |L5.172|
0000ac  456e7465          DCB      "Enter Eng. Mode",0
0000b0  7220456e
0000b4  672e204d
0000b8  6f646500

                          AREA ||i.DavinciCanDebugNtcTSimu||, CODE, READONLY, ALIGN=2

                  DavinciCanDebugNtcTSimu PROC
;;;144    }
;;;145    static void DavinciCanDebugNtcTSimu(smp_can_package_t *pCanPkg)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;146    {
000004  4607              MOV      r7,r0
;;;147    	uint8_t		i;
;;;148    	uint16_t	subindex, voltage;
;;;149    	int16_t		temp;
;;;150    	char	str[100];
;;;151    	
;;;152    	subindex = SMP_CAN_GET_SUB_INDEX(pCanPkg->id);
000006  8838              LDRH     r0,[r7,#0]
000008  f3c00509          UBFX     r5,r0,#0,#10
;;;153    
;;;154    	for(i=0; i<8 ; i++)
00000c  2400              MOVS     r4,#0
;;;155    	{
;;;156    		temp = (int16_t)pCanPkg->dat[i];		
;;;157    		voltage = LibTemperatureToVoltage(temp);
;;;158    		/*
;;;159    		if(subindex == 0)
;;;160    		{
;;;161    			sprintf(str,"Set NTC T=%d V=%d",temp, voltage);
;;;162    			appSerialCanDavinciDebugMsg(str);
;;;163    		}
;;;164    		*/
;;;165    		GPIOD->ODR ^= 	GPIO_PIN_15;	
00000e  4e0a              LDR      r6,|L6.56|
                  |L6.16|
000010  1938              ADDS     r0,r7,r4              ;156
000012  7940              LDRB     r0,[r0,#5]            ;156
000014  f7fffffe          BL       LibTemperatureToVoltage
000018  b281              UXTH     r1,r0                 ;157
00001a  6830              LDR      r0,[r6,#0]
00001c  f4804000          EOR      r0,r0,#0x8000
000020  6030              STR      r0,[r6,#0]
;;;166    		halAfeSetNtcAdcData(subindex++, voltage);
000022  4628              MOV      r0,r5
000024  1c6d              ADDS     r5,r5,#1
000026  b2ad              UXTH     r5,r5
000028  f7fffffe          BL       halAfeSetNtcAdcData
00002c  1c64              ADDS     r4,r4,#1              ;154
00002e  b2e4              UXTB     r4,r4                 ;154
000030  2c08              CMP      r4,#8                 ;154
000032  d3ed              BCC      |L6.16|
;;;167    	}
;;;168    	//appSerialCanDavinciDebugMsg("Decode NTC");
;;;169    
;;;170    }
000034  e8bd81f0          POP      {r4-r8,pc}
;;;171    
                          ENDP

                  |L6.56|
                          DCD      0x48000c14

                          AREA ||i.DavinciCanDebugNtcVSimu||, CODE, READONLY, ALIGN=1

                  DavinciCanDebugNtcVSimu PROC
;;;128    
;;;129    static void DavinciCanDebugNtcVSimu(smp_can_package_t *pCanPkg)
000000  b570              PUSH     {r4-r6,lr}
;;;130    {
000002  4606              MOV      r6,r0
;;;131    	uint8_t		i;
;;;132    	uint16_t	subindex, voltage;
;;;133    	char	str[100];
;;;134    	
;;;135    	subindex = SMP_CAN_GET_SUB_INDEX(pCanPkg->id);
000004  8830              LDRH     r0,[r6,#0]
000006  f3c00509          UBFX     r5,r0,#0,#10
;;;136    
;;;137    	for(i=0; i<4 ; i++)
00000a  2400              MOVS     r4,#0
                  |L7.12|
;;;138    	{
;;;139    		voltage = GET_WORD(&pCanPkg->dat[i*2]);
00000c  eb060044          ADD      r0,r6,r4,LSL #1
000010  7941              LDRB     r1,[r0,#5]
000012  7980              LDRB     r0,[r0,#6]
000014  eb012000          ADD      r0,r1,r0,LSL #8
000018  b281              UXTH     r1,r0
;;;140    		halAfeSetNtcAdcData(subindex++, voltage);
00001a  4628              MOV      r0,r5
00001c  1c6d              ADDS     r5,r5,#1
00001e  b2ad              UXTH     r5,r5
000020  f7fffffe          BL       halAfeSetNtcAdcData
000024  1c64              ADDS     r4,r4,#1              ;137
000026  b2e4              UXTB     r4,r4                 ;137
000028  2c04              CMP      r4,#4                 ;137
00002a  d3ef              BCC      |L7.12|
;;;141    	}
;;;142    	//appSerialCanDavinciDebugMsg("Decode NTC");
;;;143    
;;;144    }
00002c  bd70              POP      {r4-r6,pc}
;;;145    static void DavinciCanDebugNtcTSimu(smp_can_package_t *pCanPkg)
                          ENDP


                          AREA ||i.DavinciCanDebugRelayControl||, CODE, READONLY, ALIGN=2

                  DavinciCanDebugRelayControl PROC
;;;236    }
;;;237    static void DavinciCanDebugRelayControl(smp_can_package_t *pCanPkg)
000000  b510              PUSH     {r4,lr}
;;;238    {
000002  4604              MOV      r4,r0
;;;239    	uint8_t		i;
;;;240    	uint16_t	subindex, voltage;
;;;241    	char	str[100];
;;;242    	
;;;243    	if(appProjectIsInEngMode() == 0)
000004  f7fffffe          BL       appProjectIsInEngMode
000008  2800              CMP      r0,#0
00000a  d05b              BEQ      |L8.196|
;;;244    		return;
;;;245    	
;;;246    	subindex = SMP_CAN_GET_SUB_INDEX(pCanPkg->id);
00000c  8820              LDRH     r0,[r4,#0]
00000e  f3c00009          UBFX     r0,r0,#0,#10
;;;247    
;;;248    	switch(subindex)
000012  2806              CMP      r0,#6
000014  d256              BCS      |L8.196|
000016  e8dff000          TBB      [pc,r0]
00001a  5503              DCB      0x55,0x03
00001c  15253545          DCB      0x15,0x25,0x35,0x45
;;;249    	{
;;;250    	case SMP_PS_RELAY_SUB_INDEX:
;;;251    		if(pCanPkg->dat[0])
000020  7960              LDRB     r0,[r4,#5]
000022  b138              CBZ      r0,|L8.52|
;;;252    		{
;;;253    			HalBspRelayPsCtrl(1);
000024  2001              MOVS     r0,#1
000026  f7fffffe          BL       HalBspRelayPsCtrl
;;;254    			appSerialCanDavinciDebugMsg("Ps Relay On");
00002a  e8bd4010          POP      {r4,lr}
00002e  a026              ADR      r0,|L8.200|
000030  f7ffbffe          B.W      appSerialCanDavinciSendTextMessage
                  |L8.52|
;;;255    		}
;;;256    		else
;;;257    		{
;;;258    			HalBspRelayPsCtrl(0);
000034  2000              MOVS     r0,#0
000036  f7fffffe          BL       HalBspRelayPsCtrl
;;;259    			appSerialCanDavinciDebugMsg("Ps Relay Off");
00003a  e8bd4010          POP      {r4,lr}
00003e  a025              ADR      r0,|L8.212|
000040  f7ffbffe          B.W      appSerialCanDavinciSendTextMessage
;;;260    		}
;;;261    		break;
;;;262    	case SMP_P_MAIN_RELAY_SUB_INDEX:
;;;263    		if(pCanPkg->dat[0])
000044  7960              LDRB     r0,[r4,#5]
000046  b130              CBZ      r0,|L8.86|
;;;264    		{
;;;265    			halBspPostiveRelayOn();
000048  f7fffffe          BL       halBspPostiveRelayOn
;;;266    			appSerialCanDavinciDebugMsg("P Main Relay On");
00004c  e8bd4010          POP      {r4,lr}
000050  a024              ADR      r0,|L8.228|
000052  f7ffbffe          B.W      appSerialCanDavinciSendTextMessage
                  |L8.86|
;;;267    		}
;;;268    		else
;;;269    		{
;;;270    			halBspPostiveRelayOff();
000056  f7fffffe          BL       halBspPostiveRelayOff
;;;271    			appSerialCanDavinciDebugMsg("P Main Relay Off");
00005a  e8bd4010          POP      {r4,lr}
00005e  a025              ADR      r0,|L8.244|
000060  f7ffbffe          B.W      appSerialCanDavinciSendTextMessage
;;;272    		}
;;;273    		break;
;;;274    	case SMP_N_MAIN_RELAY_SUB_INDEX:
;;;275    		if(pCanPkg->dat[0])
000064  7960              LDRB     r0,[r4,#5]
000066  b130              CBZ      r0,|L8.118|
;;;276    		{
;;;277    			halBspNegtiveRelayOn();
000068  f7fffffe          BL       halBspNegtiveRelayOn
;;;278    			appSerialCanDavinciDebugMsg("N Main Relay On");
00006c  e8bd4010          POP      {r4,lr}
000070  a025              ADR      r0,|L8.264|
000072  f7ffbffe          B.W      appSerialCanDavinciSendTextMessage
                  |L8.118|
;;;279    		}
;;;280    		else
;;;281    		{
;;;282    			halBspNegtiveRelayOff();
000076  f7fffffe          BL       halBspNegtiveRelayOff
;;;283    			appSerialCanDavinciDebugMsg("N Main Relay Off");
00007a  e8bd4010          POP      {r4,lr}
00007e  a026              ADR      r0,|L8.280|
000080  f7ffbffe          B.W      appSerialCanDavinciSendTextMessage
;;;284    		}
;;;285    		break;
;;;286    	case SMP_PRE_RELAY_SUB_INDEX:
;;;287    		if(pCanPkg->dat[0])
000084  7960              LDRB     r0,[r4,#5]
000086  b130              CBZ      r0,|L8.150|
;;;288    		{
;;;289    			halBspPreDischargeRelayOn();
000088  f7fffffe          BL       halBspPreDischargeRelayOn
;;;290    			appSerialCanDavinciDebugMsg("Pre Relay On");
00008c  e8bd4010          POP      {r4,lr}
000090  a026              ADR      r0,|L8.300|
000092  f7ffbffe          B.W      appSerialCanDavinciSendTextMessage
                  |L8.150|
;;;291    		}
;;;292    		else
;;;293    		{
;;;294    			halBspPreDischargeRelayOff();
000096  f7fffffe          BL       halBspPreDischargeRelayOff
;;;295    			appSerialCanDavinciDebugMsg("Pre Relay Off");
00009a  e8bd4010          POP      {r4,lr}
00009e  a027              ADR      r0,|L8.316|
0000a0  f7ffbffe          B.W      appSerialCanDavinciSendTextMessage
;;;296    		}
;;;297    		break;
;;;298    	case SMP_FAN_RELAY_SUB_INDEX:
;;;299    		if(pCanPkg->dat[0])
0000a4  7960              LDRB     r0,[r4,#5]
0000a6  b130              CBZ      r0,|L8.182|
;;;300    		{
;;;301    			halBspFanRelayOn();
0000a8  f7fffffe          BL       halBspFanRelayOn
;;;302    			appSerialCanDavinciDebugMsg("FAN Relay On");
0000ac  e8bd4010          POP      {r4,lr}
0000b0  a026              ADR      r0,|L8.332|
0000b2  f7ffbffe          B.W      appSerialCanDavinciSendTextMessage
                  |L8.182|
;;;303    		}
;;;304    		else
;;;305    		{
;;;306    			halBspFanRelayOff();
0000b6  f7fffffe          BL       halBspFanRelayOff
;;;307    			appSerialCanDavinciDebugMsg("FAN Relay Off");
0000ba  e8bd4010          POP      {r4,lr}
0000be  a027              ADR      r0,|L8.348|
0000c0  f7ffbffe          B.W      appSerialCanDavinciSendTextMessage
                  |L8.196|
;;;308    		}
;;;309    		break;
;;;310    	}
;;;311    }
0000c4  bd10              POP      {r4,pc}
;;;312    
                          ENDP

0000c6  0000              DCW      0x0000
                  |L8.200|
0000c8  50732052          DCB      "Ps Relay On",0
0000cc  656c6179
0000d0  204f6e00
                  |L8.212|
0000d4  50732052          DCB      "Ps Relay Off",0
0000d8  656c6179
0000dc  204f6666
0000e0  00      
0000e1  00                DCB      0
0000e2  00                DCB      0
0000e3  00                DCB      0
                  |L8.228|
0000e4  50204d61          DCB      "P Main Relay On",0
0000e8  696e2052
0000ec  656c6179
0000f0  204f6e00
                  |L8.244|
0000f4  50204d61          DCB      "P Main Relay Off",0
0000f8  696e2052
0000fc  656c6179
000100  204f6666
000104  00      
000105  00                DCB      0
000106  00                DCB      0
000107  00                DCB      0
                  |L8.264|
000108  4e204d61          DCB      "N Main Relay On",0
00010c  696e2052
000110  656c6179
000114  204f6e00
                  |L8.280|
000118  4e204d61          DCB      "N Main Relay Off",0
00011c  696e2052
000120  656c6179
000124  204f6666
000128  00      
000129  00                DCB      0
00012a  00                DCB      0
00012b  00                DCB      0
                  |L8.300|
00012c  50726520          DCB      "Pre Relay On",0
000130  52656c61
000134  79204f6e
000138  00      
000139  00                DCB      0
00013a  00                DCB      0
00013b  00                DCB      0
                  |L8.316|
00013c  50726520          DCB      "Pre Relay Off",0
000140  52656c61
000144  79204f66
000148  6600    
00014a  00                DCB      0
00014b  00                DCB      0
                  |L8.332|
00014c  46414e20          DCB      "FAN Relay On",0
000150  52656c61
000154  79204f6e
000158  00      
000159  00                DCB      0
00015a  00                DCB      0
00015b  00                DCB      0
                  |L8.348|
00015c  46414e20          DCB      "FAN Relay Off",0
000160  52656c61
000164  79204f66
000168  6600    
00016a  00                DCB      0
00016b  00                DCB      0

                          AREA ||i.DavinciCanDebugVBatSimu||, CODE, READONLY, ALIGN=1

                  DavinciCanDebugVBatSimu PROC
;;;219    
;;;220    static void DavinciCanDebugVBatSimu(smp_can_package_t *pCanPkg)
000000  8801              LDRH     r1,[r0,#0]
;;;221    {
;;;222    	uint8_t		i;
;;;223    	uint16_t	subindex, voltage;
;;;224    	char	str[100];
;;;225    	
;;;226    	subindex = SMP_CAN_GET_SUB_INDEX(pCanPkg->id);
000002  f3c10109          UBFX     r1,r1,#0,#10
;;;227    
;;;228    	if(subindex == 0)
000006  2900              CMP      r1,#0
000008  d00e              BEQ      |L9.40|
;;;229    	{
;;;230    		halAfeSetVBatVoltage(0, (uint32_t)GET_DWORD(&pCanPkg->dat[0]));
;;;231    	}
;;;232    	else if(subindex == 1)
00000a  2901              CMP      r1,#1
00000c  d119              BNE      |L9.66|
;;;233    	{
;;;234    		halAfeSetVBatVoltage(1, (uint32_t)GET_DWORD(&pCanPkg->dat[0]));
00000e  7941              LDRB     r1,[r0,#5]
000010  7a02              LDRB     r2,[r0,#8]
000012  eb016102          ADD      r1,r1,r2,LSL #24
000016  79c2              LDRB     r2,[r0,#7]
000018  7980              LDRB     r0,[r0,#6]
00001a  0412              LSLS     r2,r2,#16
00001c  eb022000          ADD      r0,r2,r0,LSL #8
000020  4401              ADD      r1,r1,r0
000022  2001              MOVS     r0,#1
000024  f7ffbffe          B.W      halAfeSetVBatVoltage
                  |L9.40|
000028  7941              LDRB     r1,[r0,#5]            ;230
00002a  7a02              LDRB     r2,[r0,#8]            ;230
00002c  eb016102          ADD      r1,r1,r2,LSL #24      ;230
000030  79c2              LDRB     r2,[r0,#7]            ;230
000032  7980              LDRB     r0,[r0,#6]            ;230
000034  0412              LSLS     r2,r2,#16             ;230
000036  eb022000          ADD      r0,r2,r0,LSL #8       ;230
00003a  4401              ADD      r1,r1,r0              ;230
00003c  2000              MOVS     r0,#0                 ;230
00003e  f7ffbffe          B.W      halAfeSetVBatVoltage
                  |L9.66|
;;;235    	}
;;;236    }
000042  4770              BX       lr
;;;237    static void DavinciCanDebugRelayControl(smp_can_package_t *pCanPkg)
                          ENDP


                          AREA ||i.DavinciCanDebugVbatAdc||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                  DavinciCanDebugVbatAdc PROC
;;;98     }
;;;99     static void DavinciCanDebugVbatAdc(smp_can_package_t *pCanPkg)
000000  b530              PUSH     {r4,r5,lr}
;;;100    {
000002  b099              SUB      sp,sp,#0x64
000004  4604              MOV      r4,r0
;;;101    	int32_t	adc;
;;;102    	char	str[100];
;;;103    	
;;;104    	adc = (int32_t)(GET_WORD(&pCanPkg->dat[0]));
000006  7960              LDRB     r0,[r4,#5]
000008  79a1              LDRB     r1,[r4,#6]
00000a  eb002501          ADD      r5,r0,r1,LSL #8
;;;105    
;;;106    	halAfeSetVBatAdcValue(SMP_CAN_GET_SUB_INDEX(pCanPkg->id), adc);
00000e  7820              LDRB     r0,[r4,#0]
000010  4629              MOV      r1,r5
000012  f7fffffe          BL       halAfeSetVBatAdcValue
;;;107    
;;;108    	sprintf(str,"adc:%d V = %d", adc, appVbatDebug(SMP_CAN_GET_SUB_INDEX(pCanPkg->id), adc));
000016  7820              LDRB     r0,[r4,#0]
000018  4629              MOV      r1,r5
00001a  f7fffffe          BL       appVbatDebug
00001e  4603              MOV      r3,r0
000020  462a              MOV      r2,r5
000022  a104              ADR      r1,|L10.52|
000024  4668              MOV      r0,sp
000026  f7fffffe          BL       __2sprintf
;;;109    	appSerialCanDavinciDebugMsg(str);
00002a  4668              MOV      r0,sp
00002c  f7fffffe          BL       appSerialCanDavinciSendTextMessage
;;;110    }
000030  b019              ADD      sp,sp,#0x64
000032  bd30              POP      {r4,r5,pc}
;;;111    
                          ENDP

                  |L10.52|
000034  6164633a          DCB      "adc:%d V = %d",0
000038  25642056
00003c  203d2025
000040  6400    
000042  00                DCB      0
000043  00                DCB      0

                          AREA ||i.DavinciCanFunDebugRx||, CODE, READONLY, ALIGN=2

                  DavinciCanFunDebugRx PROC
;;;380    
;;;381    void DavinciCanFunDebugRx(smp_can_package_t *pCanPkg)
000000  b570              PUSH     {r4-r6,lr}
;;;382    {
000002  4606              MOV      r6,r0
;;;383    	uint8_t	i,n;
;;;384    	uint8_t cmdIndex;
;;;385    	
;;;386    	char	str[100];
;;;387    	char	str1[100];
;;;388     	cmdIndex = 0;
000004  2400              MOVS     r4,#0
;;;389    	//appSerialCanDavinciDebugMsg("Decode Debug Fun");
;;;390    
;;;391    	for(cmdIndex = 0; mDavinciDebugCanDecodeTab[cmdIndex].fun != 0; cmdIndex++)
;;;392    	{
;;;393    		if((mDavinciDebugCanDecodeTab[cmdIndex].canid & mDavinciDebugCanDecodeTab[cmdIndex].mask) == 
000006  4d10              LDR      r5,|L11.72|
000008  e016              B        |L11.56|
                  |L11.10|
00000a  f8550021          LDR      r0,[r5,r1,LSL #2]
00000e  6851              LDR      r1,[r2,#4]
000010  6832              LDR      r2,[r6,#0]
000012  4008              ANDS     r0,r0,r1
000014  4011              ANDS     r1,r1,r2
000016  4288              CMP      r0,r1
000018  d10c              BNE      |L11.52|
;;;394    		   (mDavinciDebugCanDecodeTab[cmdIndex].mask & pCanPkg->id)  &&
;;;395    		   appSerialCanDavinciIsCorrectScuId(pCanPkg))
00001a  4630              MOV      r0,r6
00001c  f7fffffe          BL       appSerialCanDavinciIsCorrectScuId
000020  b140              CBZ      r0,|L11.52|
;;;396    		{
;;;397    		//	sprintf(str,"Debug ID= %d",SMP_CAN_GET_SCU_ID(pCanPkg->id));
;;;398    		//	appSerialCanDavinciDebugMsg(str);
;;;399    			mDavinciDebugCanDecodeTab[cmdIndex].fun(pCanPkg);
000022  eb040044          ADD      r0,r4,r4,LSL #1
000026  eb050080          ADD      r0,r5,r0,LSL #2
00002a  6881              LDR      r1,[r0,#8]
00002c  4630              MOV      r0,r6
00002e  e8bd4070          POP      {r4-r6,lr}
000032  4708              BX       r1
                  |L11.52|
000034  1c64              ADDS     r4,r4,#1              ;391
000036  b2e4              UXTB     r4,r4                 ;391
                  |L11.56|
000038  eb040144          ADD      r1,r4,r4,LSL #1       ;391
00003c  eb050281          ADD      r2,r5,r1,LSL #2       ;391
000040  6890              LDR      r0,[r2,#8]            ;391
000042  2800              CMP      r0,#0                 ;391
000044  d1e1              BNE      |L11.10|
;;;400    			break; 		
;;;401     		}
;;;402    	}
;;;403    }
000046  bd70              POP      {r4-r6,pc}
;;;404    
                          ENDP

                  |L11.72|
                          DCD      ||.constdata||

                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

                  mDavinciDebugCanDecodeTab
                          DCD      0x14000000
                          DCD      0x0003fc00
                          DCD      DavinciCanDebugModeChange
                          DCD      0x14000400
                          DCD      0x0003fc00
                          DCD      DavinciCanDebugCurrentAdc
                          DCD      0x14000800
                          DCD      0x0003fc00
                          DCD      DavinciCanDebugVbatAdc
                          DCD      0x14001400
                          DCD      0x0003fc00
                          DCD      DavinciCanDebugCellVSimu
                          DCD      0x14001800
                          DCD      0x0003fc00
                          DCD      DavinciCanDebugNtcVSimu
                          DCD      0x14001c00
                          DCD      0x0003fc00
                          DCD      DavinciCanDebugNtcTSimu
                          DCD      0x14002000
                          DCD      0x0003fc00
                          DCD      DavinciCanDebugGpio
                          DCD      0x14002400
                          DCD      0x0003fc00
                          DCD      DavinciCanDebugCurrentSimu
                          DCD      0x14002800
                          DCD      0x0003fc00
                          DCD      DavinciCanDebugVBatSimu
                          DCD      0x14002c00
                          DCD      0x0003fc00
                          DCD      DavinciCanDebugRelayControl
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "..\\..\\..\\AppCommunication\\AppSerialCanDavinciDebug.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___26_AppSerialCanDavinciDebug_c_ed48df84____REV16|
#line 492 "../../../Drivers/CMSIS/Include/cmsis_armcc.h"
|__asm___26_AppSerialCanDavinciDebug_c_ed48df84____REV16| PROC
#line 493

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___26_AppSerialCanDavinciDebug_c_ed48df84____REVSH|
#line 507
|__asm___26_AppSerialCanDavinciDebug_c_ed48df84____REVSH| PROC
#line 508

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___26_AppSerialCanDavinciDebug_c_ed48df84____RRX|
#line 694
|__asm___26_AppSerialCanDavinciDebug_c_ed48df84____RRX| PROC
#line 695

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
