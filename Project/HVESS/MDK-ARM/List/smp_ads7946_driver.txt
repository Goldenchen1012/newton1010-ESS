; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\obj\smp_ads7946_driver.o --asm_dir=.\List\ --list_dir=.\List\ --depend=.\obj\smp_ads7946_driver.d --cpu=Cortex-M4.fp.sp --apcs=interwork -O1 --diag_suppress=9931 -I../Inc -I../../../Drivers/CMSIS/Include -I../../../Drivers/CMSIS/Device/ST/STM32L4xx/Include -I../../../Drivers/STM32L4xx_HAL_Driver/Inc -I../../../Drivers/BSP/STM32L4xx_Nucleo_144 -I..\..\..\User -I..\..\..\HAL -I..\..\..\Lib -I..\..\..\Config_Common -I..\..\..\AppProtect -I..\..\..\APP -I..\..\..\Lib\SMP -I..\..\..\Drivers\SMP -I..\..\..\BSP -I..\..\..\Drivers\BSP\STM32L496V_Davinci -I..\..\..\API -I..\..\..\AppCommunication -I..\..\..\Drivers\W5500 -I..\..\..\RTT -I.\RTE\_HVESS_Normal -IC:\Users\88691\AppData\Local\Arm\Packs\ARM\CMSIS\5.8.0\CMSIS\Core\Include -IC:\Users\88691\AppData\Local\Arm\Packs\Keil\STM32L4xx_DFP\2.6.0\Drivers\CMSIS\Device\ST\STM32L4xx\Include -D__MICROLIB -D__UVISION_VERSION=535 -D_RTE_ -DSTM32L496xx -D_RTE_ -DSTM32L496xx -DUSE_HAL_DRIVER -DUSE_STM32L4XX_NUCLEO_144 -DBSPSMPS -DUSE_STM32L4XX_NUCLEO_144_SMPS -DUSE_ADP5301ACBZ -W ..\..\..\Drivers\SMP\smp_ADS7946_Driver.c]
                          THUMB

                          AREA ||i.ADS7946_SPI_0_event_handler||, CODE, READONLY, ALIGN=2

                  ADS7946_SPI_0_event_handler PROC
;;;163    
;;;164    void ADS7946_SPI_0_event_handler(smp_spi_evt_type p_evt)
000000  b510              PUSH     {r4,lr}
;;;165    {
;;;166    	static uint8_t	rxdata[4];
;;;167    	#if 0
;;;168    	uint8_t test[3];
;;;169    	#endif
;;;170    	
;;;171    	switch(p_evt){
000002  2800              CMP      r0,#0
000004  d113              BNE      |L1.46|
;;;172    		case SMP_SPI_EVENT_DONE:	
;;;173    			rxdata[0] = ADS7946_rx_data[0];
000006  480a              LDR      r0,|L1.48|
000008  490a              LDR      r1,|L1.52|
00000a  7802              LDRB     r2,[r0,#0]  ; ADS7946_rx_data
00000c  700a              STRB     r2,[r1,#0]
;;;174    			rxdata[1] = ADS7946_rx_data[1];
00000e  7842              LDRB     r2,[r0,#1]  ; ADS7946_rx_data
000010  704a              STRB     r2,[r1,#1]
;;;175    			rxdata[2] = ADS7946_rx_data[2];
000012  7882              LDRB     r2,[r0,#2]  ; ADS7946_rx_data
000014  708a              STRB     r2,[r1,#2]
;;;176    			rxdata[3] = ADS7946_rx_data[3];
000016  78c0              LDRB     r0,[r0,#3]  ; ADS7946_rx_data
000018  70c8              STRB     r0,[r1,#3]
;;;177    		  #if 0
;;;178    			memset(ADS7946_rx_data, 0, sizeof(ADS7946_rx_data));
;;;179    			#endif
;;;180    		  if(ads7946_event_cb){
00001a  f1a10408          SUB      r4,r1,#8
00001e  6862              LDR      r2,[r4,#4]  ; ads7946_event_cb
000020  2a00              CMP      r2,#0
000022  d004              BEQ      |L1.46|
;;;181    				ads7946_event_cb(rxdata, 4);
000024  2104              MOVS     r1,#4
000026  4803              LDR      r0,|L1.52|
000028  4790              BLX      r2
;;;182    				ads7946_event_cb = 0;
00002a  2000              MOVS     r0,#0
00002c  6060              STR      r0,[r4,#4]  ; ads7946_event_cb
                  |L1.46|
;;;183    			}				
;;;184    		break;
;;;185    		case SMP_SPI_EVENT_TRANSFER_BUSY:
;;;186    			
;;;187    			break;
;;;188    		default:
;;;189    		break;
;;;190    	}
;;;191    }
00002e  bd10              POP      {r4,pc}
;;;192    
                          ENDP

                  |L1.48|
                          DCD      ||.bss||+0x18
                  |L1.52|
                          DCD      ||.data||+0x8

                          AREA ||i.smp_ADS7946_channel_select||, CODE, READONLY, ALIGN=2

                  smp_ADS7946_channel_select PROC
;;;134    
;;;135    int8_t smp_ADS7946_channel_select(smp_ADS7946_channel_num channel_sel)
000000  2800              CMP      r0,#0
;;;136    {
000002  d004              BEQ      |L2.14|
;;;137    	if(channel_sel == channel_0){
;;;138          return smp_gpio_set_state(&ADS7956_CH_SEL_handler, GPIO_ACTIVE_LOW);
;;;139    	}else if(channel_sel == channel_1){
000004  2801              CMP      r0,#1
000006  d006              BEQ      |L2.22|
;;;140    	    return smp_gpio_set_state(&ADS7956_CH_SEL_handler, GPIO_ACTIVE_HIGH);
;;;141    	}else{
;;;142    	    return SMP_ERROR_INVALID_PARAM;
000008  f06f0002          MVN      r0,#2
;;;143    	}
;;;144    }
00000c  4770              BX       lr
                  |L2.14|
00000e  2100              MOVS     r1,#0                 ;138
000010  4803              LDR      r0,|L2.32|
000012  f7ffbffe          B.W      smp_gpio_set_state
                  |L2.22|
000016  2101              MOVS     r1,#1                 ;140
000018  4801              LDR      r0,|L2.32|
00001a  f7ffbffe          B.W      smp_gpio_set_state
;;;145    
                          ENDP

00001e  0000              DCW      0x0000
                  |L2.32|
                          DCD      ||.data||+0x14

                          AREA ||i.smp_ADS7946_deinit||, CODE, READONLY, ALIGN=2

                  smp_ADS7946_deinit PROC
;;;105    
;;;106    int8_t smp_ADS7946_deinit(void)
000000  b510              PUSH     {r4,lr}
;;;107    {
;;;108      #if 0
;;;109    	smp_ADS7946_power_down();
;;;110    	#endif
;;;111    	smp_gpio_deinit(&ADS7956_PDEN_handler);
000002  480c              LDR      r0,|L3.52|
000004  f7fffffe          BL       smp_gpio_deinit
;;;112    	smp_gpio_deinit(&ADS7956_CH_SEL_handler);
000008  480a              LDR      r0,|L3.52|
00000a  3008              ADDS     r0,r0,#8
00000c  f7fffffe          BL       smp_gpio_deinit
;;;113    	
;;;114    	smp_spi_master_cs_deinit(&ADS7946_CS0);
000010  4809              LDR      r0,|L3.56|
000012  f7fffffe          BL       smp_spi_master_cs_deinit
;;;115    	smp_spi_master_cs_deinit(&ADS7946_CS1);
000016  4808              LDR      r0,|L3.56|
000018  300c              ADDS     r0,r0,#0xc
00001a  f7fffffe          BL       smp_spi_master_cs_deinit
;;;116    	if(smp_spi_master_deinit(&ADS7946_SPI_0) != SMP_SUCCESS){
00001e  4805              LDR      r0,|L3.52|
000020  380b              SUBS     r0,r0,#0xb
000022  f7fffffe          BL       smp_spi_master_deinit
000026  b110              CBZ      r0,|L3.46|
;;;117    		return SMP_ERROR_NOT_FOUND;
000028  f04f30ff          MOV      r0,#0xffffffff
;;;118    	}
;;;119    	
;;;120    	return SMP_SUCCESS;	
;;;121    }
00002c  bd10              POP      {r4,pc}
                  |L3.46|
00002e  2000              MOVS     r0,#0                 ;120
000030  bd10              POP      {r4,pc}
;;;122    
                          ENDP

000032  0000              DCW      0x0000
                  |L3.52|
                          DCD      ||.data||+0xc
                  |L3.56|
                          DCD      ||.bss||

                          AREA ||i.smp_ADS7946_get_data||, CODE, READONLY, ALIGN=2

                  smp_ADS7946_get_data PROC
;;;145    
;;;146    int8_t smp_ADS7946_get_data(smp_ADS7946_channel_num channel_sel,smp_ADS7946_CS_num CS, ads7946_CB_Fun_t evt_callback)
000000  b51c              PUSH     {r2-r4,lr}
;;;147    {
000002  460c              MOV      r4,r1
;;;148    	if(ads7946_event_cb){
000004  4914              LDR      r1,|L4.88|
000006  684b              LDR      r3,[r1,#4]  ; ads7946_event_cb
000008  2b00              CMP      r3,#0
00000a  d002              BEQ      |L4.18|
;;;149    		return SMP_ERROR_BUSY;
00000c  f06f000c          MVN      r0,#0xc
;;;150    	}else{
;;;151    		ads7946_event_cb = evt_callback;
;;;152    	}
;;;153    	
;;;154    	smp_ADS7946_channel_select(channel_sel);
;;;155    	if(CS==CS_0){
;;;156    		return smp_spi_master_send_recv(&ADS7946_SPI_0,  0 , 0 , ADS7946_rx_data, 4 , &ADS7946_CS0);
;;;157    	}else if(CS==CS_1){
;;;158    		return smp_spi_master_send_recv(&ADS7946_SPI_0,  0 , 0 , ADS7946_rx_data, 4 , &ADS7946_CS1);
;;;159    	}else{
;;;160    		return SMP_ERROR_INVALID_PARAM;
;;;161    	}	
;;;162    }
000010  bd1c              POP      {r2-r4,pc}
                  |L4.18|
000012  604a              STR      r2,[r1,#4]            ;151  ; ads7946_event_cb
000014  f7fffffe          BL       smp_ADS7946_channel_select
000018  2004              MOVS     r0,#4                 ;156
00001a  b11c              CBZ      r4,|L4.36|
00001c  2c01              CMP      r4,#1                 ;157
00001e  d00d              BEQ      |L4.60|
000020  1fc0              SUBS     r0,r0,#7              ;160
000022  bd1c              POP      {r2-r4,pc}
                  |L4.36|
000024  490d              LDR      r1,|L4.92|
000026  2200              MOVS     r2,#0                 ;156
000028  e9cd0100          STRD     r0,r1,[sp,#0]         ;156
00002c  480a              LDR      r0,|L4.88|
00002e  f1010318          ADD      r3,r1,#0x18           ;156
000032  4611              MOV      r1,r2                 ;156
000034  1c40              ADDS     r0,r0,#1              ;156
000036  f7fffffe          BL       smp_spi_master_send_recv
00003a  bd1c              POP      {r2-r4,pc}
                  |L4.60|
00003c  4907              LDR      r1,|L4.92|
00003e  2200              MOVS     r2,#0                 ;158
000040  310c              ADDS     r1,r1,#0xc            ;158
000042  e9cd0100          STRD     r0,r1,[sp,#0]         ;158
000046  4804              LDR      r0,|L4.88|
000048  f101030c          ADD      r3,r1,#0xc            ;158
00004c  4611              MOV      r1,r2                 ;158
00004e  1c40              ADDS     r0,r0,#1              ;158
000050  f7fffffe          BL       smp_spi_master_send_recv
000054  bd1c              POP      {r2-r4,pc}
;;;163    
                          ENDP

000056  0000              DCW      0x0000
                  |L4.88|
                          DCD      ||.data||
                  |L4.92|
                          DCD      ||.bss||

                          AREA ||i.smp_ADS7946_init||, CODE, READONLY, ALIGN=2

                  smp_ADS7946_init PROC
;;;49     
;;;50     int8_t smp_ADS7946_init(void)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;51     {
;;;52       //initial ADS7946 PDEN
;;;53     	#if 0
;;;54     	ADS7956_PDEN_handler.port = SMP_GPIOB;
;;;55     	ADS7956_PDEN_handler.pin = PIN3;
;;;56     	ADS7956_PDEN_handler.mode = SMP_GPIO_MODE_OUTPUT_OD;	
;;;57     	if(smp_gpio_init(&ADS7956_PDEN_handler) != HAL_OK){
;;;58         return SMP_ERROR_NOT_FOUND;
;;;59     	}
;;;60     	#endif 
;;;61     	
;;;62     	if(Flag_ADS7946_HW_Init_Done){
000004  4d21              LDR      r5,|L5.140|
000006  7828              LDRB     r0,[r5,#0]  ; Flag_ADS7946_HW_Init_Done
000008  2800              CMP      r0,#0
00000a  d002              BEQ      |L5.18|
;;;63     		return SMP_SUCCESS;
00000c  2000              MOVS     r0,#0
                  |L5.14|
;;;64     	}
;;;65     	
;;;66     	//initial ADS7946 CH_SEL
;;;67     	ADS7956_CH_SEL_handler.port = BSP_ADS7946_CH_SEL_GPIO_PORT;
;;;68     	ADS7956_CH_SEL_handler.pin = BSP_ADS7946_CH_SEL_PIN;
;;;69     	ADS7956_CH_SEL_handler.mode = SMP_GPIO_MODE_OUTPUT_OD;	
;;;70     	if(smp_gpio_init(&ADS7956_CH_SEL_handler) != HAL_OK){
;;;71     		return SMP_ERROR_NOT_FOUND;
;;;72     	}
;;;73     	
;;;74     	// Initial ADS7946 SPI
;;;75     	// CS0 Initial
;;;76     	ADS7946_PB0.port = BSP_ADS7946_CS_MAIN_GPIO_PORT;
;;;77     	ADS7946_PB0.pin = BSP_ADS7946_CS_MAIN_PIN;	
;;;78     	ADS7946_CS0.spi_num = SPI_module1;
;;;79     	ADS7946_CS0.cs_handler = ADS7946_PB0;	
;;;80     	smp_spi_master_cs_init(&ADS7946_CS0);
;;;81     	
;;;82     	// CS1 Initial
;;;83     	ADS7946_PB1.port = BSP_ADS7946_CS_AUX_GPIO_PORT;
;;;84     	ADS7946_PB1.pin = BSP_ADS7946_CS_AUX_PIN;	
;;;85     	ADS7946_CS1.spi_num = SPI_module1;
;;;86     	ADS7946_CS1.cs_handler = ADS7946_PB1;	
;;;87     	smp_spi_master_cs_init(&ADS7946_CS1);
;;;88     	ADS7946_SPI_0.num = SPI_module1;
;;;89     	ADS7946_SPI_0.mode = SPI_mode0;
;;;90     	
;;;91     	#if 0
;;;92       smp_ADS7946_power_on();
;;;93       #endif
;;;94     	
;;;95     	if(smp_spi_master_init(&ADS7946_SPI_0, ADS7946_SPI_0_event_handler, false) != SMP_SUCCESS){
;;;96     		return SMP_ERROR_NOT_FOUND;
;;;97     	}
;;;98     	if(!Flag_ADS7946_HW_Init_Done){
;;;99     		Flag_ADS7946_HW_Init_Done = true;
;;;100    	}
;;;101    	
;;;102    
;;;103    	return SMP_SUCCESS;	
;;;104    }
00000e  e8bd81f0          POP      {r4-r8,pc}
                  |L5.18|
000012  481e              LDR      r0,|L5.140|
000014  2102              MOVS     r1,#2                 ;67
000016  3014              ADDS     r0,r0,#0x14           ;67
000018  7001              STRB     r1,[r0,#0]            ;67
00001a  2205              MOVS     r2,#5                 ;68
00001c  7042              STRB     r2,[r0,#1]            ;68
00001e  7081              STRB     r1,[r0,#2]            ;69
000020  f7fffffe          BL       smp_gpio_init
000024  f04f38ff          MOV      r8,#0xffffffff        ;71
000028  b108              CBZ      r0,|L5.46|
00002a  4640              MOV      r0,r8                 ;71
00002c  e7ef              B        |L5.14|
                  |L5.46|
00002e  4817              LDR      r0,|L5.140|
000030  2701              MOVS     r7,#1                 ;76
000032  301c              ADDS     r0,r0,#0x1c           ;76
000034  7007              STRB     r7,[r0,#0]            ;76
000036  2400              MOVS     r4,#0                 ;77
000038  7044              STRB     r4,[r0,#1]            ;77
00003a  4e15              LDR      r6,|L5.144|
00003c  7034              STRB     r4,[r6,#0]            ;78
00003e  e9d50107          LDRD     r0,r1,[r5,#0x1c]      ;79
000042  e9c60101          STRD     r0,r1,[r6,#4]         ;79
000046  4630              MOV      r0,r6                 ;80
000048  f7fffffe          BL       smp_spi_master_cs_init
00004c  480f              LDR      r0,|L5.140|
00004e  3024              ADDS     r0,r0,#0x24           ;83
000050  7007              STRB     r7,[r0,#0]            ;83
000052  7047              STRB     r7,[r0,#1]            ;84
000054  f106000c          ADD      r0,r6,#0xc            ;85
000058  7004              STRB     r4,[r0,#0]            ;85
00005a  e9d50109          LDRD     r0,r1,[r5,#0x24]      ;86
00005e  e9c60104          STRD     r0,r1,[r6,#0x10]      ;86
000062  f106000c          ADD      r0,r6,#0xc            ;87
000066  f7fffffe          BL       smp_spi_master_cs_init
00006a  4808              LDR      r0,|L5.140|
00006c  1c40              ADDS     r0,r0,#1              ;88
00006e  7004              STRB     r4,[r0,#0]            ;88
000070  7044              STRB     r4,[r0,#1]            ;89
000072  2200              MOVS     r2,#0                 ;95
000074  4907              LDR      r1,|L5.148|
000076  f7fffffe          BL       smp_spi_master_init
00007a  b108              CBZ      r0,|L5.128|
00007c  4640              MOV      r0,r8                 ;96
00007e  e7c6              B        |L5.14|
                  |L5.128|
000080  7828              LDRB     r0,[r5,#0]            ;98  ; Flag_ADS7946_HW_Init_Done
000082  b900              CBNZ     r0,|L5.134|
000084  702f              STRB     r7,[r5,#0]            ;99
                  |L5.134|
000086  2000              MOVS     r0,#0                 ;103
000088  e7c1              B        |L5.14|
;;;105    
                          ENDP

00008a  0000              DCW      0x0000
                  |L5.140|
                          DCD      ||.data||
                  |L5.144|
                          DCD      ||.bss||
                  |L5.148|
                          DCD      ADS7946_SPI_0_event_handler

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  ADS7946_CS0
                          %        12
                  ADS7946_CS1
                          %        12
                  ADS7946_rx_data
                          %        256

                          AREA ||area_number.8||, DATA, NOINIT, ALIGN=0

                          EXPORTAS ||area_number.8||, ||.bss||
                  ADS7946_tx_data
                          %        256

                          AREA ||.data||, DATA, ALIGN=2

                  Flag_ADS7946_HW_Init_Done
000000  00                DCB      0x00
                  ADS7946_SPI_0
000001  000000            DCB      0x00,0x00,0x00
                  ads7946_event_cb
                          DCD      0x00000000
                  rxdata
                          DCD      0x00000000
                  ADS7956_PDEN_handler
                          %        8
                  ADS7956_CH_SEL_handler
                          %        8
                  ADS7946_PB0
                          %        8
                  ADS7946_PB1
                          %        8

;*** Start embedded assembler ***

#line 1 "..\\..\\..\\Drivers\\SMP\\smp_ADS7946_Driver.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___20_smp_ADS7946_Driver_c_81b838a4____REV16|
#line 492 "../../../Drivers/CMSIS/Include/cmsis_armcc.h"
|__asm___20_smp_ADS7946_Driver_c_81b838a4____REV16| PROC
#line 493

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___20_smp_ADS7946_Driver_c_81b838a4____REVSH|
#line 507
|__asm___20_smp_ADS7946_Driver_c_81b838a4____REVSH| PROC
#line 508

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___20_smp_ADS7946_Driver_c_81b838a4____RRX|
#line 694
|__asm___20_smp_ADS7946_Driver_c_81b838a4____RRX| PROC
#line 695

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
