; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\obj\smp_adc.o --asm_dir=.\List\ --list_dir=.\List\ --depend=.\obj\smp_adc.d --cpu=Cortex-M4.fp.sp --apcs=interwork -O1 --diag_suppress=9931 -I../Inc -I../../../Drivers/CMSIS/Include -I../../../Drivers/CMSIS/Device/ST/STM32L4xx/Include -I../../../Drivers/STM32L4xx_HAL_Driver/Inc -I../../../Drivers/BSP/STM32L4xx_Nucleo_144 -I..\..\..\User -I..\..\..\HAL -I..\..\..\Lib -I..\..\..\Config_Common -I..\..\..\AppProtect -I..\..\..\APP -I..\..\..\Lib\SMP -I..\..\..\Drivers\SMP -I..\..\..\BSP -I..\..\..\Drivers\BSP\STM32L496V_Davinci -I..\..\..\API -I..\..\..\AppCommunication -I..\..\..\Drivers\W5500 -I..\..\..\RTT -I.\RTE\_HVESS_Normal -IC:\Users\88691\AppData\Local\Arm\Packs\ARM\CMSIS\5.8.0\CMSIS\Core\Include -IC:\Users\88691\AppData\Local\Arm\Packs\Keil\STM32L4xx_DFP\2.6.0\Drivers\CMSIS\Device\ST\STM32L4xx\Include -D__MICROLIB -D__UVISION_VERSION=535 -D_RTE_ -DSTM32L496xx -D_RTE_ -DSTM32L496xx -DUSE_HAL_DRIVER -DUSE_STM32L4XX_NUCLEO_144 -DBSPSMPS -DUSE_STM32L4XX_NUCLEO_144_SMPS -DUSE_ADP5301ACBZ -W ..\..\..\Drivers\SMP\smp_adc.c]
                          THUMB

                          AREA ||i.DMA1_Channel1_IRQHandler||, CODE, READONLY, ALIGN=2

                  DMA1_Channel1_IRQHandler PROC
;;;162    
;;;163    void DMA1_Channel1_IRQHandler(void){
000000  4801              LDR      r0,|L1.8|
;;;164        #if 0
;;;165    	  GPIOD->ODR ^= GPIO_PIN_13;
;;;166    	  #endif
;;;167    	
;;;168        HAL_DMA_IRQHandler(&smp_dma_adc1);
000002  f7ffbffe          B.W      HAL_DMA_IRQHandler
;;;169    }
;;;170    
                          ENDP

000006  0000              DCW      0x0000
                  |L1.8|
                          DCD      ||.bss||+0x40

                          AREA ||i.Enable_DMA_Control_Clock||, CODE, READONLY, ALIGN=2

                  Enable_DMA_Control_Clock PROC
;;;153    }
;;;154    void Enable_DMA_Control_Clock(void){
000000  b508              PUSH     {r3,lr}
;;;155        __HAL_RCC_DMA1_CLK_ENABLE();
000002  4805              LDR      r0,|L2.24|
000004  6c81              LDR      r1,[r0,#0x48]
000006  f0410101          ORR      r1,r1,#1
00000a  6481              STR      r1,[r0,#0x48]
00000c  6c80              LDR      r0,[r0,#0x48]
00000e  f0000001          AND      r0,r0,#1
000012  9000              STR      r0,[sp,#0]
;;;156    	
;;;157        #if 0
;;;158        HAL_NVIC_SetPriority(DMA1_Channel1_IRQn, 0, 0);
;;;159        HAL_NVIC_EnableIRQ(DMA1_Channel1_IRQn);
;;;160        #endif 
;;;161    }
000014  bd08              POP      {r3,pc}
;;;162    
                          ENDP

000016  0000              DCW      0x0000
                  |L2.24|
                          DCD      0x40021000

                          AREA ||i.GetADCChParaSTM32L496||, CODE, READONLY, ALIGN=2

                  GetADCChParaSTM32L496 PROC
;;;254    
;;;255    uint32_t GetADCChParaSTM32L496(adc_module_number num, GPIO_TypeDef *Port, uint16_t Pin){
000000  e92d47f0          PUSH     {r4-r10,lr}
;;;256    	
;;;257    	if((Port == GPIOC)&&(Pin == GPIO_PIN_0)){				    //PC0					//ADC1~ADC3 all available
000004  f8dfa154          LDR      r10,|L3.348|
000008  4551              CMP      r1,r10
00000a  d101              BNE      |L3.16|
00000c  2a01              CMP      r2,#1
00000e  d01c              BEQ      |L3.74|
                  |L3.16|
;;;258    		return ADC_CHANNEL_1;
;;;259    	}else if((Port == GPIOC)&&(Pin == GPIO_PIN_1)){		  //PC1
000010  4551              CMP      r1,r10
000012  d101              BNE      |L3.24|
000014  2a02              CMP      r2,#2
000016  d01b              BEQ      |L3.80|
                  |L3.24|
;;;260    		return ADC_CHANNEL_2;
;;;261    	}else if((Port == GPIOC)&&(Pin == GPIO_PIN_2)){		  //PC2
000018  4551              CMP      r1,r10
00001a  d101              BNE      |L3.32|
00001c  2a04              CMP      r2,#4
00001e  d019              BEQ      |L3.84|
                  |L3.32|
;;;262    		return ADC_CHANNEL_3;
;;;263    	}else if((Port == GPIOC)&&(Pin == GPIO_PIN_3)){		  //PC3
000020  4551              CMP      r1,r10
000022  d101              BNE      |L3.40|
000024  2a08              CMP      r2,#8
000026  d017              BEQ      |L3.88|
                  |L3.40|
;;;264    		return ADC_CHANNEL_4;
;;;265    	}
;;;266    	if((num == adc1)||(num == adc2)){
;;;267    		if((Port == GPIOA)&&(Pin == GPIO_PIN_0)){				  //PA0 			//ADC1, ADC2 are both available
;;;268    			return ADC_CHANNEL_5;
;;;269    		}else if((Port == GPIOA)&&(Pin == GPIO_PIN_1)){		//PA1 
;;;270    			return ADC_CHANNEL_6;
000028  f8df9134          LDR      r9,|L3.352|
;;;271    		}else if((Port == GPIOA)&&(Pin == GPIO_PIN_2)){		//PA2 
;;;272    			return ADC_CHANNEL_7;
00002c  f8df8134          LDR      r8,|L3.356|
;;;273    		}else if((Port == GPIOA)&&(Pin == GPIO_PIN_3)){		//PA3 
;;;274    			return ADC_CHANNEL_8;
000030  4b4d              LDR      r3,|L3.360|
;;;275    		}else if((Port == GPIOA)&&(Pin == GPIO_PIN_4)){		//PA4 
;;;276    			return ADC_CHANNEL_9;
000032  4c4e              LDR      r4,|L3.364|
;;;277    		}else if((Port == GPIOA)&&(Pin == GPIO_PIN_5)){		//PA5 
;;;278    			return ADC_CHANNEL_10;
000034  4d4e              LDR      r5,|L3.368|
;;;279    		}else if((Port == GPIOA)&&(Pin == GPIO_PIN_6)){		//PA6 
;;;280    			return ADC_CHANNEL_11;
000036  4e4f              LDR      r6,|L3.372|
;;;281    		}else if((Port == GPIOA)&&(Pin == GPIO_PIN_7)){		//PA7 
;;;282    			return ADC_CHANNEL_12;
000038  4f4f              LDR      r7,|L3.376|
;;;283    		}else if((Port == GPIOC)&&(Pin == GPIO_PIN_4)){		//PC4 
;;;284    			return ADC_CHANNEL_13;
00003a  f8dfc140          LDR      r12,|L3.380|
00003e  b168              CBZ      r0,|L3.92|
000040  2801              CMP      r0,#1                 ;266
000042  d00b              BEQ      |L3.92|
;;;285    		}else if((Port == GPIOC)&&(Pin == GPIO_PIN_5)){		//PC5 
;;;286    			return ADC_CHANNEL_14;
;;;287    		}else if((Port == GPIOB)&&(Pin == GPIO_PIN_0)){		//PB0 
;;;288    			return ADC_CHANNEL_15;
;;;289    		}else if((Port == GPIOB)&&(Pin == GPIO_PIN_1)){		//PB1 
;;;290    			return ADC_CHANNEL_16;
;;;291    		}
;;;292    	}else if(num == adc3){
000044  2802              CMP      r0,#2
000046  d055              BEQ      |L3.244|
000048  e075              B        |L3.310|
                  |L3.74|
00004a  484d              LDR      r0,|L3.384|
                  |L3.76|
;;;293    		if((Port == GPIOF)&&(Pin == PIN3)){				//PF3 			// Only ADC3 available
;;;294    			return ADC_CHANNEL_6;
;;;295    		}else if((Port == GPIOF)&&(Pin == PIN4)){		//PF4 
;;;296    			return ADC_CHANNEL_7;
;;;297    		}else if((Port == GPIOF)&&(Pin == PIN5)){		//PF5 
;;;298    			return ADC_CHANNEL_8;
;;;299    		}else if((Port == GPIOF)&&(Pin == PIN6)){		//PF6
;;;300    			return ADC_CHANNEL_9;
;;;301    		}else if((Port == GPIOF)&&(Pin == PIN7)){		//PF7
;;;302    			return ADC_CHANNEL_10;
;;;303    		}else if((Port == GPIOF)&&(Pin == PIN8)){		//PF8
;;;304    			return ADC_CHANNEL_11;
;;;305    		}else if((Port == GPIOF)&&(Pin == PIN9)){		//PF9
;;;306    			return ADC_CHANNEL_12;
;;;307    		}else if((Port == GPIOF)&&(Pin == PIN10)){		//PF10
;;;308    			return ADC_CHANNEL_13;
;;;309    		}	
;;;310    	}
;;;311    	return SMP_ERROR_NOT_SUPPORTED;
;;;312    }
00004c  e8bd87f0          POP      {r4-r10,pc}
                  |L3.80|
000050  484c              LDR      r0,|L3.388|
000052  e7fb              B        |L3.76|
                  |L3.84|
000054  484c              LDR      r0,|L3.392|
000056  e7f9              B        |L3.76|
                  |L3.88|
000058  484c              LDR      r0,|L3.396|
00005a  e7f7              B        |L3.76|
                  |L3.92|
00005c  f04f4090          MOV      r0,#0x48000000        ;267
000060  4281              CMP      r1,r0                 ;267
000062  d101              BNE      |L3.104|
000064  2a01              CMP      r2,#1                 ;267
000066  d02d              BEQ      |L3.196|
                  |L3.104|
000068  4281              CMP      r1,r0                 ;269
00006a  d101              BNE      |L3.112|
00006c  2a02              CMP      r2,#2                 ;269
00006e  d02b              BEQ      |L3.200|
                  |L3.112|
000070  4281              CMP      r1,r0                 ;271
000072  d101              BNE      |L3.120|
000074  2a04              CMP      r2,#4                 ;271
000076  d029              BEQ      |L3.204|
                  |L3.120|
000078  4281              CMP      r1,r0                 ;273
00007a  d101              BNE      |L3.128|
00007c  2a08              CMP      r2,#8                 ;273
00007e  d027              BEQ      |L3.208|
                  |L3.128|
000080  4281              CMP      r1,r0                 ;275
000082  d101              BNE      |L3.136|
000084  2a10              CMP      r2,#0x10              ;275
000086  d025              BEQ      |L3.212|
                  |L3.136|
000088  4281              CMP      r1,r0                 ;277
00008a  d101              BNE      |L3.144|
00008c  2a20              CMP      r2,#0x20              ;277
00008e  d023              BEQ      |L3.216|
                  |L3.144|
000090  4281              CMP      r1,r0                 ;279
000092  d101              BNE      |L3.152|
000094  2a40              CMP      r2,#0x40              ;279
000096  d021              BEQ      |L3.220|
                  |L3.152|
000098  4281              CMP      r1,r0                 ;281
00009a  d101              BNE      |L3.160|
00009c  2a80              CMP      r2,#0x80              ;281
00009e  d01f              BEQ      |L3.224|
                  |L3.160|
0000a0  4551              CMP      r1,r10                ;283
0000a2  d101              BNE      |L3.168|
0000a4  2a10              CMP      r2,#0x10              ;283
0000a6  d01d              BEQ      |L3.228|
                  |L3.168|
0000a8  4551              CMP      r1,r10                ;285
0000aa  d101              BNE      |L3.176|
0000ac  2a20              CMP      r2,#0x20              ;285
0000ae  d01b              BEQ      |L3.232|
                  |L3.176|
0000b0  4837              LDR      r0,|L3.400|
0000b2  4281              CMP      r1,r0                 ;287
0000b4  d101              BNE      |L3.186|
0000b6  2a01              CMP      r2,#1                 ;287
0000b8  d018              BEQ      |L3.236|
                  |L3.186|
0000ba  4281              CMP      r1,r0                 ;289
0000bc  d13b              BNE      |L3.310|
0000be  2a02              CMP      r2,#2                 ;289
0000c0  d016              BEQ      |L3.240|
0000c2  e038              B        |L3.310|
                  |L3.196|
0000c4  4833              LDR      r0,|L3.404|
0000c6  e7c1              B        |L3.76|
                  |L3.200|
0000c8  4648              MOV      r0,r9                 ;270
0000ca  e7bf              B        |L3.76|
                  |L3.204|
0000cc  4640              MOV      r0,r8                 ;272
0000ce  e7bd              B        |L3.76|
                  |L3.208|
0000d0  4618              MOV      r0,r3                 ;274
0000d2  e7bb              B        |L3.76|
                  |L3.212|
0000d4  4620              MOV      r0,r4                 ;276
0000d6  e7b9              B        |L3.76|
                  |L3.216|
0000d8  4628              MOV      r0,r5                 ;278
0000da  e7b7              B        |L3.76|
                  |L3.220|
0000dc  4630              MOV      r0,r6                 ;280
0000de  e7b5              B        |L3.76|
                  |L3.224|
0000e0  4638              MOV      r0,r7                 ;282
0000e2  e7b3              B        |L3.76|
                  |L3.228|
0000e4  4660              MOV      r0,r12                ;284
0000e6  e7b1              B        |L3.76|
                  |L3.232|
0000e8  482b              LDR      r0,|L3.408|
0000ea  e7af              B        |L3.76|
                  |L3.236|
0000ec  482b              LDR      r0,|L3.412|
0000ee  e7ad              B        |L3.76|
                  |L3.240|
0000f0  482b              LDR      r0,|L3.416|
0000f2  e7ab              B        |L3.76|
                  |L3.244|
0000f4  482b              LDR      r0,|L3.420|
0000f6  4281              CMP      r1,r0                 ;293
0000f8  d101              BNE      |L3.254|
0000fa  2a03              CMP      r2,#3                 ;293
0000fc  d01e              BEQ      |L3.316|
                  |L3.254|
0000fe  4281              CMP      r1,r0                 ;295
000100  d101              BNE      |L3.262|
000102  2a04              CMP      r2,#4                 ;295
000104  d01c              BEQ      |L3.320|
                  |L3.262|
000106  4281              CMP      r1,r0                 ;297
000108  d101              BNE      |L3.270|
00010a  2a05              CMP      r2,#5                 ;297
00010c  d01a              BEQ      |L3.324|
                  |L3.270|
00010e  4281              CMP      r1,r0                 ;299
000110  d101              BNE      |L3.278|
000112  2a06              CMP      r2,#6                 ;299
000114  d018              BEQ      |L3.328|
                  |L3.278|
000116  4281              CMP      r1,r0                 ;301
000118  d101              BNE      |L3.286|
00011a  2a07              CMP      r2,#7                 ;301
00011c  d016              BEQ      |L3.332|
                  |L3.286|
00011e  4281              CMP      r1,r0                 ;303
000120  d101              BNE      |L3.294|
000122  2a08              CMP      r2,#8                 ;303
000124  d014              BEQ      |L3.336|
                  |L3.294|
000126  4281              CMP      r1,r0                 ;305
000128  d101              BNE      |L3.302|
00012a  2a09              CMP      r2,#9                 ;305
00012c  d012              BEQ      |L3.340|
                  |L3.302|
00012e  4281              CMP      r1,r0                 ;307
000130  d101              BNE      |L3.310|
000132  2a0a              CMP      r2,#0xa               ;307
000134  d010              BEQ      |L3.344|
                  |L3.310|
000136  f06f0001          MVN      r0,#1                 ;311
00013a  e787              B        |L3.76|
                  |L3.316|
00013c  4648              MOV      r0,r9                 ;294
00013e  e785              B        |L3.76|
                  |L3.320|
000140  4640              MOV      r0,r8                 ;296
000142  e783              B        |L3.76|
                  |L3.324|
000144  4618              MOV      r0,r3                 ;298
000146  e781              B        |L3.76|
                  |L3.328|
000148  4620              MOV      r0,r4                 ;300
00014a  e77f              B        |L3.76|
                  |L3.332|
00014c  4628              MOV      r0,r5                 ;302
00014e  e77d              B        |L3.76|
                  |L3.336|
000150  4630              MOV      r0,r6                 ;304
000152  e77b              B        |L3.76|
                  |L3.340|
000154  4638              MOV      r0,r7                 ;306
000156  e779              B        |L3.76|
                  |L3.344|
000158  4660              MOV      r0,r12                ;308
00015a  e777              B        |L3.76|
;;;313    
                          ENDP

                  |L3.348|
                          DCD      0x48000800
                  |L3.352|
                          DCD      0x19200040
                  |L3.356|
                          DCD      0x1d500080
                  |L3.360|
                          DCD      0x21800100
                  |L3.364|
                          DCD      0x25b00200
                  |L3.368|
                          DCD      0x2a000400
                  |L3.372|
                          DCD      0x2e300800
                  |L3.376|
                          DCD      0x32601000
                  |L3.380|
                          DCD      0x36902000
                  |L3.384|
                          DCD      0x04300002
                  |L3.388|
                          DCD      0x08600004
                  |L3.392|
                          DCD      0x0c900008
                  |L3.396|
                          DCD      0x10c00010
                  |L3.400|
                          DCD      0x48000400
                  |L3.404|
                          DCD      0x14f00020
                  |L3.408|
                          DCD      0x3ac04000
                  |L3.412|
                          DCD      0x3ef08000
                  |L3.416|
                          DCD      0x43210000
                  |L3.420|
                          DCD      0x48001400

                          AREA ||i.HAL_ADC_ConvCpltCallback||, CODE, READONLY, ALIGN=1

                  HAL_ADC_ConvCpltCallback PROC
;;;146    }
;;;147    void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef *hadc){
000000  bf00              NOP      
;;;148        #if 0
;;;149    	  GPIOD->ODR ^= GPIO_PIN_14;
;;;150    	  #endif
;;;151    	
;;;152    	  __NOP();
;;;153    }
000002  4770              BX       lr
;;;154    void Enable_DMA_Control_Clock(void){
                          ENDP


                          AREA ||i.HAL_ADC_ConvHalfCpltCallback||, CODE, READONLY, ALIGN=1

                  HAL_ADC_ConvHalfCpltCallback PROC
;;;140    
;;;141    void HAL_ADC_ConvHalfCpltCallback(ADC_HandleTypeDef *hadc){
000000  bf00              NOP      
;;;142        #if 0
;;;143    	  GPIOD->ODR ^= GPIO_PIN_15;
;;;144    	  #endif
;;;145        __NOP();
;;;146    }
000002  4770              BX       lr
;;;147    void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef *hadc){
                          ENDP


                          AREA ||i.HAL_ADC_MspInit||, CODE, READONLY, ALIGN=2

                  HAL_ADC_MspInit PROC
;;;75     /* Private functions ---------------------------------------------------------*/
;;;76     void HAL_ADC_MspInit(ADC_HandleTypeDef *hadc){
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  f5ad7d04          SUB      sp,sp,#0x210
000008  4605              MOV      r5,r0
;;;77     	GPIO_InitTypeDef GPIO_InitStruct[3] = {0};
00000a  213c              MOVS     r1,#0x3c
00000c  a875              ADD      r0,sp,#0x1d4
00000e  f7fffffe          BL       __aeabi_memclr4
;;;78     	GPIO_InitTypeDef GPIO_InitStruct_temp[16]={0};
000012  f44f71a0          MOV      r1,#0x140
000016  a825              ADD      r0,sp,#0x94
000018  f7fffffe          BL       __aeabi_memclr4
;;;79     	RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
00001c  218c              MOVS     r1,#0x8c
00001e  a802              ADD      r0,sp,#8
000020  f7fffffe          BL       __aeabi_memclr4
;;;80     	
;;;81     	if(hadc->Instance==ADC1)
000024  4937              LDR      r1,|L6.260|
000026  6828              LDR      r0,[r5,#0]
000028  4288              CMP      r0,r1
00002a  d167              BNE      |L6.252|
;;;82     	{
;;;83           /* USER CODE BEGIN ADC1_MspInit 0 */
;;;84     
;;;85     	    /* USER CODE END ADC1_MspInit 0 */
;;;86     	    /** Initializes the peripherals clock
;;;87     	    */
;;;88     	    PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_ADC;
00002c  f44f4080          MOV      r0,#0x4000
000030  9002              STR      r0,[sp,#8]
;;;89     	    PeriphClkInit.AdcClockSelection = RCC_ADCCLKSOURCE_PLLSAI1;
000032  0380              LSLS     r0,r0,#14
000034  9021              STR      r0,[sp,#0x84]
;;;90     	    PeriphClkInit.PLLSAI1.PLLSAI1Source = ADC_PLL_SOURCE;
000036  2003              MOVS     r0,#3
000038  9003              STR      r0,[sp,#0xc]
;;;91     	    PeriphClkInit.PLLSAI1.PLLSAI1M = 1;
00003a  2001              MOVS     r0,#1
00003c  9004              STR      r0,[sp,#0x10]
;;;92     	    PeriphClkInit.PLLSAI1.PLLSAI1N = 10;
00003e  200a              MOVS     r0,#0xa
000040  9005              STR      r0,[sp,#0x14]
;;;93     	    PeriphClkInit.PLLSAI1.PLLSAI1P = RCC_PLLP_DIV2;
000042  2002              MOVS     r0,#2
000044  9006              STR      r0,[sp,#0x18]
;;;94     	    PeriphClkInit.PLLSAI1.PLLSAI1Q = RCC_PLLQ_DIV2;
000046  9007              STR      r0,[sp,#0x1c]
;;;95     	    PeriphClkInit.PLLSAI1.PLLSAI1R = RCC_PLLR_DIV8;
000048  2008              MOVS     r0,#8
00004a  9008              STR      r0,[sp,#0x20]
;;;96     	    PeriphClkInit.PLLSAI1.PLLSAI1ClockOut = RCC_PLLSAI1_ADC1CLK;
00004c  0540              LSLS     r0,r0,#21
00004e  9009              STR      r0,[sp,#0x24]
;;;97     	    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
000050  a802              ADD      r0,sp,#8
000052  f7fffffe          BL       HAL_RCCEx_PeriphCLKConfig
000056  b108              CBZ      r0,|L6.92|
;;;98     	    {
;;;99     	        Error_Handler();
000058  f7fffffe          BL       Error_Handler
                  |L6.92|
;;;100    	    }
;;;101    
;;;102    	    /* Peripheral clock enable */
;;;103    	    __HAL_RCC_ADC_CLK_ENABLE();
00005c  482a              LDR      r0,|L6.264|
00005e  6cc1              LDR      r1,[r0,#0x4c]
000060  f4415100          ORR      r1,r1,#0x2000
000064  64c1              STR      r1,[r0,#0x4c]
000066  6cc1              LDR      r1,[r0,#0x4c]
000068  f4015100          AND      r1,r1,#0x2000
00006c  9101              STR      r1,[sp,#4]
;;;104    
;;;105    	    __HAL_RCC_GPIOA_CLK_ENABLE();
00006e  6cc1              LDR      r1,[r0,#0x4c]
000070  f0410101          ORR      r1,r1,#1
000074  64c1              STR      r1,[r0,#0x4c]
000076  6cc1              LDR      r1,[r0,#0x4c]
000078  f0010101          AND      r1,r1,#1
00007c  9101              STR      r1,[sp,#4]
;;;106    			__HAL_RCC_GPIOB_CLK_ENABLE();
00007e  6cc1              LDR      r1,[r0,#0x4c]
000080  f0410102          ORR      r1,r1,#2
000084  64c1              STR      r1,[r0,#0x4c]
000086  6cc1              LDR      r1,[r0,#0x4c]
000088  f0010102          AND      r1,r1,#2
00008c  9101              STR      r1,[sp,#4]
;;;107    	    __HAL_RCC_GPIOC_CLK_ENABLE();
00008e  6cc1              LDR      r1,[r0,#0x4c]
000090  f0410104          ORR      r1,r1,#4
000094  64c1              STR      r1,[r0,#0x4c]
000096  6cc0              LDR      r0,[r0,#0x4c]
000098  f0000004          AND      r0,r0,#4
00009c  9001              STR      r0,[sp,#4]
;;;108    	    
;;;109    			bsp_mcu_adc_enable_cnt = 0;
00009e  4f1b              LDR      r7,|L6.268|
0000a0  2600              MOVS     r6,#0
0000a2  703e              STRB     r6,[r7,#0]
;;;110    			for(int i=0 ;i < ADC_MAX_IN_PIN_NUM; i++){
0000a4  2400              MOVS     r4,#0
;;;111    			    if((bsp_mcu_adc_config_table[i].gpio_port!=BSP_MCU_ADC_DISABLE) && (bsp_mcu_adc_config_table[i].gpio_pin!=BSP_MCU_ADC_DISABLE)){
0000a6  f1070804          ADD      r8,r7,#4
                  |L6.170|
0000aa  f8580034          LDR      r0,[r8,r4,LSL #3]
0000ae  b158              CBZ      r0,|L6.200|
0000b0  eb0801c4          ADD      r1,r8,r4,LSL #3
0000b4  8889              LDRH     r1,[r1,#4]
0000b6  b139              CBZ      r1,|L6.200|
;;;112    			        HalBspSetGpio(bsp_mcu_adc_config_table[i].gpio_port, bsp_mcu_adc_config_table[i].gpio_pin, GPIO_MODE_ANALOG_ADC_CONTROL, GPIO_NOPULL, 0);
0000b8  2300              MOVS     r3,#0
0000ba  220b              MOVS     r2,#0xb
0000bc  9600              STR      r6,[sp,#0]
0000be  f7fffffe          BL       HalBspSetGpio
;;;113    				      bsp_mcu_adc_enable_cnt++;
0000c2  7838              LDRB     r0,[r7,#0]  ; bsp_mcu_adc_enable_cnt
0000c4  1c40              ADDS     r0,r0,#1
0000c6  7038              STRB     r0,[r7,#0]
                  |L6.200|
0000c8  1c64              ADDS     r4,r4,#1              ;110
0000ca  2c10              CMP      r4,#0x10              ;110
0000cc  dbed              BLT      |L6.170|
;;;114    			    } 
;;;115    			}
;;;116    		
;;;117    	    /* ADC1 DMA Init */
;;;118    	    /* ADC1 Init */
;;;119    	    smp_dma_adc1.Instance = DMA1_Channel1;
0000ce  4c11              LDR      r4,|L6.276|
0000d0  480f              LDR      r0,|L6.272|
0000d2  6020              STR      r0,[r4,#0]  ; smp_dma_adc1
;;;120    	    smp_dma_adc1.Init.Request = DMA_REQUEST_0;
0000d4  6066              STR      r6,[r4,#4]  ; smp_dma_adc1
;;;121    	    smp_dma_adc1.Init.Direction = DMA_PERIPH_TO_MEMORY;
0000d6  60a6              STR      r6,[r4,#8]  ; smp_dma_adc1
;;;122    	    smp_dma_adc1.Init.PeriphInc = DMA_PINC_DISABLE;
0000d8  60e6              STR      r6,[r4,#0xc]  ; smp_dma_adc1
;;;123    	    smp_dma_adc1.Init.MemInc = DMA_MINC_ENABLE;
0000da  2080              MOVS     r0,#0x80
0000dc  6120              STR      r0,[r4,#0x10]  ; smp_dma_adc1
;;;124    	    smp_dma_adc1.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
0000de  0040              LSLS     r0,r0,#1
0000e0  6160              STR      r0,[r4,#0x14]  ; smp_dma_adc1
;;;125    	    smp_dma_adc1.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
0000e2  0080              LSLS     r0,r0,#2
0000e4  61a0              STR      r0,[r4,#0x18]  ; smp_dma_adc1
;;;126    	    smp_dma_adc1.Init.Mode = DMA_CIRCULAR;
0000e6  2020              MOVS     r0,#0x20
0000e8  61e0              STR      r0,[r4,#0x1c]  ; smp_dma_adc1
;;;127     	    smp_dma_adc1.Init.Priority = DMA_PRIORITY_LOW;//DMA_PRIORITY_HIGH;
0000ea  6226              STR      r6,[r4,#0x20]  ; smp_dma_adc1
;;;128    	    if (HAL_DMA_Init(&smp_dma_adc1) != HAL_OK)
0000ec  4620              MOV      r0,r4
0000ee  f7fffffe          BL       HAL_DMA_Init
0000f2  b108              CBZ      r0,|L6.248|
;;;129    	    {
;;;130    	        Error_Handler();
0000f4  f7fffffe          BL       Error_Handler
                  |L6.248|
;;;131    	    }
;;;132    
;;;133    	    __HAL_LINKDMA(hadc,DMA_Handle,smp_dma_adc1);
0000f8  652c              STR      r4,[r5,#0x50]
0000fa  62a5              STR      r5,[r4,#0x28]  ; smp_dma_adc1
                  |L6.252|
;;;134    
;;;135    	    /* USER CODE BEGIN ADC1_MspInit 1 */
;;;136    
;;;137        	/* USER CODE END ADC1_MspInit 1 */
;;;138    	   }	
;;;139    }
0000fc  f50d7d04          ADD      sp,sp,#0x210
000100  e8bd81f0          POP      {r4-r8,pc}
;;;140    
                          ENDP

                  |L6.260|
                          DCD      0x50040000
                  |L6.264|
                          DCD      0x40021000
                  |L6.268|
                          DCD      ||area_number.17||
                  |L6.272|
                          DCD      0x40020008
                  |L6.276|
                          DCD      ||.bss||+0x40

                          AREA ||i.hal_internal_adc_channel_find||, CODE, READONLY, ALIGN=2

                  hal_internal_adc_channel_find PROC
;;;313    
;;;314    int8_t hal_internal_adc_channel_find(bsp_adc_init_io_config adc_confing){
000000  b573              PUSH     {r0,r1,r4-r6,lr}
;;;315    uint8_t i=0;
000002  2000              MOVS     r0,#0
;;;316        for(i = 0; i< bsp_mcu_adc_enable_cnt; i++){
000004  490c              LDR      r1,|L7.56|
;;;317    		    if((adc_confing.gpio_port == p_adc_cong[i]->gpio_port) && (adc_confing.gpio_pin == p_adc_cong[i]->gpio_pin)){
000006  4a0b              LDR      r2,|L7.52|
000008  f8bd3004          LDRH     r3,[sp,#4]
00000c  780c              LDRB     r4,[r1,#0]            ;316
00000e  e00c              B        |L7.42|
                  |L7.16|
000010  f8521020          LDR      r1,[r2,r0,LSL #2]
000014  9d00              LDR      r5,[sp,#0]
000016  680e              LDR      r6,[r1,#0]
000018  42b5              CMP      r5,r6
00001a  d104              BNE      |L7.38|
00001c  8889              LDRH     r1,[r1,#4]
00001e  428b              CMP      r3,r1
000020  d101              BNE      |L7.38|
;;;318    				     return(i);
000022  b240              SXTB     r0,r0
;;;319    				}
;;;320    		}	
;;;321    		return(SMP_ERROR_NOT_SUPPORTED);
;;;322    }
000024  bd7c              POP      {r2-r6,pc}
                  |L7.38|
000026  1c40              ADDS     r0,r0,#1              ;316
000028  b2c0              UXTB     r0,r0                 ;316
                  |L7.42|
00002a  42a0              CMP      r0,r4                 ;316
00002c  d3f0              BCC      |L7.16|
00002e  f06f0001          MVN      r0,#1                 ;321
000032  bd7c              POP      {r2-r6,pc}
;;;323    
                          ENDP

                  |L7.52|
                          DCD      ||.bss||
                  |L7.56|
                          DCD      ||area_number.17||

                          AREA ||i.hal_internal_adc_get||, CODE, READONLY, ALIGN=2

                  hal_internal_adc_get PROC
;;;323    
;;;324    int8_t hal_internal_adc_get(uint16_t *adc_data,adc_module_number num, bsp_adc_init_io_config adc_confing){
000000  b51f              PUSH     {r0-r4,lr}
000002  4604              MOV      r4,r0
;;;325    int8_t	res=SMP_ERROR_NOT_SUPPORTED;
000004  f06f0001          MVN      r0,#1
;;;326    	
;;;327    	if(num == adc1){
000008  2900              CMP      r1,#0
00000a  d006              BEQ      |L8.26|
;;;328    		res = hal_internal_adc_channel_find(adc_confing);
;;;329    		
;;;330    		if(res == SMP_ERROR_NOT_SUPPORTED) return(res);
;;;331    		if(res >=0 && res <bsp_mcu_adc_enable_cnt){
;;;332    		    *adc_data = SMPADCVALUE1[res];
;;;333    		}
;;;334    	}else if(num == adc2){
00000c  2901              CMP      r1,#1
00000e  d002              BEQ      |L8.22|
;;;335    		if(res == SMP_ERROR_NOT_SUPPORTED) return(res);
;;;336    		*adc_data = SMPADCVALUE1[res];
;;;337    	}else if(num == adc3){
000010  2902              CMP      r1,#2
000012  d000              BEQ      |L8.22|
                  |L8.20|
;;;338    		if(res == SMP_ERROR_NOT_SUPPORTED) return(res);
;;;339    		*adc_data = SMPADCVALUE1[res];
;;;340    	}
;;;341    	
;;;342    	return 0;
000014  2000              MOVS     r0,#0
                  |L8.22|
;;;343    }
000016  b004              ADD      sp,sp,#0x10
000018  bd10              POP      {r4,pc}
                  |L8.26|
00001a  e9dd0102          LDRD     r0,r1,[sp,#8]         ;328
00001e  f7fffffe          BL       hal_internal_adc_channel_find
000022  1c81              ADDS     r1,r0,#2              ;330
000024  d0f7              BEQ      |L8.22|
000026  2800              CMP      r0,#0                 ;331
000028  dbf4              BLT      |L8.20|
00002a  4904              LDR      r1,|L8.60|
00002c  7809              LDRB     r1,[r1,#0]            ;331  ; bsp_mcu_adc_enable_cnt
00002e  4288              CMP      r0,r1                 ;331
000030  daf0              BGE      |L8.20|
000032  4903              LDR      r1,|L8.64|
000034  f8310010          LDRH     r0,[r1,r0,LSL #1]     ;332
000038  8020              STRH     r0,[r4,#0]            ;332
00003a  e7eb              B        |L8.20|
;;;344    
                          ENDP

                  |L8.60|
                          DCD      ||area_number.17||
                  |L8.64|
                          DCD      ||.bss||+0x1c0

                          AREA ||i.smp_adc_adc_para_init||, CODE, READONLY, ALIGN=2

                  smp_adc_adc_para_init PROC
;;;170    
;;;171    int8_t smp_adc_adc_para_init(adc_module_number num){
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  b08a              SUB      sp,sp,#0x28
000006  4604              MOV      r4,r0
;;;172    	Enable_DMA_Control_Clock();
000008  f7fffffe          BL       Enable_DMA_Control_Clock
;;;173    	
;;;174    	ADC_MultiModeTypeDef multimode = {0};
00000c  2600              MOVS     r6,#0
00000e  9607              STR      r6,[sp,#0x1c]
000010  9608              STR      r6,[sp,#0x20]
000012  9609              STR      r6,[sp,#0x24]
;;;175    	ADC_ChannelConfTypeDef sConfig = {0};	
000014  2118              MOVS     r1,#0x18
000016  a801              ADD      r0,sp,#4
000018  f7fffffe          BL       __aeabi_memclr4
;;;176    	
;;;177    	static uint8_t adc_rank_cnt = 0;
;;;178    	
;;;179    	switch(num){
00001c  b13c              CBZ      r4,|L9.46|
00001e  2c01              CMP      r4,#1
000020  d077              BEQ      |L9.274|
000022  2c02              CMP      r4,#2
000024  d075              BEQ      |L9.274|
;;;180    		case adc1:
;;;181    			   bsp_mcu_adc_enable_cnt = 0;
;;;182    			   for(int i=0 ;i < ADC_MAX_IN_PIN_NUM; i++){
;;;183    			       if((bsp_mcu_adc_config_table[i].gpio_port!=BSP_MCU_ADC_DISABLE) && (bsp_mcu_adc_config_table[i].gpio_pin!=BSP_MCU_ADC_DISABLE)){
;;;184    				          bsp_mcu_adc_enable_cnt++;
;;;185    			       } 
;;;186    			  }		
;;;187    				smp_adc_1.Instance = ADC1;
;;;188    				smp_adc_1.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV256;
;;;189    				smp_adc_1.Init.Resolution = ADC_RESOLUTION_12B;
;;;190    				smp_adc_1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
;;;191    				smp_adc_1.Init.ScanConvMode = ADC_SCAN_ENABLE;
;;;192    				smp_adc_1.Init.EOCSelection = ADC_EOC_SEQ_CONV;
;;;193    				smp_adc_1.Init.LowPowerAutoWait = ENABLE;
;;;194    				smp_adc_1.Init.ContinuousConvMode = ENABLE;
;;;195    				smp_adc_1.Init.NbrOfConversion = bsp_mcu_adc_enable_cnt;
;;;196    				smp_adc_1.Init.DiscontinuousConvMode = DISABLE;
;;;197    				smp_adc_1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
;;;198    				smp_adc_1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
;;;199    				smp_adc_1.Init.DMAContinuousRequests = ENABLE;
;;;200    				smp_adc_1.Init.Overrun = ADC_OVR_DATA_OVERWRITTEN;
;;;201    				smp_adc_1.Init.OversamplingMode = DISABLE;
;;;202    		
;;;203    				if (HAL_ADC_Init(&smp_adc_1) != HAL_OK){
;;;204    					return SMP_ERROR_NULL;
;;;205    				}
;;;206    				multimode.Mode = ADC_MODE_INDEPENDENT;
;;;207    				if (HAL_ADCEx_MultiModeConfigChannel(&smp_adc_1, &multimode) != HAL_OK)
;;;208    				{
;;;209    					return SMP_ERROR_NULL;
;;;210    				}
;;;211    				
;;;212    				// Configure Regular Channel 1~16 (MAX Channel)
;;;213    				//--------------------------------------------------------------
;;;214    				adc_rank_cnt = 0;
;;;215    				for(int i=0 ;i < ADC_MAX_IN_PIN_NUM; i++){
;;;216    				    if((bsp_mcu_adc_config_table[i].gpio_port!=BSP_MCU_ADC_DISABLE) && (bsp_mcu_adc_config_table[i].gpio_pin!=BSP_MCU_ADC_DISABLE)){	
;;;217    				        p_adc_cong[adc_rank_cnt] = &bsp_mcu_adc_config_table[i];
;;;218    							
;;;219    							  sConfig.Channel = GetADCChParaSTM32L496(adc1, bsp_mcu_adc_config_table[i].gpio_port, bsp_mcu_adc_config_table[i].gpio_pin);
;;;220    				        sConfig.Rank = adc_sconfig_rank[adc_rank_cnt++];
;;;221    				        sConfig.SamplingTime = ADC_SAMPLETIME_640CYCLES_5;
;;;222    				
;;;223    							  if(adc_rank_cnt==1){
;;;224    				            sConfig.SingleDiff = ADC_SINGLE_ENDED;
;;;225    				            sConfig.OffsetNumber = ADC_OFFSET_NONE;
;;;226    				            sConfig.Offset = 0;
;;;227    								}
;;;228    								
;;;229    				        if (HAL_ADC_ConfigChannel(&smp_adc_1, &sConfig) != HAL_OK)
;;;230    				        {
;;;231    					          return SMP_ERROR_NULL;
;;;232    				        }
;;;233    						}
;;;234    			 }
;;;235    								
;;;236           HAL_ADCEx_Calibration_Start(&smp_adc_1,ADC_SINGLE_ENDED);
;;;237           HAL_ADC_Start_DMA(&smp_adc_1,(uint32_t *)SMPADCVALUE1,adc_rank_cnt);
;;;238    			 break;
;;;239    		case adc2:
;;;240    			 break;
;;;241    		case adc3:
;;;242    			 break;
;;;243    		default:
;;;244    			return SMP_ERROR_NOT_SUPPORTED;
000026  1eb0              SUBS     r0,r6,#2
                  |L9.40|
;;;245    			//break;
;;;246    	}
;;;247    	return SMP_SUCCESS;
;;;248    }
000028  b00a              ADD      sp,sp,#0x28
00002a  e8bd81f0          POP      {r4-r8,pc}
                  |L9.46|
00002e  4d3a              LDR      r5,|L9.280|
000030  702e              STRB     r6,[r5,#0]            ;181
000032  2000              MOVS     r0,#0                 ;182
000034  1d2f              ADDS     r7,r5,#4              ;183
                  |L9.54|
000036  f8571030          LDR      r1,[r7,r0,LSL #3]     ;183
00003a  b131              CBZ      r1,|L9.74|
00003c  eb0701c0          ADD      r1,r7,r0,LSL #3       ;183
000040  8889              LDRH     r1,[r1,#4]            ;183
000042  b111              CBZ      r1,|L9.74|
000044  7829              LDRB     r1,[r5,#0]            ;184  ; bsp_mcu_adc_enable_cnt
000046  1c49              ADDS     r1,r1,#1              ;184
000048  7029              STRB     r1,[r5,#0]            ;184
                  |L9.74|
00004a  1c40              ADDS     r0,r0,#1              ;182
00004c  2810              CMP      r0,#0x10              ;182
00004e  dbf2              BLT      |L9.54|
000050  4833              LDR      r0,|L9.288|
000052  4932              LDR      r1,|L9.284|
000054  6001              STR      r1,[r0,#0]            ;187  ; smp_adc_1
000056  f44f1130          MOV      r1,#0x2c0000          ;188
00005a  6041              STR      r1,[r0,#4]            ;188  ; smp_adc_1
00005c  6086              STR      r6,[r0,#8]            ;189  ; smp_adc_1
00005e  60c6              STR      r6,[r0,#0xc]          ;190  ; smp_adc_1
000060  2101              MOVS     r1,#1                 ;191
000062  6101              STR      r1,[r0,#0x10]         ;191  ; smp_adc_1
000064  2208              MOVS     r2,#8                 ;192
000066  6142              STR      r2,[r0,#0x14]         ;192  ; smp_adc_1
000068  7601              STRB     r1,[r0,#0x18]         ;193
00006a  7641              STRB     r1,[r0,#0x19]         ;194
00006c  782a              LDRB     r2,[r5,#0]            ;195  ; bsp_mcu_adc_enable_cnt
00006e  61c2              STR      r2,[r0,#0x1c]         ;195  ; smp_adc_1
000070  f8806020          STRB     r6,[r0,#0x20]         ;196
000074  6286              STR      r6,[r0,#0x28]         ;197  ; smp_adc_1
000076  62c6              STR      r6,[r0,#0x2c]         ;198  ; smp_adc_1
000078  f8801030          STRB     r1,[r0,#0x30]         ;199
00007c  0309              LSLS     r1,r1,#12             ;200
00007e  6341              STR      r1,[r0,#0x34]         ;200  ; smp_adc_1
000080  f8806038          STRB     r6,[r0,#0x38]         ;201
000084  f7fffffe          BL       HAL_ADC_Init
000088  f06f080a          MVN      r8,#0xa               ;204
00008c  b108              CBZ      r0,|L9.146|
00008e  4640              MOV      r0,r8                 ;204
000090  e7ca              B        |L9.40|
                  |L9.146|
000092  9607              STR      r6,[sp,#0x1c]         ;206
000094  a907              ADD      r1,sp,#0x1c           ;207
000096  4822              LDR      r0,|L9.288|
000098  f7fffffe          BL       HAL_ADCEx_MultiModeConfigChannel
00009c  b108              CBZ      r0,|L9.162|
00009e  4640              MOV      r0,r8                 ;209
0000a0  e7c2              B        |L9.40|
                  |L9.162|
0000a2  706e              STRB     r6,[r5,#1]            ;214
0000a4  2400              MOVS     r4,#0                 ;215
                  |L9.166|
0000a6  f8571034          LDR      r1,[r7,r4,LSL #3]     ;216
0000aa  b331              CBZ      r1,|L9.250|
0000ac  eb0700c4          ADD      r0,r7,r4,LSL #3       ;216
0000b0  8882              LDRH     r2,[r0,#4]            ;216
0000b2  b312              CBZ      r2,|L9.250|
0000b4  4b1a              LDR      r3,|L9.288|
0000b6  f895c001          LDRB     r12,[r5,#1]           ;217  ; adc_rank_cnt
0000ba  3b88              SUBS     r3,r3,#0x88           ;217
0000bc  f843002c          STR      r0,[r3,r12,LSL #2]    ;217
0000c0  2000              MOVS     r0,#0                 ;219
0000c2  f7fffffe          BL       GetADCChParaSTM32L496
0000c6  9001              STR      r0,[sp,#4]            ;219
0000c8  7869              LDRB     r1,[r5,#1]            ;220  ; adc_rank_cnt
0000ca  1c48              ADDS     r0,r1,#1              ;220
0000cc  b2c2              UXTB     r2,r0                 ;220
0000ce  4812              LDR      r0,|L9.280|
0000d0  706a              STRB     r2,[r5,#1]            ;220
0000d2  3084              ADDS     r0,r0,#0x84           ;220
0000d4  f8500021          LDR      r0,[r0,r1,LSL #2]     ;220
0000d8  9002              STR      r0,[sp,#8]            ;220
0000da  2007              MOVS     r0,#7                 ;221
0000dc  9003              STR      r0,[sp,#0xc]          ;221
0000de  2a01              CMP      r2,#1                 ;223
0000e0  d104              BNE      |L9.236|
0000e2  207f              MOVS     r0,#0x7f              ;224
0000e4  9004              STR      r0,[sp,#0x10]         ;224
0000e6  2004              MOVS     r0,#4                 ;225
0000e8  9005              STR      r0,[sp,#0x14]         ;225
0000ea  9606              STR      r6,[sp,#0x18]         ;226
                  |L9.236|
0000ec  a901              ADD      r1,sp,#4              ;229
0000ee  480c              LDR      r0,|L9.288|
0000f0  f7fffffe          BL       HAL_ADC_ConfigChannel
0000f4  b108              CBZ      r0,|L9.250|
0000f6  4640              MOV      r0,r8                 ;231
0000f8  e796              B        |L9.40|
                  |L9.250|
0000fa  1c64              ADDS     r4,r4,#1              ;215
0000fc  2c10              CMP      r4,#0x10              ;215
0000fe  dbd2              BLT      |L9.166|
000100  217f              MOVS     r1,#0x7f              ;236
000102  4807              LDR      r0,|L9.288|
000104  f7fffffe          BL       HAL_ADCEx_Calibration_Start
000108  786a              LDRB     r2,[r5,#1]            ;237  ; adc_rank_cnt
00010a  4906              LDR      r1,|L9.292|
00010c  4804              LDR      r0,|L9.288|
00010e  f7fffffe          BL       HAL_ADC_Start_DMA
                  |L9.274|
000112  2000              MOVS     r0,#0                 ;247
000114  e788              B        |L9.40|
;;;249    
                          ENDP

000116  0000              DCW      0x0000
                  |L9.280|
                          DCD      ||area_number.17||
                  |L9.284|
                          DCD      0x50040000
                  |L9.288|
                          DCD      ||.bss||+0x88
                  |L9.292|
                          DCD      ||.bss||+0x1c0

                          AREA ||i.smp_adc_deinit||, CODE, READONLY, ALIGN=2

                  smp_adc_deinit PROC
;;;347    */
;;;348    void smp_adc_deinit(adc_module_number num){
000000  b500              PUSH     {lr}
000002  b09b              SUB      sp,sp,#0x6c
;;;349    	ADC_HandleTypeDef hadc;
;;;350    	switch(num){
000004  2800              CMP      r0,#0
000006  d004              BEQ      |L10.18|
000008  2801              CMP      r0,#1
00000a  d013              BEQ      |L10.52|
00000c  2802              CMP      r0,#2
00000e  d136              BNE      |L10.126|
000010  e023              B        |L10.90|
                  |L10.18|
;;;351    		case adc1:
;;;352    			hadc=smp_adc_1;
000012  2258              MOVS     r2,#0x58
000014  491c              LDR      r1,|L10.136|
000016  a801              ADD      r0,sp,#4
000018  f7fffffe          BL       __aeabi_memcpy4
00001c  481a              LDR      r0,|L10.136|
00001e  6d81              LDR      r1,[r0,#0x58]  ; smp_adc_1
000020  9117              STR      r1,[sp,#0x5c]
000022  6dc0              LDR      r0,[r0,#0x5c]  ; smp_adc_1
000024  9018              STR      r0,[sp,#0x60]
000026  4818              LDR      r0,|L10.136|
000028  3808              SUBS     r0,r0,#8
00002a  6e81              LDR      r1,[r0,#0x68]  ; smp_adc_1
00002c  6ec0              LDR      r0,[r0,#0x6c]  ; smp_adc_1
00002e  9119              STR      r1,[sp,#0x64]
000030  901a              STR      r0,[sp,#0x68]
;;;353    			break;
000032  e024              B        |L10.126|
                  |L10.52|
;;;354    		case adc2:
;;;355    			hadc=smp_adc_2;
000034  4914              LDR      r1,|L10.136|
000036  2258              MOVS     r2,#0x58
000038  3168              ADDS     r1,r1,#0x68
00003a  a801              ADD      r0,sp,#4
00003c  f7fffffe          BL       __aeabi_memcpy4
000040  4811              LDR      r0,|L10.136|
000042  3068              ADDS     r0,r0,#0x68
000044  6d81              LDR      r1,[r0,#0x58]  ; smp_adc_2
000046  9117              STR      r1,[sp,#0x5c]
000048  6dc0              LDR      r0,[r0,#0x5c]  ; smp_adc_2
00004a  9018              STR      r0,[sp,#0x60]
00004c  480e              LDR      r0,|L10.136|
00004e  3078              ADDS     r0,r0,#0x78
000050  6d01              LDR      r1,[r0,#0x50]  ; smp_adc_2
000052  6d40              LDR      r0,[r0,#0x54]  ; smp_adc_2
000054  9119              STR      r1,[sp,#0x64]
000056  901a              STR      r0,[sp,#0x68]
;;;356    			break;
000058  e011              B        |L10.126|
                  |L10.90|
;;;357    		case adc3:
;;;358    			hadc=smp_adc_3;
00005a  490b              LDR      r1,|L10.136|
00005c  2258              MOVS     r2,#0x58
00005e  31d0              ADDS     r1,r1,#0xd0
000060  a801              ADD      r0,sp,#4
000062  f7fffffe          BL       __aeabi_memcpy4
000066  4808              LDR      r0,|L10.136|
000068  30d0              ADDS     r0,r0,#0xd0
00006a  6d81              LDR      r1,[r0,#0x58]  ; smp_adc_3
00006c  9117              STR      r1,[sp,#0x5c]
00006e  6dc0              LDR      r0,[r0,#0x5c]  ; smp_adc_3
000070  9018              STR      r0,[sp,#0x60]
000072  4805              LDR      r0,|L10.136|
000074  30f8              ADDS     r0,r0,#0xf8
000076  6b81              LDR      r1,[r0,#0x38]  ; smp_adc_3
000078  6bc0              LDR      r0,[r0,#0x3c]  ; smp_adc_3
00007a  9119              STR      r1,[sp,#0x64]
00007c  901a              STR      r0,[sp,#0x68]
                  |L10.126|
;;;359    			break;
;;;360    	}
;;;361    	HAL_ADC_DeInit(&hadc);
00007e  a801              ADD      r0,sp,#4
000080  f7fffffe          BL       HAL_ADC_DeInit
;;;362    }
000084  b01b              ADD      sp,sp,#0x6c
000086  bd00              POP      {pc}
;;;363    
                          ENDP

                  |L10.136|
                          DCD      ||.bss||+0x88

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  p_adc_cong
                          %        64
                  smp_dma_adc1
                          %        72
                  smp_adc_1
                          %        104
                  smp_adc_2
                          %        104
                  smp_adc_3
                          %        104
                  SMPADCVALUE1
                          %        32

                          AREA ||area_number.13||, DATA, NOINIT, ALIGN=1

                          EXPORTAS ||area_number.13||, ||.bss||
                  SMPADCVALUE2
                          %        32

                          AREA ||area_number.14||, DATA, NOINIT, ALIGN=1

                          EXPORTAS ||area_number.14||, ||.bss||
                  SMPADCVALUE3
                          %        32

                          AREA ||.data||, DATA, ALIGN=2

                  HAL_RCC_ADC_CLK_ENABLED
                          DCD      0x00000000

                          AREA ||area_number.17||, DATA, ALIGN=2

                          EXPORTAS ||area_number.17||, ||.data||
                  bsp_mcu_adc_enable_cnt
000000  00                DCB      0x00
                  adc_rank_cnt
000001  000000            DCB      0x00,0x00,0x00
                  bsp_mcu_adc_config_table
                          DCD      0x48000000
000008  0001              DCW      0x0001
00000a  0000              DCB      0x00,0x00
                          DCD      0x48000000
000010  0002              DCW      0x0002
000012  0000              DCB      0x00,0x00
                          DCD      0x48000000
000018  0004              DCW      0x0004
00001a  0000              DCB      0x00,0x00
                          DCD      0x48000000
000020  0008              DCW      0x0008
000022  0000              DCB      0x00,0x00
                          DCD      0x48000800
000028  0010              DCW      0x0010
00002a  0000              DCB      0x00,0x00
                          DCD      0x00000000
000030  0000              DCW      0x0000
000032  0000              DCB      0x00,0x00
                          DCD      0x00000000
000038  0000              DCW      0x0000
00003a  0000              DCB      0x00,0x00
                          DCD      0x00000000
000040  0000              DCW      0x0000
000042  0000              DCB      0x00,0x00
                          DCD      0x00000000
000048  0000              DCW      0x0000
00004a  0000              DCB      0x00,0x00
                          DCD      0x00000000
000050  0000              DCW      0x0000
000052  0000              DCB      0x00,0x00
                          DCD      0x00000000
000058  0000              DCW      0x0000
00005a  0000              DCB      0x00,0x00
                          DCD      0x00000000
000060  0000              DCW      0x0000
000062  0000              DCB      0x00,0x00
                          DCD      0x00000000
000068  0000              DCW      0x0000
00006a  0000              DCB      0x00,0x00
                          DCD      0x00000000
000070  0000              DCW      0x0000
000072  0000              DCB      0x00,0x00
                          DCD      0x00000000
000078  0000              DCW      0x0000
00007a  0000              DCB      0x00,0x00
                          DCD      0x00000000
000080  0000              DCW      0x0000
000082  0000              DCB      0x00,0x00
                  adc_sconfig_rank
                          DCD      0x00000006
                          DCD      0x0000000c
                          DCD      0x00000012
                          DCD      0x00000018
                          DCD      0x00000100
                          DCD      0x00000106
                          DCD      0x0000010c
                          DCD      0x00000112
                          DCD      0x00000118
                          DCD      0x00000200
                          DCD      0x00000206
                          DCD      0x0000020c
                          DCD      0x00000212
                          DCD      0x00000218
                          DCD      0x00000300
                          DCD      0x00000306

;*** Start embedded assembler ***

#line 1 "..\\..\\..\\Drivers\\SMP\\smp_adc.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___9_smp_adc_c_7ee47173____REV16|
#line 492 "../../../Drivers/CMSIS/Include/cmsis_armcc.h"
|__asm___9_smp_adc_c_7ee47173____REV16| PROC
#line 493

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___9_smp_adc_c_7ee47173____REVSH|
#line 507
|__asm___9_smp_adc_c_7ee47173____REVSH| PROC
#line 508

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___9_smp_adc_c_7ee47173____RRX|
#line 694
|__asm___9_smp_adc_c_7ee47173____RRX| PROC
#line 695

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
