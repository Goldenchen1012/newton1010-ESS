; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\obj\halafe.o --asm_dir=.\List\ --list_dir=.\List\ --depend=.\obj\halafe.d --cpu=Cortex-M4.fp.sp --apcs=interwork -O1 --diag_suppress=9931 -I../Inc -I../../../Drivers/CMSIS/Include -I../../../Drivers/CMSIS/Device/ST/STM32L4xx/Include -I../../../Drivers/STM32L4xx_HAL_Driver/Inc -I../../../Drivers/BSP/STM32L4xx_Nucleo_144 -I..\..\..\User -I..\..\..\HAL -I..\..\..\Lib -I..\..\..\Config_Common -I..\..\..\AppProtect -I..\..\..\APP -I..\..\..\Lib\SMP -I..\..\..\Drivers\SMP -I..\..\..\BSP -I..\..\..\Drivers\BSP\STM32L496V_Davinci -I..\..\..\API -I..\..\..\AppCommunication -I..\..\..\Drivers\W5500 -I..\..\..\RTT -I.\RTE\_HVESS_Normal -IC:\Users\88691\AppData\Local\Arm\Packs\ARM\CMSIS\5.8.0\CMSIS\Core\Include -IC:\Users\88691\AppData\Local\Arm\Packs\Keil\STM32L4xx_DFP\2.6.0\Drivers\CMSIS\Device\ST\STM32L4xx\Include -D__MICROLIB -D__UVISION_VERSION=535 -D_RTE_ -DSTM32L496xx -D_RTE_ -DSTM32L496xx -DUSE_HAL_DRIVER -DUSE_STM32L4XX_NUCLEO_144 -DBSPSMPS -DUSE_STM32L4XX_NUCLEO_144_SMPS -DUSE_ADP5301ACBZ -W ..\..\..\HAL\HalAfe.c]
                          THUMB

                          AREA ||i.HalAfeGetBatteryVoltage||, CODE, READONLY, ALIGN=2

                  HalAfeGetBatteryVoltage PROC
;;;85     
;;;86     tBatteryVoltage HalAfeGetBatteryVoltage(void)
000000  b510              PUSH     {r4,lr}
;;;87     {
;;;88     	tBatteryVoltage	vbat = 0;
000002  2000              MOVS     r0,#0
;;;89     	uint16_t		cell;
;;;90     		 
;;;91     	for(cell=0; cell<AfeBuffer.CellNumber; cell++)
000004  2100              MOVS     r1,#0
;;;92     	{
;;;93     		vbat += AfeBuffer.CellVoltage[cell];
000006  4a06              LDR      r2,|L1.32|
000008  f8b23670          LDRH     r3,[r2,#0x670]        ;91
00000c  e004              B        |L1.24|
                  |L1.14|
00000e  f8324011          LDRH     r4,[r2,r1,LSL #1]
000012  4420              ADD      r0,r0,r4
000014  1c49              ADDS     r1,r1,#1              ;91
000016  b289              UXTH     r1,r1                 ;91
                  |L1.24|
000018  428b              CMP      r3,r1                 ;91
00001a  d8f8              BHI      |L1.14|
;;;94     	}
;;;95     	return vbat;
;;;96     }
00001c  bd10              POP      {r4,pc}
;;;97     
                          ENDP

00001e  0000              DCW      0x0000
                  |L1.32|
                          DCD      ||.bss||

                          AREA ||i.HalAfeGetMaxNtcTempAdc||, CODE, READONLY, ALIGN=2

                  HalAfeGetMaxNtcTempAdc PROC
;;;140    }
;;;141    tNtcAdcData HalAfeGetMaxNtcTempAdc(void)
000000  4801              LDR      r0,|L2.8|
;;;142    {
;;;143    	return AfeBuffer.MaxTempNtcVoltage;
000002  f8b00676          LDRH     r0,[r0,#0x676]  ; AfeBuffer
;;;144    }
000006  4770              BX       lr
;;;145    
                          ENDP

                  |L2.8|
                          DCD      ||.bss||

                          AREA ||i.HalAfeGetMinNtcTempAdc||, CODE, READONLY, ALIGN=2

                  HalAfeGetMinNtcTempAdc PROC
;;;136    
;;;137    tNtcAdcData HalAfeGetMinNtcTempAdc(void)
000000  4801              LDR      r0,|L3.8|
;;;138    {
;;;139    	return AfeBuffer.MinTempNtcVoltage;
000002  f8b00678          LDRH     r0,[r0,#0x678]  ; AfeBuffer
;;;140    }
000006  4770              BX       lr
;;;141    tNtcAdcData HalAfeGetMaxNtcTempAdc(void)
                          ENDP

                  |L3.8|
                          DCD      ||.bss||

                          AREA ||i.HalAfeGetNtcAdc||, CODE, READONLY, ALIGN=2

                  HalAfeGetNtcAdc PROC
;;;102    
;;;103    tNtcAdcData HalAfeGetNtcAdc(uint16_t NtcIndex)
000000  4902              LDR      r1,|L4.12|
;;;104    {
;;;105    	return AfeBuffer.NtcAdcData[NtcIndex];	
000002  eb010040          ADD      r0,r1,r0,LSL #1
000006  f8b00328          LDRH     r0,[r0,#0x328]
;;;106    }
00000a  4770              BX       lr
;;;107    
                          ENDP

                  |L4.12|
                          DCD      ||.bss||

                          AREA ||i.HalAfeSetCurrentValue||, CODE, READONLY, ALIGN=2

                  HalAfeSetCurrentValue PROC
;;;111    }
;;;112    void HalAfeSetCurrentValue(uint8_t index, int32_t current)
000000  4a02              LDR      r2,|L5.12|
;;;113    {
;;;114    	AfeBuffer.CurrentValue[index] = current;
000002  eb020080          ADD      r0,r2,r0,LSL #2
000006  f8c01650          STR      r1,[r0,#0x650]
;;;115    }
00000a  4770              BX       lr
;;;116    
                          ENDP

                  |L5.12|
                          DCD      ||.bss||

                          AREA ||i.halAfeGetCellVoltage||, CODE, READONLY, ALIGN=2

                  halAfeGetCellVoltage PROC
;;;97     
;;;98     tCellVoltage halAfeGetCellVoltage(uint16_t CellIndex)
000000  4901              LDR      r1,|L6.8|
;;;99     {
;;;100    	return AfeBuffer.CellVoltage[CellIndex];	
000002  f8310010          LDRH     r0,[r1,r0,LSL #1]
;;;101    }
000006  4770              BX       lr
;;;102    
                          ENDP

                  |L6.8|
                          DCD      ||.bss||

                          AREA ||i.halAfeGetCurrentAdcValue||, CODE, READONLY, ALIGN=2

                  halAfeGetCurrentAdcValue PROC
;;;50     /* Public function prototypes -----------------------------------------------*/
;;;51     int32_t	halAfeGetCurrentAdcValue(uint8_t CurrentIndex)
000000  2802              CMP      r0,#2
;;;52     {
000002  d301              BCC      |L7.8|
;;;53     	if(CurrentIndex >= 2)
;;;54     		return 0;
000004  2000              MOVS     r0,#0
;;;55     	return AfeBuffer.CurrentAdcValue[CurrentIndex];
;;;56     }
000006  4770              BX       lr
                  |L7.8|
000008  4902              LDR      r1,|L7.20|
00000a  eb010080          ADD      r0,r1,r0,LSL #2       ;55
00000e  f8d00658          LDR      r0,[r0,#0x658]        ;55
000012  4770              BX       lr
;;;57     
                          ENDP

                  |L7.20|
                          DCD      ||.bss||

                          AREA ||i.halAfeGetCurrentValue||, CODE, READONLY, ALIGN=2

                  halAfeGetCurrentValue PROC
;;;107    
;;;108    tCurrent halAfeGetCurrentValue(uint8_t index)
000000  4902              LDR      r1,|L8.12|
;;;109    {
;;;110    	return AfeBuffer.CurrentValue[index];
000002  eb010080          ADD      r0,r1,r0,LSL #2
000006  f8d00650          LDR      r0,[r0,#0x650]
;;;111    }
00000a  4770              BX       lr
;;;112    void HalAfeSetCurrentValue(uint8_t index, int32_t current)
                          ENDP

                  |L8.12|
                          DCD      ||.bss||

                          AREA ||i.halAfeGetMaxCellVoltage||, CODE, READONLY, ALIGN=2

                  halAfeGetMaxCellVoltage PROC
;;;126    
;;;127    tCellVoltage halAfeGetMaxCellVoltage(void)
000000  4801              LDR      r0,|L9.8|
;;;128    {
;;;129    	return AfeBuffer.MaxCellVoltage;
000002  f8b00672          LDRH     r0,[r0,#0x672]  ; AfeBuffer
;;;130    }
000006  4770              BX       lr
;;;131    
                          ENDP

                  |L9.8|
                          DCD      ||.bss||

                          AREA ||i.halAfeGetMinCellVoltage||, CODE, READONLY, ALIGN=2

                  halAfeGetMinCellVoltage PROC
;;;131    
;;;132    tCellVoltage halAfeGetMinCellVoltage(void)
000000  4801              LDR      r0,|L10.8|
;;;133    {
;;;134    	return AfeBuffer.MinCellVoltage;
000002  f8b00674          LDRH     r0,[r0,#0x674]  ; AfeBuffer
;;;135    }
000006  4770              BX       lr
;;;136    
                          ENDP

                  |L10.8|
                          DCD      ||.bss||

                          AREA ||i.halAfeGetVBatAdcValue||, CODE, READONLY, ALIGN=2

                  halAfeGetVBatAdcValue PROC
;;;63     }
;;;64     int32_t	halAfeGetVBatAdcValue(uint8_t VbIndex)
000000  2802              CMP      r0,#2
;;;65     {
000002  d301              BCC      |L11.8|
;;;66     	if(VbIndex >= 2)
;;;67     		return 0;
000004  2000              MOVS     r0,#0
;;;68     	return AfeBuffer.VbatAdcValue[VbIndex];
;;;69     }
000006  4770              BX       lr
                  |L11.8|
000008  4902              LDR      r1,|L11.20|
00000a  eb010080          ADD      r0,r1,r0,LSL #2       ;68
00000e  f8d00668          LDR      r0,[r0,#0x668]        ;68
000012  4770              BX       lr
;;;70     void halAfeSetVBatAdcValue(uint8_t VbIndex, int32_t adcvalue)
                          ENDP

                  |L11.20|
                          DCD      ||.bss||

                          AREA ||i.halAfeGetVBatVoltage||, CODE, READONLY, ALIGN=2

                  halAfeGetVBatVoltage PROC
;;;116    
;;;117    uint32_t halAfeGetVBatVoltage(uint8_t index)
000000  4902              LDR      r1,|L12.12|
;;;118    {
;;;119    	return AfeBuffer.VBat[index];
000002  eb010080          ADD      r0,r1,r0,LSL #2
000006  f8d00660          LDR      r0,[r0,#0x660]
;;;120    }
00000a  4770              BX       lr
;;;121    void halAfeSetVBatVoltage(uint8_t index, uint32_t voltage)
                          ENDP

                  |L12.12|
                          DCD      ||.bss||

                          AREA ||i.halAfeSetCellVoltage||, CODE, READONLY, ALIGN=2

                  halAfeSetCellVoltage PROC
;;;76     
;;;77     void halAfeSetCellVoltage(uint16_t cell, tCellVoltage voltage)
000000  4a01              LDR      r2,|L13.8|
;;;78     {
;;;79     	AfeBuffer.CellVoltage[cell] = voltage;
000002  f8221010          STRH     r1,[r2,r0,LSL #1]
;;;80     }
000006  4770              BX       lr
;;;81     void halAfeSetNtcAdcData(uint16_t ntcs, tNtcAdcData adcdata)
                          ENDP

                  |L13.8|
                          DCD      ||.bss||

                          AREA ||i.halAfeSetCurrentAdcValue||, CODE, READONLY, ALIGN=2

                  halAfeSetCurrentAdcValue PROC
;;;57     
;;;58     void halAfeSetCurrentAdcValue(uint8_t CurrentIndex,int32_t adcvalue)
000000  2802              CMP      r0,#2
;;;59     {
000002  d204              BCS      |L14.14|
;;;60     	if(CurrentIndex >= 2)
;;;61     		return;
;;;62     	AfeBuffer.CurrentAdcValue[CurrentIndex] = adcvalue;
000004  4a02              LDR      r2,|L14.16|
000006  eb020080          ADD      r0,r2,r0,LSL #2
00000a  f8c01658          STR      r1,[r0,#0x658]
                  |L14.14|
;;;63     }
00000e  4770              BX       lr
;;;64     int32_t	halAfeGetVBatAdcValue(uint8_t VbIndex)
                          ENDP

                  |L14.16|
                          DCD      ||.bss||

                          AREA ||i.halAfeSetNtcAdcData||, CODE, READONLY, ALIGN=2

                  halAfeSetNtcAdcData PROC
;;;80     }
;;;81     void halAfeSetNtcAdcData(uint16_t ntcs, tNtcAdcData adcdata)
000000  4a02              LDR      r2,|L15.12|
;;;82     {
;;;83     	AfeBuffer.NtcAdcData[ntcs] = adcdata;
000002  eb020040          ADD      r0,r2,r0,LSL #1
000006  f8a01328          STRH     r1,[r0,#0x328]
;;;84     }
00000a  4770              BX       lr
;;;85     
                          ENDP

                  |L15.12|
                          DCD      ||.bss||

                          AREA ||i.halAfeSetVBatAdcValue||, CODE, READONLY, ALIGN=2

                  halAfeSetVBatAdcValue PROC
;;;69     }
;;;70     void halAfeSetVBatAdcValue(uint8_t VbIndex, int32_t adcvalue)
000000  2802              CMP      r0,#2
;;;71     {
000002  d204              BCS      |L16.14|
;;;72     	if(VbIndex >= 2)
;;;73     		return;
;;;74     	AfeBuffer.VbatAdcValue[VbIndex] = adcvalue;
000004  4a02              LDR      r2,|L16.16|
000006  eb020080          ADD      r0,r2,r0,LSL #2
00000a  f8c01668          STR      r1,[r0,#0x668]
                  |L16.14|
;;;75     }
00000e  4770              BX       lr
;;;76     
                          ENDP

                  |L16.16|
                          DCD      ||.bss||

                          AREA ||i.halAfeSetVBatVoltage||, CODE, READONLY, ALIGN=2

                  halAfeSetVBatVoltage PROC
;;;120    }
;;;121    void halAfeSetVBatVoltage(uint8_t index, uint32_t voltage)
000000  4a02              LDR      r2,|L17.12|
;;;122    {
;;;123    	AfeBuffer.VBat[index] = voltage;
000002  eb020080          ADD      r0,r2,r0,LSL #2
000006  f8c01660          STR      r1,[r0,#0x660]
;;;124    }
00000a  4770              BX       lr
;;;125    
                          ENDP

                  |L17.12|
                          DCD      ||.bss||

                          AREA ||i.halAfeUpdateMinMaxCellVoltage||, CODE, READONLY, ALIGN=2

                  halAfeUpdateMinMaxCellVoltage PROC
;;;146    
;;;147    void halAfeUpdateMinMaxCellVoltage(void)
000000  b570              PUSH     {r4-r6,lr}
;;;148    {
;;;149    	uint16_t	cell;
;;;150    	tCellVoltage	cv;
;;;151    	
;;;152    	AfeBuffer.MaxCellVoltage = 0;
000002  4d10              LDR      r5,|L18.68|
000004  2000              MOVS     r0,#0
000006  f8a50672          STRH     r0,[r5,#0x672]
;;;153    	AfeBuffer.MinCellVoltage = 0xffff;
00000a  f64f70ff          MOV      r0,#0xffff
00000e  f8a50674          STRH     r0,[r5,#0x674]
;;;154    	
;;;155    	for(cell=0; cell<afeCellNumber(); cell++)
000012  2400              MOVS     r4,#0
000014  e010              B        |L18.56|
                  |L18.22|
;;;156    	{
;;;157    		cv  = halAfeGetCellVoltage(cell);
000016  4620              MOV      r0,r4
000018  f7fffffe          BL       halAfeGetCellVoltage
;;;158    		if(cv > AfeBuffer.MaxCellVoltage)
00001c  f8b51672          LDRH     r1,[r5,#0x672]  ; AfeBuffer
000020  4281              CMP      r1,r0
000022  d201              BCS      |L18.40|
;;;159    		{		
;;;160    			AfeBuffer.MaxCellVoltage = cv;
000024  f8a50672          STRH     r0,[r5,#0x672]
                  |L18.40|
;;;161    		}
;;;162    		if(cv < AfeBuffer.MinCellVoltage)
000028  f8b51674          LDRH     r1,[r5,#0x674]  ; AfeBuffer
00002c  4281              CMP      r1,r0
00002e  d901              BLS      |L18.52|
;;;163    		{		
;;;164    			AfeBuffer.MinCellVoltage = cv;
000030  f8a50674          STRH     r0,[r5,#0x674]
                  |L18.52|
000034  1c64              ADDS     r4,r4,#1              ;155
000036  b2a4              UXTH     r4,r4                 ;155
                  |L18.56|
000038  f7fffffe          BL       apiSysParGetCellNumber
00003c  42a0              CMP      r0,r4                 ;155
00003e  d8ea              BHI      |L18.22|
;;;165    		}
;;;166    	}
;;;167    }
000040  bd70              POP      {r4-r6,pc}
;;;168    void halAfeUpdateMinMaxNtcTempVoltage(void)
                          ENDP

000042  0000              DCW      0x0000
                  |L18.68|
                          DCD      ||.bss||

                          AREA ||i.halAfeUpdateMinMaxNtcTempVoltage||, CODE, READONLY, ALIGN=2

                  halAfeUpdateMinMaxNtcTempVoltage PROC
;;;167    }
;;;168    void halAfeUpdateMinMaxNtcTempVoltage(void)
000000  b570              PUSH     {r4-r6,lr}
;;;169    {
;;;170    	uint16_t	ntc;
;;;171    	uint16_t	cv;
;;;172    	
;;;173    	AfeBuffer.MinTempNtcVoltage = 0;
000002  4d10              LDR      r5,|L19.68|
000004  2000              MOVS     r0,#0
000006  f8a50678          STRH     r0,[r5,#0x678]
;;;174    	AfeBuffer.MaxTempNtcVoltage = 0xffff;
00000a  f64f70ff          MOV      r0,#0xffff
00000e  f8a50676          STRH     r0,[r5,#0x676]
;;;175    	
;;;176    	for(ntc=0; ntc<afeNtcNumber(); ntc++)
000012  2400              MOVS     r4,#0
000014  e010              B        |L19.56|
                  |L19.22|
;;;177    	{
;;;178    		cv = HalAfeGetNtcAdc(ntc);
000016  4620              MOV      r0,r4
000018  f7fffffe          BL       HalAfeGetNtcAdc
;;;179    		if(cv < AfeBuffer.MaxTempNtcVoltage)
00001c  f8b51676          LDRH     r1,[r5,#0x676]  ; AfeBuffer
000020  4281              CMP      r1,r0
000022  d901              BLS      |L19.40|
;;;180    		{		
;;;181    			AfeBuffer.MaxTempNtcVoltage = cv;
000024  f8a50676          STRH     r0,[r5,#0x676]
                  |L19.40|
;;;182    		}
;;;183    		if(cv > AfeBuffer.MinTempNtcVoltage)
000028  f8b51678          LDRH     r1,[r5,#0x678]  ; AfeBuffer
00002c  4281              CMP      r1,r0
00002e  d201              BCS      |L19.52|
;;;184    		{		
;;;185    			AfeBuffer.MinTempNtcVoltage = cv;
000030  f8a50678          STRH     r0,[r5,#0x678]
                  |L19.52|
000034  1c64              ADDS     r4,r4,#1              ;176
000036  b2a4              UXTH     r4,r4                 ;176
                  |L19.56|
000038  f7fffffe          BL       apiSysParGetNtcNumber
00003c  42a0              CMP      r0,r4                 ;176
00003e  d8ea              BHI      |L19.22|
;;;186    		}
;;;187    	}
;;;188    }
000040  bd70              POP      {r4-r6,pc}
;;;189    
                          ENDP

000042  0000              DCW      0x0000
                  |L19.68|
                          DCD      ||.bss||

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  AfeBuffer
                          %        1660
