; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\obj\apisignalfeedback.o --asm_dir=.\List\ --list_dir=.\List\ --depend=.\obj\apisignalfeedback.d --cpu=Cortex-M4.fp.sp --apcs=interwork -O1 --diag_suppress=9931 -I../Inc -I../../../Drivers/CMSIS/Include -I../../../Drivers/CMSIS/Device/ST/STM32L4xx/Include -I../../../Drivers/STM32L4xx_HAL_Driver/Inc -I../../../Drivers/BSP/STM32L4xx_Nucleo_144 -I..\..\..\User -I..\..\..\HAL -I..\..\..\Lib -I..\..\..\Config_Common -I..\..\..\AppProtect -I..\..\..\APP -I..\..\..\Lib\SMP -I..\..\..\Drivers\SMP -I..\..\..\BSP -I..\..\..\Drivers\BSP\STM32L496V_Davinci -I..\..\..\API -I..\..\..\AppCommunication -I..\..\..\Drivers\W5500 -I..\..\..\RTT -I.\RTE\_HVESS_Normal -IC:\Users\88691\AppData\Local\Arm\Packs\ARM\CMSIS\5.8.0\CMSIS\Core\Include -IC:\Users\88691\AppData\Local\Arm\Packs\Keil\STM32L4xx_DFP\2.6.0\Drivers\CMSIS\Device\ST\STM32L4xx\Include -D__MICROLIB -D__UVISION_VERSION=535 -D_RTE_ -DSTM32L496xx -D_RTE_ -DSTM32L496xx -DUSE_HAL_DRIVER -DUSE_STM32L4XX_NUCLEO_144 -DBSPSMPS -DUSE_STM32L4XX_NUCLEO_144_SMPS -DUSE_ADP5301ACBZ -W ..\..\..\API\ApiSignalFeedback.c]
                          THUMB

                          AREA ||i.apiSignalFeedbackGetStatus||, CODE, READONLY, ALIGN=2

                  apiSignalFeedbackGetStatus PROC
;;;170    /* Public function prototypes -----------------------------------------------*/
;;;171    uint8_t apiSignalFeedbackGetStatus(uint8_t id)
000000  b510              PUSH     {r4,lr}
;;;172    {
;;;173    	uint8_t	i;
;;;174    	
;;;175    	for(i=0; i<50; i++)
000002  2100              MOVS     r1,#0
;;;176    	{
;;;177    		if(mSignalCheckTable[i].CheckFun == NULL)
000004  4b0d              LDR      r3,|L1.60|
                  |L1.6|
000006  eb010241          ADD      r2,r1,r1,LSL #1
00000a  f8534022          LDR      r4,[r3,r2,LSL #2]
00000e  2c00              CMP      r4,#0
000010  d00c              BEQ      |L1.44|
;;;178    			break;
;;;179    		if(mSignalCheckTable[i].id == id)
000012  eb030282          ADD      r2,r3,r2,LSL #2
000016  7992              LDRB     r2,[r2,#6]
000018  4282              CMP      r2,r0
00001a  d10a              BNE      |L1.50|
;;;180    		{
;;;181    			if(mSignalCheckTable[i].Status == SIGNAL_STATUS_HI)
00001c  eb010041          ADD      r0,r1,r1,LSL #1
000020  eb030080          ADD      r0,r3,r0,LSL #2
000024  7900              LDRB     r0,[r0,#4]
000026  2802              CMP      r0,#2
000028  d001              BEQ      |L1.46|
;;;182    				return 1;
;;;183    			else
;;;184    				return 0;
00002a  2000              MOVS     r0,#0
                  |L1.44|
;;;185    		}
;;;186    	}
;;;187    }
00002c  bd10              POP      {r4,pc}
                  |L1.46|
00002e  2001              MOVS     r0,#1                 ;182
000030  bd10              POP      {r4,pc}
                  |L1.50|
000032  1c49              ADDS     r1,r1,#1              ;175
000034  b2c9              UXTB     r1,r1                 ;175
000036  2932              CMP      r1,#0x32              ;175
000038  d3e5              BCC      |L1.6|
00003a  bd10              POP      {r4,pc}
;;;188    
                          ENDP

                  |L1.60|
                          DCD      ||.data||+0x4

                          AREA ||i.apiSignalFeedbackOpen||, CODE, READONLY, ALIGN=2

                  apiSignalFeedbackOpen PROC
;;;189    
;;;190    void apiSignalFeedbackOpen(tApiSignalFeedbackEvtHandler evtHandler)
000000  4902              LDR      r1,|L2.12|
;;;191    {  	
;;;192    	SignalFeedbackEvtHandler = evtHandler;
000002  6008              STR      r0,[r1,#0]  ; SignalFeedbackEvtHandler
;;;193    	LibSwTimerOpen(signalFeedbackSwTimerHandler, 0);
000004  2100              MOVS     r1,#0
000006  4802              LDR      r0,|L2.16|
000008  f7ffbffe          B.W      LibSwTimerOpen
;;;194    }
;;;195    
                          ENDP

                  |L2.12|
                          DCD      ||.data||
                  |L2.16|
                          DCD      signalFeedbackSwTimerHandler

                          AREA ||i.checkSignal||, CODE, READONLY, ALIGN=2

                  checkSignal PROC
;;;108    
;;;109    static void checkSignal(tSignalCheckTable *pChkTable)
000000  b570              PUSH     {r4-r6,lr}
;;;110    {
000002  4604              MOV      r4,r0
;;;111    	if(pChkTable->CheckFun())
000004  6820              LDR      r0,[r4,#0]
000006  4780              BLX      r0
000008  0002              MOVS     r2,r0
;;;112    	{
;;;113    		if(pChkTable->Status != SIGNAL_STATUS_HI)
;;;114    		{
;;;115    			pChkTable->Count = 0;
;;;116    			pChkTable->Status = SIGNAL_STATUS_HI;
;;;117    		}
;;;118    		pChkTable->Count++;
;;;119    		if(pChkTable->Count >= LEVEL_CHANGE_COUNT)
;;;120    		{
;;;121    			if(pChkTable->Count == LEVEL_CHANGE_COUNT)
;;;122    			{
;;;123    				if(SignalFeedbackEvtHandler)
00000a  4918              LDR      r1,|L3.108|
00000c  f04f0000          MOV      r0,#0                 ;111
000010  f04f0502          MOV      r5,#2                 ;113
000014  d014              BEQ      |L3.64|
000016  7922              LDRB     r2,[r4,#4]            ;113
000018  2a02              CMP      r2,#2                 ;113
00001a  d001              BEQ      |L3.32|
00001c  7160              STRB     r0,[r4,#5]            ;115
00001e  7125              STRB     r5,[r4,#4]            ;116
                  |L3.32|
000020  7960              LDRB     r0,[r4,#5]            ;118
000022  1c40              ADDS     r0,r0,#1              ;118
000024  b2c0              UXTB     r0,r0                 ;118
000026  7160              STRB     r0,[r4,#5]            ;118
000028  2802              CMP      r0,#2                 ;119
00002a  d308              BCC      |L3.62|
00002c  d106              BNE      |L3.60|
00002e  680b              LDR      r3,[r1,#0]  ; SignalFeedbackEvtHandler
000030  b123              CBZ      r3,|L3.60|
;;;124    					SignalFeedbackEvtHandler(0, pChkTable->EventHi ,0);
000032  f04f0200          MOV      r2,#0
000036  79e1              LDRB     r1,[r4,#7]
000038  4610              MOV      r0,r2
00003a  4798              BLX      r3
                  |L3.60|
;;;125    			}
;;;126    			pChkTable->Count = LEVEL_CHANGE_COUNT;
00003c  7165              STRB     r5,[r4,#5]
                  |L3.62|
;;;127    		}
;;;128    	}
;;;129    	else
;;;130    	{
;;;131    		if(pChkTable->Status != SIGNAL_STATUS_LOW)
;;;132    		{
;;;133    			pChkTable->Count = 0;			
;;;134    			pChkTable->Status = SIGNAL_STATUS_LOW;
;;;135    		}
;;;136    		pChkTable->Count++;
;;;137    		if(pChkTable->Count >= LEVEL_CHANGE_COUNT)
;;;138    		{
;;;139    			if(pChkTable->Count == LEVEL_CHANGE_COUNT)
;;;140    			{
;;;141    				if(SignalFeedbackEvtHandler)
;;;142    					SignalFeedbackEvtHandler(0, pChkTable->EventLo,	0);
;;;143    			}
;;;144    			pChkTable->Count = LEVEL_CHANGE_COUNT;
;;;145    		}
;;;146    	}
;;;147    }
00003e  bd70              POP      {r4-r6,pc}
                  |L3.64|
000040  7922              LDRB     r2,[r4,#4]            ;131
000042  2a03              CMP      r2,#3                 ;131
000044  d002              BEQ      |L3.76|
000046  7160              STRB     r0,[r4,#5]            ;133
000048  2003              MOVS     r0,#3                 ;134
00004a  7120              STRB     r0,[r4,#4]            ;134
                  |L3.76|
00004c  7960              LDRB     r0,[r4,#5]            ;136
00004e  1c40              ADDS     r0,r0,#1              ;136
000050  b2c0              UXTB     r0,r0                 ;136
000052  7160              STRB     r0,[r4,#5]            ;136
000054  2802              CMP      r0,#2                 ;137
000056  d3f2              BCC      |L3.62|
000058  d106              BNE      |L3.104|
00005a  680b              LDR      r3,[r1,#0]            ;141  ; SignalFeedbackEvtHandler
00005c  b123              CBZ      r3,|L3.104|
00005e  f04f0200          MOV      r2,#0                 ;142
000062  7a21              LDRB     r1,[r4,#8]            ;142
000064  4610              MOV      r0,r2                 ;142
000066  4798              BLX      r3                    ;142
                  |L3.104|
000068  7165              STRB     r5,[r4,#5]            ;144
00006a  bd70              POP      {r4-r6,pc}
;;;148    
                          ENDP

                  |L3.108|
                          DCD      ||.data||

                          AREA ||i.signalFeedbackSwTimerHandler||, CODE, READONLY, ALIGN=2

                  signalFeedbackSwTimerHandler PROC
;;;149    
;;;150    static void signalFeedbackSwTimerHandler(__far void *dest, uint16_t evt, void *vDataPtr)
000000  b570              PUSH     {r4-r6,lr}
;;;151    {
;;;152    	uint8_t		i;
;;;153    	//GPIOD->ODR |= GPIO_PIN_14;
;;;154    	if(evt == LIB_SW_TIMER_EVT_SW_1MS)
000002  290a              CMP      r1,#0xa
000004  d10f              BNE      |L4.38|
;;;155    	{
;;;156    		for(i=0; i<50; i++)
000006  2400              MOVS     r4,#0
;;;157    		{
;;;158    			if(mSignalCheckTable[i].CheckFun == NULL)
000008  4d07              LDR      r5,|L4.40|
                  |L4.10|
00000a  eb040044          ADD      r0,r4,r4,LSL #1
00000e  f8551020          LDR      r1,[r5,r0,LSL #2]
000012  2900              CMP      r1,#0
000014  d007              BEQ      |L4.38|
;;;159    				break;
;;;160    			checkSignal(&mSignalCheckTable[i]);
000016  eb050080          ADD      r0,r5,r0,LSL #2
00001a  f7fffffe          BL       checkSignal
00001e  1c64              ADDS     r4,r4,#1              ;156
000020  b2e4              UXTB     r4,r4                 ;156
000022  2c32              CMP      r4,#0x32              ;156
000024  d3f1              BCC      |L4.10|
                  |L4.38|
;;;161    		}
;;;162    //		GPIOD->ODR ^= GPIO_PIN_14;
;;;163    	}
;;;164    	else if(evt == LIB_SW_TIMER_EVT_SW_1S)
;;;165    	{
;;;166    		
;;;167    	}
;;;168    	//GPIOD->ODR &= ~GPIO_PIN_14;
;;;169    }
000026  bd70              POP      {r4-r6,pc}
;;;170    /* Public function prototypes -----------------------------------------------*/
                          ENDP

                  |L4.40|
                          DCD      ||.data||+0x4

                          AREA ||.data||, DATA, ALIGN=2

                  SignalFeedbackEvtHandler
                          DCD      0x00000000
                  mSignalCheckTable
                          DCD      HalBspGetDi1Status
000008  00000101          DCB      0x00,0x00,0x01,0x01
00000c  02000000          DCB      0x02,0x00,0x00,0x00
                          DCD      HalBspGetDi2Status
000014  00000203          DCB      0x00,0x00,0x02,0x03
000018  04000000          DCB      0x04,0x00,0x00,0x00
                          DCD      HalBspGetEpoStatus
000020  00000305          DCB      0x00,0x00,0x03,0x05
000024  06000000          DCB      0x06,0x00,0x00,0x00
                          DCD      HalBspGetSpStatus
00002c  00000407          DCB      0x00,0x00,0x04,0x07
000030  08000000          DCB      0x08,0x00,0x00,0x00
                          DCD      HalBspGetPs1Status
000038  00000509          DCB      0x00,0x00,0x05,0x09
00003c  0a000000          DCB      0x0a,0x00,0x00,0x00
                          DCD      HalBspGetPs2Status
000044  0000060b          DCB      0x00,0x00,0x06,0x0b
000048  0c000000          DCB      0x0c,0x00,0x00,0x00
                          DCD      HalBspGetPs3Status
000050  0000070d          DCB      0x00,0x00,0x07,0x0d
000054  0e000000          DCB      0x0e,0x00,0x00,0x00
                          DCD      HalBspGetButtonStatus
00005c  0000080f          DCB      0x00,0x00,0x08,0x0f
000060  10000000          DCB      0x10,0x00,0x00,0x00
                          DCD      HalBspGetDocpLatchStatus
000068  00000d19          DCB      0x00,0x00,0x0d,0x19
00006c  1a000000          DCB      0x1a,0x00,0x00,0x00
                          DCD      HalBspGetCocpLatchStatus
000074  00000e1b          DCB      0x00,0x00,0x0e,0x1b
000078  1c000000          DCB      0x1c,0x00,0x00,0x00
                          DCD      HalBspGetOdInStatus
000080  00000f1d          DCB      0x00,0x00,0x0f,0x1d
000084  1e000000          DCB      0x1e,0x00,0x00,0x00
                          DCD      0x00000000
00008c  00000000          DCB      0x00,0x00,0x00,0x00
000090  00000000          DCB      0x00,0x00,0x00,0x00

;*** Start embedded assembler ***

#line 1 "..\\..\\..\\API\\ApiSignalFeedback.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___19_ApiSignalFeedback_c_a93b07c1____REV16|
#line 492 "../../../Drivers/CMSIS/Include/cmsis_armcc.h"
|__asm___19_ApiSignalFeedback_c_a93b07c1____REV16| PROC
#line 493

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___19_ApiSignalFeedback_c_a93b07c1____REVSH|
#line 507
|__asm___19_ApiSignalFeedback_c_a93b07c1____REVSH| PROC
#line 508

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___19_ApiSignalFeedback_c_a93b07c1____RRX|
#line 694
|__asm___19_ApiSignalFeedback_c_a93b07c1____RRX| PROC
#line 695

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
