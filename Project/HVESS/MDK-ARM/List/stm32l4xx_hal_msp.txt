; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\obj\stm32l4xx_hal_msp.o --asm_dir=.\List\ --list_dir=.\List\ --depend=.\obj\stm32l4xx_hal_msp.d --cpu=Cortex-M4.fp.sp --apcs=interwork -O1 --diag_suppress=9931 -I../Inc -I../../../Drivers/CMSIS/Include -I../../../Drivers/CMSIS/Device/ST/STM32L4xx/Include -I../../../Drivers/STM32L4xx_HAL_Driver/Inc -I../../../Drivers/BSP/STM32L4xx_Nucleo_144 -I..\..\..\User -I..\..\..\HAL -I..\..\..\Lib -I..\..\..\Config_Common -I..\..\..\AppProtect -I..\..\..\APP -I..\..\..\Lib\SMP -I..\..\..\Drivers\SMP -I..\..\..\BSP -I..\..\..\Drivers\BSP\STM32L496V_Davinci -I..\..\..\API -I..\..\..\AppCommunication -I..\..\..\Drivers\W5500 -I..\..\..\RTT -I.\RTE\_HVESS_Normal -IC:\Users\88691\AppData\Local\Arm\Packs\ARM\CMSIS\5.8.0\CMSIS\Core\Include -IC:\Users\88691\AppData\Local\Arm\Packs\Keil\STM32L4xx_DFP\2.6.0\Drivers\CMSIS\Device\ST\STM32L4xx\Include -D__MICROLIB -D__UVISION_VERSION=535 -D_RTE_ -DSTM32L496xx -D_RTE_ -DSTM32L496xx -DUSE_HAL_DRIVER -DUSE_STM32L4XX_NUCLEO_144 -DBSPSMPS -DUSE_STM32L4XX_NUCLEO_144_SMPS -DUSE_ADP5301ACBZ -W ..\..\..\User\stm32l4xx_hal_msp.c]
                          THUMB

                          AREA ||i.HAL_I2C_MspDeInit||, CODE, READONLY, ALIGN=2

                  HAL_I2C_MspDeInit PROC
;;;125      */
;;;126    void HAL_I2C_MspDeInit(I2C_HandleTypeDef *hi2c)
000000  b510              PUSH     {r4,lr}
;;;127    {
;;;128    
;;;129    	if(hi2c->Instance == BSP_I2C0){	
000002  6800              LDR      r0,[r0,#0]
000004  490e              LDR      r1,|L1.64|
000006  4288              CMP      r0,r1
000008  d119              BNE      |L1.62|
;;;130    		/*##-1- Reset peripherals ##################################################*/
;;;131    		BSP_I2C0_FORCE_RESET();
00000a  480e              LDR      r0,|L1.68|
00000c  6b81              LDR      r1,[r0,#0x38]
00000e  f4411100          ORR      r1,r1,#0x200000
000012  6381              STR      r1,[r0,#0x38]
;;;132    		BSP_I2C0_RELEASE_RESET();
000014  6b81              LDR      r1,[r0,#0x38]
000016  f4211100          BIC      r1,r1,#0x200000
00001a  6381              STR      r1,[r0,#0x38]
;;;133    		/*##-2- Disable peripherals and GPIO Clocks ################################*/
;;;134    		/* Configure SMP I2C0 Tx as alternate function  */
;;;135    		HAL_GPIO_DeInit(BSP_I2C0_SCL_GPIO_PORT, BSP_I2C0_SCL_PIN);
00001c  4c0a              LDR      r4,|L1.72|
00001e  1581              ASRS     r1,r0,#22
000020  4620              MOV      r0,r4
000022  f7fffffe          BL       HAL_GPIO_DeInit
;;;136    		/* Configure SMP I2C0 Rx as alternate function  */
;;;137    		HAL_GPIO_DeInit(BSP_I2C0_SDA_GPIO_PORT, BSP_I2C0_SDA_PIN);
000026  2180              MOVS     r1,#0x80
000028  4620              MOV      r0,r4
00002a  f7fffffe          BL       HAL_GPIO_DeInit
;;;138    		
;;;139    		/*##-3- Disable the NVIC for SMP I2C0 ###########################################*/
;;;140    		HAL_NVIC_DisableIRQ(BSP_I2C0_ER_IRQn);
00002e  2020              MOVS     r0,#0x20
000030  f7fffffe          BL       HAL_NVIC_DisableIRQ
;;;141    		HAL_NVIC_DisableIRQ(BSP_I2C0_EV_IRQn);
000034  e8bd4010          POP      {r4,lr}
000038  201f              MOVS     r0,#0x1f
00003a  f7ffbffe          B.W      HAL_NVIC_DisableIRQ
                  |L1.62|
;;;142    	}
;;;143    }
00003e  bd10              POP      {r4,pc}
;;;144    
                          ENDP

                  |L1.64|
                          DCD      0x40005400
                  |L1.68|
                          DCD      0x40021000
                  |L1.72|
                          DCD      0x48000400

                          AREA ||i.HAL_I2C_MspInit||, CODE, READONLY, ALIGN=2

                  HAL_I2C_MspInit PROC
;;;70     
;;;71     void HAL_I2C_MspInit(I2C_HandleTypeDef *hi2c)
000000  b530              PUSH     {r4,r5,lr}
;;;72     {  
000002  b087              SUB      sp,sp,#0x1c
;;;73     	GPIO_InitTypeDef  GPIO_InitStruct;
;;;74     //	RCC_PeriphCLKInitTypeDef  RCC_PeriphCLKInitStruct;
;;;75     	if(hi2c->Instance == BSP_I2C0){
000004  6800              LDR      r0,[r0,#0]
000006  4926              LDR      r1,|L2.160|
000008  4288              CMP      r0,r1
00000a  d146              BNE      |L2.154|
;;;76     //		/*##-1- Configure the Discovery SMP I2C0 clock source. The clock is derived from the SYSCLK #*/
;;;77     //		RCC_PeriphCLKInitStruct.PeriphClockSelection = RCC_PERIPHCLK_I2C1;
;;;78     //		RCC_PeriphCLKInitStruct.I2c1ClockSelection = RCC_I2C1CLKSOURCE_SYSCLK;
;;;79     //		HAL_RCCEx_PeriphCLKConfig(&RCC_PeriphCLKInitStruct);
;;;80     		
;;;81     		
;;;82     		/*##-1- Enable peripherals and GPIO Clocks #################################*/
;;;83     		/* Enable GPIO TX/RX clock */
;;;84     		BSP_I2C0_SCL_GPIO_CLK_ENABLE();
00000c  4825              LDR      r0,|L2.164|
00000e  6cc1              LDR      r1,[r0,#0x4c]
000010  f0410102          ORR      r1,r1,#2
000014  64c1              STR      r1,[r0,#0x4c]
000016  6cc1              LDR      r1,[r0,#0x4c]
000018  f0010102          AND      r1,r1,#2
00001c  9101              STR      r1,[sp,#4]
;;;85     		BSP_I2C0_SDA_GPIO_CLK_ENABLE();
00001e  6cc1              LDR      r1,[r0,#0x4c]
000020  f0410102          ORR      r1,r1,#2
000024  64c1              STR      r1,[r0,#0x4c]
000026  6cc1              LDR      r1,[r0,#0x4c]
000028  f0010102          AND      r1,r1,#2
00002c  9101              STR      r1,[sp,#4]
;;;86     
;;;87     		/* Enable SMP I2C0 clock */
;;;88     		BSP_I2C0_CLK_ENABLE(); 
00002e  6d81              LDR      r1,[r0,#0x58]
000030  f4411100          ORR      r1,r1,#0x200000
000034  6581              STR      r1,[r0,#0x58]
000036  6d81              LDR      r1,[r0,#0x58]
000038  f4011100          AND      r1,r1,#0x200000
00003c  9101              STR      r1,[sp,#4]
;;;89     		/* Force and release SMP I2C0 Peripheral Clock Reset */ 
;;;90     		BSP_I2C0_FORCE_RESET();
00003e  6b81              LDR      r1,[r0,#0x38]
000040  f4411100          ORR      r1,r1,#0x200000
000044  6381              STR      r1,[r0,#0x38]
;;;91     		BSP_I2C0_RELEASE_RESET();		
000046  6b81              LDR      r1,[r0,#0x38]
000048  f4211100          BIC      r1,r1,#0x200000
00004c  6381              STR      r1,[r0,#0x38]
;;;92     		
;;;93     		/*##-2- Configure peripheral GPIO ##########################################*/  
;;;94     		/* SMP I2C0 TX GPIO pin configuration  */
;;;95     		GPIO_InitStruct.Pin       = BSP_I2C0_SCL_PIN;		
00004e  1580              ASRS     r0,r0,#22
000050  9002              STR      r0,[sp,#8]
;;;96     		GPIO_InitStruct.Mode      = GPIO_MODE_AF_OD;
000052  2012              MOVS     r0,#0x12
000054  9003              STR      r0,[sp,#0xc]
;;;97     		GPIO_InitStruct.Pull      = GPIO_PULLUP;
000056  2001              MOVS     r0,#1
000058  9004              STR      r0,[sp,#0x10]
;;;98     		GPIO_InitStruct.Speed     = GPIO_SPEED_FAST;	
00005a  2002              MOVS     r0,#2
00005c  9005              STR      r0,[sp,#0x14]
;;;99     		GPIO_InitStruct.Alternate = BSP_I2C0_SCL_AF;
00005e  2404              MOVS     r4,#4
000060  9406              STR      r4,[sp,#0x18]
;;;100    
;;;101    		HAL_GPIO_Init(BSP_I2C0_SCL_GPIO_PORT, &GPIO_InitStruct);
000062  4d11              LDR      r5,|L2.168|
000064  a902              ADD      r1,sp,#8
000066  4628              MOV      r0,r5
000068  f7fffffe          BL       HAL_GPIO_Init
;;;102    
;;;103    		/* SMP I2C0 RX GPIO pin configuration  */
;;;104    		GPIO_InitStruct.Pin			= BSP_I2C0_SDA_PIN;	
00006c  2180              MOVS     r1,#0x80
00006e  9102              STR      r1,[sp,#8]
;;;105    		GPIO_InitStruct.Alternate 	= BSP_I2C0_SDA_AF;
000070  9406              STR      r4,[sp,#0x18]
;;;106    
;;;107    		HAL_GPIO_Init(BSP_I2C0_SDA_GPIO_PORT, &GPIO_InitStruct);
000072  a902              ADD      r1,sp,#8
000074  4628              MOV      r0,r5
000076  f7fffffe          BL       HAL_GPIO_Init
;;;108    		
;;;109    		/*##-3- Configure the NVIC for SMP I2C0 #########################################*/   
;;;110    		/* NVIC for SMP I2C0 */
;;;111    		HAL_NVIC_SetPriority(BSP_I2C0_ER_IRQn, 0, 1);
00007a  2201              MOVS     r2,#1
00007c  2100              MOVS     r1,#0
00007e  2020              MOVS     r0,#0x20
000080  f7fffffe          BL       HAL_NVIC_SetPriority
;;;112    		HAL_NVIC_EnableIRQ(BSP_I2C0_ER_IRQn);
000084  2020              MOVS     r0,#0x20
000086  f7fffffe          BL       HAL_NVIC_EnableIRQ
;;;113    		HAL_NVIC_SetPriority(BSP_I2C0_EV_IRQn, 0, 2);
00008a  2202              MOVS     r2,#2
00008c  2100              MOVS     r1,#0
00008e  201f              MOVS     r0,#0x1f
000090  f7fffffe          BL       HAL_NVIC_SetPriority
;;;114    		HAL_NVIC_EnableIRQ(BSP_I2C0_EV_IRQn);
000094  201f              MOVS     r0,#0x1f
000096  f7fffffe          BL       HAL_NVIC_EnableIRQ
                  |L2.154|
;;;115    	}
;;;116    }
00009a  b007              ADD      sp,sp,#0x1c
00009c  bd30              POP      {r4,r5,pc}
;;;117    
                          ENDP

00009e  0000              DCW      0x0000
                  |L2.160|
                          DCD      0x40005400
                  |L2.164|
                          DCD      0x40021000
                  |L2.168|
                          DCD      0x48000400

                          AREA ||i.HAL_MspDeInit||, CODE, READONLY, ALIGN=1

                  HAL_MspDeInit PROC
;;;66       */
;;;67     void HAL_MspDeInit(void)
000000  4770              BX       lr
;;;68     {
;;;69     }
;;;70     
                          ENDP


                          AREA ||i.HAL_MspInit||, CODE, READONLY, ALIGN=1

                  HAL_MspInit PROC
;;;57       */
;;;58     void HAL_MspInit(void)
000000  4770              BX       lr
;;;59     {
;;;60     }
;;;61     
                          ENDP


                          AREA ||i.HAL_TIM_Base_MspDeInit||, CODE, READONLY, ALIGN=2

                  HAL_TIM_Base_MspDeInit PROC
;;;246    
;;;247    void HAL_TIM_Base_MspDeInit(TIM_HandleTypeDef *htim){
000000  b510              PUSH     {r4,lr}
;;;248    	if(htim->Instance == SMP_TIM){
000002  6800              LDR      r0,[r0,#0]
;;;249    		HAL_NVIC_DisableIRQ(SMP_TIM_IRQn);
;;;250    		SMP_TIM_CLK_DISABLE();
000004  4c10              LDR      r4,|L5.72|
000006  f1b04f80          CMP      r0,#0x40000000        ;248
00000a  d00a              BEQ      |L5.34|
;;;251    	}else if(htim->Instance == USER_TIM){
00000c  490f              LDR      r1,|L5.76|
00000e  4288              CMP      r0,r1
000010  d10f              BNE      |L5.50|
;;;252    		HAL_NVIC_DisableIRQ(USER_TIM_IRQn);
000012  201d              MOVS     r0,#0x1d
000014  f7fffffe          BL       HAL_NVIC_DisableIRQ
;;;253    		USER_TIM_CLK_DISABLE();
000018  6da0              LDR      r0,[r4,#0x58]
00001a  f0200002          BIC      r0,r0,#2
00001e  65a0              STR      r0,[r4,#0x58]
;;;254    	}else if(htim->Instance == LED_TIM){
;;;255    		HAL_NVIC_DisableIRQ(LED_TIM_IRQn);
;;;256    		LED_TIM_CLK_DISABLE();
;;;257    	}
;;;258    }
000020  bd10              POP      {r4,pc}
                  |L5.34|
000022  201c              MOVS     r0,#0x1c              ;249
000024  f7fffffe          BL       HAL_NVIC_DisableIRQ
000028  6da0              LDR      r0,[r4,#0x58]         ;250
00002a  f0200001          BIC      r0,r0,#1              ;250
00002e  65a0              STR      r0,[r4,#0x58]         ;250
                  |L5.48|
000030  bd10              POP      {r4,pc}
                  |L5.50|
000032  4907              LDR      r1,|L5.80|
000034  4288              CMP      r0,r1                 ;254
000036  d1fb              BNE      |L5.48|
000038  201e              MOVS     r0,#0x1e              ;255
00003a  f7fffffe          BL       HAL_NVIC_DisableIRQ
00003e  6da0              LDR      r0,[r4,#0x58]         ;256
000040  f0200004          BIC      r0,r0,#4              ;256
000044  65a0              STR      r0,[r4,#0x58]         ;256
000046  bd10              POP      {r4,pc}
;;;259    
                          ENDP

                  |L5.72|
                          DCD      0x40021000
                  |L5.76|
                          DCD      0x40000400
                  |L5.80|
                          DCD      0x40000800

                          AREA ||i.HAL_TIM_Base_MspInit||, CODE, READONLY, ALIGN=2

                  HAL_TIM_Base_MspInit PROC
;;;220    
;;;221    void HAL_TIM_Base_MspInit(TIM_HandleTypeDef *htim)
000000  b508              PUSH     {r3,lr}
;;;222    {
;;;223    	if(htim->Instance == SMP_TIM){
000002  6800              LDR      r0,[r0,#0]
;;;224    		SMP_TIM_CLK_ENABLE();
000004  4920              LDR      r1,|L6.136|
000006  f1b04f80          CMP      r0,#0x40000000        ;223
00000a  d014              BEQ      |L6.54|
;;;225    		/*##-7- Configure the NVIC for SMP TIM ########################################*/
;;;226    		/* Set Interrupt Group Priority */ 
;;;227    		HAL_NVIC_SetPriority(SMP_TIM_IRQn, 7, 0);
;;;228    		/* Enable the SMP TIM global Interrupt */
;;;229    		HAL_NVIC_EnableIRQ(SMP_TIM_IRQn);
;;;230    	}else if(htim->Instance == USER_TIM){
00000c  4a1f              LDR      r2,|L6.140|
00000e  4290              CMP      r0,r2
000010  d123              BNE      |L6.90|
;;;231    		USER_TIM_CLK_ENABLE();
000012  6d88              LDR      r0,[r1,#0x58]
000014  f0400002          ORR      r0,r0,#2
000018  6588              STR      r0,[r1,#0x58]
00001a  6d88              LDR      r0,[r1,#0x58]
00001c  f0000002          AND      r0,r0,#2
000020  9000              STR      r0,[sp,#0]
;;;232    		/*##-7- Configure the NVIC for User TIM ########################################*/
;;;233    		/* Set Interrupt Group Priority */ 
;;;234    		HAL_NVIC_SetPriority(USER_TIM_IRQn, 7, 0);
000022  2200              MOVS     r2,#0
000024  2107              MOVS     r1,#7
000026  201d              MOVS     r0,#0x1d
000028  f7fffffe          BL       HAL_NVIC_SetPriority
;;;235    		/* Enable the User TIM global Interrupt */
;;;236    		HAL_NVIC_EnableIRQ(USER_TIM_IRQn);
00002c  e8bd4008          POP      {r3,lr}
000030  201d              MOVS     r0,#0x1d
000032  f7ffbffe          B.W      HAL_NVIC_EnableIRQ
                  |L6.54|
000036  6d88              LDR      r0,[r1,#0x58]         ;224
000038  f0400001          ORR      r0,r0,#1              ;224
00003c  6588              STR      r0,[r1,#0x58]         ;224
00003e  6d88              LDR      r0,[r1,#0x58]         ;224
000040  f0000001          AND      r0,r0,#1              ;224
000044  9000              STR      r0,[sp,#0]            ;224
000046  2200              MOVS     r2,#0                 ;227
000048  2107              MOVS     r1,#7                 ;227
00004a  201c              MOVS     r0,#0x1c              ;227
00004c  f7fffffe          BL       HAL_NVIC_SetPriority
000050  e8bd4008          POP      {r3,lr}               ;229
000054  201c              MOVS     r0,#0x1c              ;229
000056  f7ffbffe          B.W      HAL_NVIC_EnableIRQ
                  |L6.90|
;;;237    	}else if(htim->Instance == LED_TIM){
00005a  4a0d              LDR      r2,|L6.144|
00005c  4290              CMP      r0,r2
00005e  d111              BNE      |L6.132|
;;;238    		LED_TIM_CLK_ENABLE();
000060  6d88              LDR      r0,[r1,#0x58]
000062  f0400004          ORR      r0,r0,#4
000066  6588              STR      r0,[r1,#0x58]
000068  6d88              LDR      r0,[r1,#0x58]
00006a  f0000004          AND      r0,r0,#4
00006e  9000              STR      r0,[sp,#0]
;;;239    		/*##-7- Configure the NVIC for LED TIM ########################################*/
;;;240    		/* Set Interrupt Group Priority */ 
;;;241    		HAL_NVIC_SetPriority(LED_TIM_IRQn, 7, 0);
000070  2200              MOVS     r2,#0
000072  2107              MOVS     r1,#7
000074  201e              MOVS     r0,#0x1e
000076  f7fffffe          BL       HAL_NVIC_SetPriority
;;;242    		/* Enable the LED TIM global Interrupt */
;;;243    		HAL_NVIC_EnableIRQ(LED_TIM_IRQn);
00007a  e8bd4008          POP      {r3,lr}
00007e  201e              MOVS     r0,#0x1e
000080  f7ffbffe          B.W      HAL_NVIC_EnableIRQ
                  |L6.132|
;;;244    	}
;;;245    }
000084  bd08              POP      {r3,pc}
;;;246    
                          ENDP

000086  0000              DCW      0x0000
                  |L6.136|
                          DCD      0x40021000
                  |L6.140|
                          DCD      0x40000400
                  |L6.144|
                          DCD      0x40000800

;*** Start embedded assembler ***

#line 1 "..\\..\\..\\User\\stm32l4xx_hal_msp.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___19_stm32l4xx_hal_msp_c_d46e2bee____REV16|
#line 492 "../../../Drivers/CMSIS/Include/cmsis_armcc.h"
|__asm___19_stm32l4xx_hal_msp_c_d46e2bee____REV16| PROC
#line 493

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___19_stm32l4xx_hal_msp_c_d46e2bee____REVSH|
#line 507
|__asm___19_stm32l4xx_hal_msp_c_d46e2bee____REVSH| PROC
#line 508

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___19_stm32l4xx_hal_msp_c_d46e2bee____RRX|
#line 694
|__asm___19_stm32l4xx_hal_msp_c_d46e2bee____RRX| PROC
#line 695

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
