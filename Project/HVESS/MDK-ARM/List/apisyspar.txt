; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\obj\apisyspar.o --asm_dir=.\List\ --list_dir=.\List\ --depend=.\obj\apisyspar.d --cpu=Cortex-M4.fp.sp --apcs=interwork -O1 --diag_suppress=9931 -I../Inc -I../../../Drivers/CMSIS/Include -I../../../Drivers/CMSIS/Device/ST/STM32L4xx/Include -I../../../Drivers/STM32L4xx_HAL_Driver/Inc -I../../../Drivers/BSP/STM32L4xx_Nucleo_144 -I..\..\..\User -I..\..\..\HAL -I..\..\..\Lib -I..\..\..\Config_Common -I..\..\..\AppProtect -I..\..\..\APP -I..\..\..\Lib\SMP -I..\..\..\Drivers\SMP -I..\..\..\BSP -I..\..\..\Drivers\BSP\STM32L496V_Davinci -I..\..\..\API -I..\..\..\AppCommunication -I..\..\..\Drivers\W5500 -I..\..\..\RTT -I.\RTE\_HVESS_Normal -IC:\Users\88691\AppData\Local\Arm\Packs\ARM\CMSIS\5.8.0\CMSIS\Core\Include -IC:\Users\88691\AppData\Local\Arm\Packs\Keil\STM32L4xx_DFP\2.6.0\Drivers\CMSIS\Device\ST\STM32L4xx\Include -D__MICROLIB -D__UVISION_VERSION=535 -D_RTE_ -DSTM32L496xx -D_RTE_ -DSTM32L496xx -DUSE_HAL_DRIVER -DUSE_STM32L4XX_NUCLEO_144 -DBSPSMPS -DUSE_STM32L4XX_NUCLEO_144_SMPS -DUSE_ADP5301ACBZ -W ..\..\..\API\ApiSysPar.c]
                          THUMB

                          AREA ||i.apiCaliParGetChecksum||, CODE, READONLY, ALIGN=2

                  apiCaliParGetChecksum PROC
;;;1354   
;;;1355   uint32_t apiCaliParGetChecksum(void)
000000  4801              LDR      r0,|L1.8|
;;;1356   {
;;;1357   	return SysCalPar.RomPar.Checksum;
000002  68c0              LDR      r0,[r0,#0xc]  ; SysCalPar
;;;1358   }
000004  4770              BX       lr
;;;1359   
                          ENDP

000006  0000              DCW      0x0000
                  |L1.8|
                          DCD      ||.bss||+0x4c0

                          AREA ||i.apiCaliParGetCurrentValue||, CODE, READONLY, ALIGN=2

                  apiCaliParGetCurrentValue PROC
;;;1311   }
;;;1312   void apiCaliParGetCurrentValue(uint8_t CurrentIndex, uint8_t PointIndex,int32_t *Value, int32_t *Adc)
000000  b510              PUSH     {r4,lr}
;;;1313   {
;;;1314   	if(PointIndex == CALI_P1_INDEX)
;;;1315   	{
;;;1316   		*Value = SysCalPar.RomPar.Currentt[CurrentIndex].valL;
000002  4c08              LDR      r4,|L2.36|
000004  2900              CMP      r1,#0                 ;1314
000006  eb041000          ADD      r0,r4,r0,LSL #4
00000a  d006              BEQ      |L2.26|
;;;1317   		*Adc = SysCalPar.RomPar.Currentt[CurrentIndex].adcL;
;;;1318   	}
;;;1319   	else if(PointIndex == CALI_P2_INDEX)
00000c  2901              CMP      r1,#1
00000e  d103              BNE      |L2.24|
;;;1320   	{
;;;1321   		*Value = SysCalPar.RomPar.Currentt[CurrentIndex].valH;
000010  6941              LDR      r1,[r0,#0x14]
000012  6011              STR      r1,[r2,#0]
;;;1322   		*Adc = SysCalPar.RomPar.Currentt[CurrentIndex].adcH;
000014  69c0              LDR      r0,[r0,#0x1c]
000016  6018              STR      r0,[r3,#0]
                  |L2.24|
;;;1323   	}		
;;;1324   }
000018  bd10              POP      {r4,pc}
                  |L2.26|
00001a  6901              LDR      r1,[r0,#0x10]         ;1316
00001c  6011              STR      r1,[r2,#0]            ;1316
00001e  6980              LDR      r0,[r0,#0x18]         ;1317
000020  6018              STR      r0,[r3,#0]            ;1317
000022  bd10              POP      {r4,pc}
;;;1325   
                          ENDP

                  |L2.36|
                          DCD      ||.bss||+0x4c0

                          AREA ||i.apiCaliParGetVbatValue||, CODE, READONLY, ALIGN=2

                  apiCaliParGetVbatValue PROC
;;;1340   }
;;;1341   void apiCaliParGetVbatValue(uint8_t VbatIndex, uint8_t PointIndex,int32_t *Value, int32_t *Adc)
000000  b510              PUSH     {r4,lr}
;;;1342   {
;;;1343   	if(PointIndex == CALI_P1_INDEX)
;;;1344   	{
;;;1345   		*Value = SysCalPar.RomPar.VBat[VbatIndex].valL;
000002  4c08              LDR      r4,|L3.36|
000004  2900              CMP      r1,#0                 ;1343
000006  eb041000          ADD      r0,r4,r0,LSL #4
00000a  d006              BEQ      |L3.26|
;;;1346   		*Adc = SysCalPar.RomPar.VBat[VbatIndex].adcL;
;;;1347   	}
;;;1348   	else if(PointIndex == CALI_P2_INDEX)
00000c  2901              CMP      r1,#1
00000e  d103              BNE      |L3.24|
;;;1349   	{
;;;1350   		*Value = SysCalPar.RomPar.VBat[VbatIndex].valH;
000010  6b41              LDR      r1,[r0,#0x34]
000012  6011              STR      r1,[r2,#0]
;;;1351   		*Adc = SysCalPar.RomPar.VBat[VbatIndex].adcH;
000014  6bc0              LDR      r0,[r0,#0x3c]
000016  6018              STR      r0,[r3,#0]
                  |L3.24|
;;;1352   	}		
;;;1353   }
000018  bd10              POP      {r4,pc}
                  |L3.26|
00001a  6b01              LDR      r1,[r0,#0x30]         ;1345
00001c  6011              STR      r1,[r2,#0]            ;1345
00001e  6b80              LDR      r0,[r0,#0x38]         ;1346
000020  6018              STR      r0,[r3,#0]            ;1346
000022  bd10              POP      {r4,pc}
;;;1354   
                          ENDP

                  |L3.36|
                          DCD      ||.bss||+0x4c0

                          AREA ||i.apiCaliParSetCurrentValue||, CODE, READONLY, ALIGN=2

                  apiCaliParSetCurrentValue PROC
;;;1296   
;;;1297   void apiCaliParSetCurrentValue(uint8_t CurrentIndex, uint8_t PointIndex,int32_t Value, int32_t Adc)
000000  b510              PUSH     {r4,lr}
;;;1298   {
;;;1299   	if(PointIndex == CALI_P1_INDEX)
;;;1300   	{
;;;1301   		SysCalPar.RomPar.Currentt[CurrentIndex].valL = Value;
000002  4c09              LDR      r4,|L4.40|
000004  2900              CMP      r1,#0                 ;1299
000006  eb041000          ADD      r0,r4,r0,LSL #4
00000a  d009              BEQ      |L4.32|
;;;1302   		SysCalPar.RomPar.Currentt[CurrentIndex].adcL = Adc;
;;;1303   	}
;;;1304   	else if(PointIndex == CALI_P2_INDEX)
00000c  2901              CMP      r1,#1
00000e  d109              BNE      |L4.36|
;;;1305   	{
;;;1306   		SysCalPar.RomPar.Currentt[CurrentIndex].valH = Value;
000010  6142              STR      r2,[r0,#0x14]
;;;1307   		SysCalPar.RomPar.Currentt[CurrentIndex].adcH = Adc;
000012  61c3              STR      r3,[r0,#0x1c]
;;;1308   		setCalParRamValue();
000014  f7fffffe          BL       setCalParRamValue
;;;1309   		saveCalPar();
000018  e8bd4010          POP      {r4,lr}
00001c  f7ffbffe          B.W      saveCalPar
                  |L4.32|
000020  6102              STR      r2,[r0,#0x10]         ;1301
000022  6183              STR      r3,[r0,#0x18]         ;1302
                  |L4.36|
;;;1310   	}
;;;1311   }
000024  bd10              POP      {r4,pc}
;;;1312   void apiCaliParGetCurrentValue(uint8_t CurrentIndex, uint8_t PointIndex,int32_t *Value, int32_t *Adc)
                          ENDP

000026  0000              DCW      0x0000
                  |L4.40|
                          DCD      ||.bss||+0x4c0

                          AREA ||i.apiCaliParSetVbatValue||, CODE, READONLY, ALIGN=2

                  apiCaliParSetVbatValue PROC
;;;1325   
;;;1326   void apiCaliParSetVbatValue(uint8_t VbatIndex, uint8_t PointIndex, int32_t Value, int32_t Adc)
000000  b510              PUSH     {r4,lr}
;;;1327   {
;;;1328   	if(PointIndex == CALI_P1_INDEX)
;;;1329   	{
;;;1330   		SysCalPar.RomPar.VBat[VbatIndex].valL = Value;
000002  4c09              LDR      r4,|L5.40|
000004  2900              CMP      r1,#0                 ;1328
000006  eb041000          ADD      r0,r4,r0,LSL #4
00000a  d009              BEQ      |L5.32|
;;;1331   		SysCalPar.RomPar.VBat[VbatIndex].adcL = Adc;
;;;1332   	}
;;;1333   	else if(PointIndex == CALI_P2_INDEX)
00000c  2901              CMP      r1,#1
00000e  d109              BNE      |L5.36|
;;;1334   	{
;;;1335   		SysCalPar.RomPar.VBat[VbatIndex].valH = Value;
000010  6342              STR      r2,[r0,#0x34]
;;;1336   		SysCalPar.RomPar.VBat[VbatIndex].adcH = Adc;
000012  63c3              STR      r3,[r0,#0x3c]
;;;1337   		setCalParRamValue();
000014  f7fffffe          BL       setCalParRamValue
;;;1338   		saveCalPar();
000018  e8bd4010          POP      {r4,lr}
00001c  f7ffbffe          B.W      saveCalPar
                  |L5.32|
000020  6302              STR      r2,[r0,#0x30]         ;1330
000022  6383              STR      r3,[r0,#0x38]         ;1331
                  |L5.36|
;;;1339   	}
;;;1340   }
000024  bd10              POP      {r4,pc}
;;;1341   void apiCaliParGetVbatValue(uint8_t VbatIndex, uint8_t PointIndex,int32_t *Value, int32_t *Adc)
                          ENDP

000026  0000              DCW      0x0000
                  |L5.40|
                          DCD      ||.bss||+0x4c0

                          AREA ||i.apiSysParGet2ndOtProtectPar||, CODE, READONLY, ALIGN=2

                  apiSysParGet2ndOtProtectPar PROC
;;;1648   
;;;1649   void apiSysParGet2ndOtProtectPar(tScuProtectPar *pPar)
000000  4902              LDR      r1,|L6.12|
;;;1650   {
;;;1651   	pPar->SetValue.l = SystemParemater.RomPar.OtHwSetValue;
000002  f8b11224          LDRH     r1,[r1,#0x224]  ; SystemParemater
000006  6001              STR      r1,[r0,#0]
;;;1652   }
000008  4770              BX       lr
;;;1653   void apiSysParSet2ndOtProtectPar(tScuProtectPar *pPar)
                          ENDP

00000a  0000              DCW      0x0000
                  |L6.12|
                          DCD      ||.bss||+0x20

                          AREA ||i.apiSysParGet2ndUtProtectPar||, CODE, READONLY, ALIGN=2

                  apiSysParGet2ndUtProtectPar PROC
;;;1656   }
;;;1657   void apiSysParGet2ndUtProtectPar(tScuProtectPar *pPar)
000000  4902              LDR      r1,|L7.12|
;;;1658   {
;;;1659   	pPar->SetValue.l = SystemParemater.RomPar.UtHwSetValue;
000002  f8b11226          LDRH     r1,[r1,#0x226]  ; SystemParemater
000006  6001              STR      r1,[r0,#0]
;;;1660   }
000008  4770              BX       lr
;;;1661   void apiSysParSet2ndUtProtectPar(tScuProtectPar *pPar)
                          ENDP

00000a  0000              DCW      0x0000
                  |L7.12|
                          DCD      ||.bss||+0x20

                          AREA ||i.apiSysParGetAfeCommTime||, CODE, READONLY, ALIGN=2

                  apiSysParGetAfeCommTime PROC
;;;1487   
;;;1488   void apiSysParGetAfeCommTime(tScuProtectPar *pPar)
000000  4903              LDR      r1,|L8.16|
;;;1489   {
;;;1490   	pPar->SetValue.l = SystemParemater.RomPar.AfeComm.L1Time;
000002  f8912232          LDRB     r2,[r1,#0x232]  ; SystemParemater
000006  6002              STR      r2,[r0,#0]
;;;1491   	pPar->STime.l = SystemParemater.RomPar.AfeComm.L2Time;
000008  f8911233          LDRB     r1,[r1,#0x233]  ; SystemParemater
00000c  6041              STR      r1,[r0,#4]
;;;1492   }
00000e  4770              BX       lr
;;;1493   
                          ENDP

                  |L8.16|
                          DCD      ||.bss||+0x20

                          AREA ||i.apiSysParGetBalanceChg||, CODE, READONLY, ALIGN=2

                  apiSysParGetBalanceChg PROC
;;;1915   }
;;;1916   void apiSysParGetBalanceChg(tScuProtectPar *pPar)
000000  4904              LDR      r1,|L9.20|
;;;1917   {
;;;1918   	pPar->SetValue.l = SystemParemater.RomPar.Balance.ChgSet;
000002  880a              LDRH     r2,[r1,#0]  ; SystemParemater
000004  6002              STR      r2,[r0,#0]
;;;1919   	pPar->STime.l = SystemParemater.RomPar.Balance.ChgRelease;
000006  884a              LDRH     r2,[r1,#2]  ; SystemParemater
000008  6042              STR      r2,[r0,#4]
;;;1920   	pPar->RelValue.l = SystemParemater.RomPar.Balance.ChgDeltaSet;
00000a  888a              LDRH     r2,[r1,#4]  ; SystemParemater
00000c  6082              STR      r2,[r0,#8]
;;;1921   	pPar->RTime.l = SystemParemater.RomPar.Balance.ChgDeltaRelease;
00000e  88c9              LDRH     r1,[r1,#6]  ; SystemParemater
000010  60c1              STR      r1,[r0,#0xc]
;;;1922   }
000012  4770              BX       lr
;;;1923   void apiSysParSetBalanceChg(tScuProtectPar *pPar)
                          ENDP

                  |L9.20|
                          DCD      ||.bss||+0x406

                          AREA ||i.apiSysParGetBalanceDhg||, CODE, READONLY, ALIGN=2

                  apiSysParGetBalanceDhg PROC
;;;1931   
;;;1932   void apiSysParGetBalanceDhg(tScuProtectPar *pPar)
000000  4904              LDR      r1,|L10.20|
;;;1933   {
;;;1934   	pPar->SetValue.l = SystemParemater.RomPar.Balance.DhgSet;
000002  880a              LDRH     r2,[r1,#0]  ; SystemParemater
000004  6002              STR      r2,[r0,#0]
;;;1935   	pPar->STime.l = SystemParemater.RomPar.Balance.DhgRelease;
000006  884a              LDRH     r2,[r1,#2]  ; SystemParemater
000008  6042              STR      r2,[r0,#4]
;;;1936   	pPar->RelValue.l = SystemParemater.RomPar.Balance.DhgDeltaSet;
00000a  888a              LDRH     r2,[r1,#4]  ; SystemParemater
00000c  6082              STR      r2,[r0,#8]
;;;1937   	pPar->RTime.l = SystemParemater.RomPar.Balance.DhgDeltaRelease;
00000e  88c9              LDRH     r1,[r1,#6]  ; SystemParemater
000010  60c1              STR      r1,[r0,#0xc]
;;;1938   }
000012  4770              BX       lr
;;;1939   void apiSysParSetBalanceDhg(tScuProtectPar *pPar)
                          ENDP

                  |L10.20|
                          DCD      ||.bss||+0x40e

                          AREA ||i.apiSysParGetBalanceDuty||, CODE, READONLY, ALIGN=2

                  apiSysParGetBalanceDuty PROC
;;;1900   //------------------------------------------
;;;1901   void apiSysParGetBalanceDuty(tScuProtectPar *pPar)
000000  4904              LDR      r1,|L11.20|
;;;1902   {
;;;1903   	pPar->SetValue.l = SystemParemater.RomPar.Balance.DutySet;
000002  780a              LDRB     r2,[r1,#0]  ; SystemParemater
000004  6002              STR      r2,[r0,#0]
;;;1904   	pPar->STime.l = SystemParemater.RomPar.Balance.DutyRest;
000006  784a              LDRB     r2,[r1,#1]  ; SystemParemater
000008  6042              STR      r2,[r0,#4]
;;;1905   	pPar->RelValue.l = SystemParemater.RomPar.Balance.TempSet;
00000a  788a              LDRB     r2,[r1,#2]  ; SystemParemater
00000c  6082              STR      r2,[r0,#8]
;;;1906   	pPar->RTime.l = SystemParemater.RomPar.Balance.TempRelease;
00000e  78c9              LDRB     r1,[r1,#3]  ; SystemParemater
000010  60c1              STR      r1,[r0,#0xc]
;;;1907   }
000012  4770              BX       lr
;;;1908   void apiSysParSetBalanceDuty(tScuProtectPar *pPar)
                          ENDP

                  |L11.20|
                          DCD      ||.bss||+0x402

                          AREA ||i.apiSysParGetBalanceRlx||, CODE, READONLY, ALIGN=2

                  apiSysParGetBalanceRlx PROC
;;;1946   }
;;;1947   void apiSysParGetBalanceRlx(tScuProtectPar *pPar)
000000  4904              LDR      r1,|L12.20|
;;;1948   {
;;;1949   	pPar->SetValue.l = SystemParemater.RomPar.Balance.RlxSet;
000002  880a              LDRH     r2,[r1,#0]  ; SystemParemater
000004  6002              STR      r2,[r0,#0]
;;;1950   	pPar->STime.l = SystemParemater.RomPar.Balance.RlxRelease;
000006  884a              LDRH     r2,[r1,#2]  ; SystemParemater
000008  6042              STR      r2,[r0,#4]
;;;1951   	pPar->RelValue.l = SystemParemater.RomPar.Balance.RlxDeltaSet;
00000a  888a              LDRH     r2,[r1,#4]  ; SystemParemater
00000c  6082              STR      r2,[r0,#8]
;;;1952   	pPar->RTime.l = SystemParemater.RomPar.Balance.RlxDeltaRelease;
00000e  88c9              LDRH     r1,[r1,#6]  ; SystemParemater
000010  60c1              STR      r1,[r0,#0xc]
;;;1953   }
000012  4770              BX       lr
;;;1954   void apiSysParSetBalanceRlx(tScuProtectPar *pPar)
                          ENDP

                  |L12.20|
                          DCD      ||.bss||+0x416

                          AREA ||i.apiSysParGetBmuNumber||, CODE, READONLY, ALIGN=2

                  apiSysParGetBmuNumber PROC
;;;1379   
;;;1380   uint8_t apiSysParGetBmuNumber(void)
000000  4801              LDR      r0,|L13.8|
;;;1381   {
;;;1382   	return SystemParemater.RomPar.BmuNumber;	
000002  f8900220          LDRB     r0,[r0,#0x220]  ; SystemParemater
;;;1383   }
000006  4770              BX       lr
;;;1384   void apiSysParSetBmuNumber(uint8_t num)
                          ENDP

                  |L13.8|
                          DCD      ||.bss||+0x20

                          AREA ||i.apiSysParGetCellFlag||, CODE, READONLY, ALIGN=2

                  apiSysParGetCellFlag PROC
;;;1389   
;;;1390   uint32_t apiSysParGetCellFlag(uint8_t BmuIndex)
000000  4902              LDR      r1,|L14.12|
;;;1391   {
;;;1392   	return SystemParemater.RomPar.CellFlag[BmuIndex];	
000002  eb010080          ADD      r0,r1,r0,LSL #2
000006  6a00              LDR      r0,[r0,#0x20]
;;;1393   }
000008  4770              BX       lr
;;;1394   void apiSysParSetCellFlag(uint8_t BmuIndex,uint32_t CellFlag)
                          ENDP

00000a  0000              DCW      0x0000
                  |L14.12|
                          DCD      ||.bss||+0x20

                          AREA ||i.apiSysParGetCellNumber||, CODE, READONLY, ALIGN=2

                  apiSysParGetCellNumber PROC
;;;1535   
;;;1536   uint16_t apiSysParGetCellNumber(void)
000000  4801              LDR      r0,|L15.8|
;;;1537   {
;;;1538   	return SystemParemater.RamPar.CellNumber;
000002  f8b00468          LDRH     r0,[r0,#0x468]  ; SystemParemater
;;;1539   }
000006  4770              BX       lr
;;;1540   
                          ENDP

                  |L15.8|
                          DCD      ||.bss||+0x20

                          AREA ||i.apiSysParGetChecksum||, CODE, READONLY, ALIGN=2

                  apiSysParGetChecksum PROC
;;;1984   }
;;;1985   uint32_t apiSysParGetChecksum(void)
000000  4801              LDR      r0,|L16.8|
;;;1986   {
;;;1987   	return SystemParemater.RomPar.Checksum;
000002  68c0              LDR      r0,[r0,#0xc]  ; SystemParemater
;;;1988   }
000004  4770              BX       lr
;;;1989   //----------------------------------------------------------------
                          ENDP

000006  0000              DCW      0x0000
                  |L16.8|
                          DCD      ||.bss||+0x20

                          AREA ||i.apiSysParGetCocpPar||, CODE, READONLY, ALIGN=2

                  apiSysParGetCocpPar PROC
;;;1853   //Cocp
;;;1854   void apiSysParGetCocpPar(uint8_t level, tScuProtectPar *pPar)
000000  2803              CMP      r0,#3
;;;1855   {
000002  d20c              BCS      |L17.30|
;;;1856   	if(level >= 3)
;;;1857   		return;
;;;1858   	pPar->SetValue.l = SystemParemater.RomPar.Cocp[level].SetValue;
000004  4a06              LDR      r2,|L17.32|
000006  eb0200c0          ADD      r0,r2,r0,LSL #3
00000a  f20020e2          ADD      r0,r0,#0x2e2
00000e  8802              LDRH     r2,[r0,#0]
000010  600a              STR      r2,[r1,#0]
;;;1859   	pPar->STime.l = SystemParemater.RomPar.Cocp[level].SetTime; 
000012  7882              LDRB     r2,[r0,#2]
000014  604a              STR      r2,[r1,#4]
;;;1860   	pPar->RelValue.l = SystemParemater.RomPar.Cocp[level].ReleaseValue;
000016  8882              LDRH     r2,[r0,#4]
000018  608a              STR      r2,[r1,#8]
;;;1861   	pPar->RTime.l = SystemParemater.RomPar.Cocp[level].ReleaseTime;
00001a  7980              LDRB     r0,[r0,#6]
00001c  60c8              STR      r0,[r1,#0xc]
                  |L17.30|
;;;1862   
;;;1863   }
00001e  4770              BX       lr
;;;1864   void apiSysParSetCocpPar(uint8_t level, tScuProtectPar *pPar)
                          ENDP

                  |L17.32|
                          DCD      ||.bss||+0x20

                          AREA ||i.apiSysParGetCotpPar||, CODE, READONLY, ALIGN=2

                  apiSysParGetCotpPar PROC
;;;1759   
;;;1760   void apiSysParGetCotpPar(uint8_t level, tScuProtectPar *pPar)
000000  4a0a              LDR      r2,|L18.44|
;;;1761   {
;;;1762   	if(level >= 3)
000002  2803              CMP      r0,#3
000004  d305              BCC      |L18.18|
;;;1763   	{
;;;1764   		if(level == 0x10)
000006  2810              CMP      r0,#0x10
000008  d102              BNE      |L18.16|
;;;1765   			 pPar->SetValue.l = SystemParemater.RomPar.OtHwSetValue;
00000a  f8b20224          LDRH     r0,[r2,#0x224]  ; SystemParemater
00000e  6008              STR      r0,[r1,#0]
                  |L18.16|
;;;1766   		return;
;;;1767   	}
;;;1768   	pPar->SetValue.l = SystemParemater.RomPar.Cotp[level].SetValue;
;;;1769   	pPar->STime.l = SystemParemater.RomPar.Cotp[level].SetTime; 
;;;1770   	pPar->RelValue.l = SystemParemater.RomPar.Cotp[level].ReleaseValue;
;;;1771   	pPar->RTime.l = SystemParemater.RomPar.Cotp[level].ReleaseTime;
;;;1772   }
000010  4770              BX       lr
                  |L18.18|
000012  eb0200c0          ADD      r0,r2,r0,LSL #3       ;1768
000016  f200206a          ADD      r0,r0,#0x26a          ;1768
00001a  8802              LDRH     r2,[r0,#0]            ;1768
00001c  600a              STR      r2,[r1,#0]            ;1768
00001e  7882              LDRB     r2,[r0,#2]            ;1769
000020  604a              STR      r2,[r1,#4]            ;1769
000022  8882              LDRH     r2,[r0,#4]            ;1770
000024  608a              STR      r2,[r1,#8]            ;1770
000026  7980              LDRB     r0,[r0,#6]            ;1771
000028  60c8              STR      r0,[r1,#0xc]          ;1771
00002a  4770              BX       lr
;;;1773   void apiSysParSetCotpPar(uint8_t level, tScuProtectPar *pPar)
                          ENDP

                  |L18.44|
                          DCD      ||.bss||+0x20

                          AREA ||i.apiSysParGetCotpProtectPar||, CODE, READONLY, ALIGN=2

                  apiSysParGetCotpProtectPar PROC
;;;1749   //	Cotp
;;;1750   void apiSysParGetCotpProtectPar(uint8_t level, tScuProtectPar *pPar)
000000  b510              PUSH     {r4,lr}
;;;1751   {
;;;1752   	if(level >= 3)
000002  2803              CMP      r0,#3
000004  d210              BCS      |L19.40|
;;;1753   		return;
;;;1754   	pPar->SetValue.l = SystemParemater.RamPar.Cotp[level].SetAdcValue;
000006  4b09              LDR      r3,|L19.44|
000008  eb030280          ADD      r2,r3,r0,LSL #2
00000c  f8b2446c          LDRH     r4,[r2,#0x46c]
000010  600c              STR      r4,[r1,#0]
;;;1755   	pPar->STime.l = SystemParemater.RomPar.Cotp[level].SetTime; 
000012  eb0300c0          ADD      r0,r3,r0,LSL #3
000016  f890326c          LDRB     r3,[r0,#0x26c]
00001a  604b              STR      r3,[r1,#4]
;;;1756   	pPar->RelValue.l = SystemParemater.RamPar.Cotp[level].ReleaseAdcValue;
00001c  f8b2246e          LDRH     r2,[r2,#0x46e]
000020  608a              STR      r2,[r1,#8]
;;;1757   	pPar->RTime.l = SystemParemater.RomPar.Cotp[level].ReleaseTime;
000022  f8900270          LDRB     r0,[r0,#0x270]
000026  60c8              STR      r0,[r1,#0xc]
                  |L19.40|
;;;1758   }
000028  bd10              POP      {r4,pc}
;;;1759   
                          ENDP

00002a  0000              DCW      0x0000
                  |L19.44|
                          DCD      ||.bss||+0x20

                          AREA ||i.apiSysParGetCutpPar||, CODE, READONLY, ALIGN=2

                  apiSysParGetCutpPar PROC
;;;1800   }
;;;1801   void apiSysParGetCutpPar(uint8_t level, tScuProtectPar *pPar)
000000  4a0a              LDR      r2,|L20.44|
;;;1802   {
;;;1803   	if(level >= 3)
000002  2803              CMP      r0,#3
000004  d305              BCC      |L20.18|
;;;1804   	{
;;;1805   		if(level == 0x10)
000006  2810              CMP      r0,#0x10
000008  d102              BNE      |L20.16|
;;;1806   			pPar->SetValue.l = SystemParemater.RomPar.UtHwSetValue;
00000a  f8b20226          LDRH     r0,[r2,#0x226]  ; SystemParemater
00000e  6008              STR      r0,[r1,#0]
                  |L20.16|
;;;1807   		return;
;;;1808   	}
;;;1809   	pPar->SetValue.l = SystemParemater.RomPar.Cutp[level].SetValue;
;;;1810   	pPar->STime.l = SystemParemater.RomPar.Cutp[level].SetTime; 
;;;1811   	pPar->RelValue.l = SystemParemater.RomPar.Cutp[level].ReleaseValue;
;;;1812   	pPar->RTime.l = SystemParemater.RomPar.Cutp[level].ReleaseTime;
;;;1813   }
000010  4770              BX       lr
                  |L20.18|
000012  eb0200c0          ADD      r0,r2,r0,LSL #3       ;1809
000016  f2002082          ADD      r0,r0,#0x282          ;1809
00001a  8802              LDRH     r2,[r0,#0]            ;1809
00001c  600a              STR      r2,[r1,#0]            ;1809
00001e  7882              LDRB     r2,[r0,#2]            ;1810
000020  604a              STR      r2,[r1,#4]            ;1810
000022  8882              LDRH     r2,[r0,#4]            ;1811
000024  608a              STR      r2,[r1,#8]            ;1811
000026  7980              LDRB     r0,[r0,#6]            ;1812
000028  60c8              STR      r0,[r1,#0xc]          ;1812
00002a  4770              BX       lr
;;;1814   void apiSysParSetCutpPar(uint8_t level, tScuProtectPar *pPar)
                          ENDP

                  |L20.44|
                          DCD      ||.bss||+0x20

                          AREA ||i.apiSysParGetCutpProtectPar||, CODE, READONLY, ALIGN=2

                  apiSysParGetCutpProtectPar PROC
;;;1789   //	Cutp
;;;1790   void apiSysParGetCutpProtectPar(uint8_t level, tScuProtectPar *pPar)
000000  b510              PUSH     {r4,lr}
;;;1791   {
;;;1792   	if(level >= 3)
000002  2803              CMP      r0,#3
000004  d210              BCS      |L21.40|
;;;1793   	{
;;;1794   		return;
;;;1795   	}
;;;1796   	pPar->SetValue.l = SystemParemater.RamPar.Cutp[level].SetAdcValue;
000006  4b09              LDR      r3,|L21.44|
000008  eb030280          ADD      r2,r3,r0,LSL #2
00000c  f8b24478          LDRH     r4,[r2,#0x478]
000010  600c              STR      r4,[r1,#0]
;;;1797   	pPar->STime.l = SystemParemater.RomPar.Cutp[level].SetTime; 
000012  eb0300c0          ADD      r0,r3,r0,LSL #3
000016  f8903284          LDRB     r3,[r0,#0x284]
00001a  604b              STR      r3,[r1,#4]
;;;1798   	pPar->RelValue.l = SystemParemater.RamPar.Cutp[level].ReleaseAdcValue;
00001c  f8b2247a          LDRH     r2,[r2,#0x47a]
000020  608a              STR      r2,[r1,#8]
;;;1799   	pPar->RTime.l = SystemParemater.RomPar.Cutp[level].ReleaseTime;
000022  f8900288          LDRB     r0,[r0,#0x288]
000026  60c8              STR      r0,[r1,#0xc]
                  |L21.40|
;;;1800   }
000028  bd10              POP      {r4,pc}
;;;1801   void apiSysParGetCutpPar(uint8_t level, tScuProtectPar *pPar)
                          ENDP

00002a  0000              DCW      0x0000
                  |L21.44|
                          DCD      ||.bss||+0x20

                          AREA ||i.apiSysParGetCycleCount||, CODE, READONLY, ALIGN=2

                  apiSysParGetCycleCount PROC
;;;1262   }
;;;1263   uint16_t apiSysParGetCycleCount(void)
000000  4801              LDR      r0,|L22.8|
;;;1264   {
;;;1265   	return mBatteryInfo.CycleCount;
000002  8ac0              LDRH     r0,[r0,#0x16]  ; mBatteryInfo
;;;1266   }
000004  4770              BX       lr
;;;1267   
                          ENDP

000006  0000              DCW      0x0000
                  |L22.8|
                          DCD      ||.bss||

                          AREA ||i.apiSysParGetDesignedCapacity||, CODE, READONLY, ALIGN=2

                  apiSysParGetDesignedCapacity PROC
;;;1431   
;;;1432   uint32_t apiSysParGetDesignedCapacity(void)
000000  4801              LDR      r0,|L23.8|
;;;1433   {
;;;1434   	return SystemParemater.RomPar.DesignedCapacity;
000002  6940              LDR      r0,[r0,#0x14]  ; SystemParemater
;;;1435   }
000004  4770              BX       lr
;;;1436   
                          ENDP

000006  0000              DCW      0x0000
                  |L23.8|
                          DCD      ||.bss||+0x20

                          AREA ||i.apiSysParGetDocpPar||, CODE, READONLY, ALIGN=2

                  apiSysParGetDocpPar PROC
;;;1830   //	Docp
;;;1831   void apiSysParGetDocpPar(uint8_t level, tScuProtectPar *pPar)
000000  2803              CMP      r0,#3
;;;1832   {
000002  d20c              BCS      |L24.30|
;;;1833   	if(level >= 3)
;;;1834   		return;
;;;1835   	pPar->SetValue.l = SystemParemater.RomPar.Docp[level].SetValue;
000004  4a06              LDR      r2,|L24.32|
000006  eb0200c0          ADD      r0,r2,r0,LSL #3
00000a  f20020fa          ADD      r0,r0,#0x2fa
00000e  8802              LDRH     r2,[r0,#0]
000010  600a              STR      r2,[r1,#0]
;;;1836   	pPar->STime.l = SystemParemater.RomPar.Docp[level].SetTime; 
000012  7882              LDRB     r2,[r0,#2]
000014  604a              STR      r2,[r1,#4]
;;;1837   	pPar->RelValue.l = SystemParemater.RomPar.Docp[level].ReleaseValue;
000016  8882              LDRH     r2,[r0,#4]
000018  608a              STR      r2,[r1,#8]
;;;1838   	pPar->RTime.l = SystemParemater.RomPar.Docp[level].ReleaseTime;
00001a  7980              LDRB     r0,[r0,#6]
00001c  60c8              STR      r0,[r1,#0xc]
                  |L24.30|
;;;1839   
;;;1840   }
00001e  4770              BX       lr
;;;1841   void apiSysParSetDocpPar(uint8_t level, tScuProtectPar *pPar)
                          ENDP

                  |L24.32|
                          DCD      ||.bss||+0x20

                          AREA ||i.apiSysParGetDotpPar||, CODE, READONLY, ALIGN=2

                  apiSysParGetDotpPar PROC
;;;1678   
;;;1679   void apiSysParGetDotpPar(uint8_t level, tScuProtectPar *pPar)
000000  2803              CMP      r0,#3
;;;1680   {
000002  d20c              BCS      |L25.30|
;;;1681   	if(level >= 3)
;;;1682   		return;
;;;1683   	pPar->SetValue.l = SystemParemater.RomPar.Dotp[level].SetValue;
000004  4a06              LDR      r2,|L25.32|
000006  eb0200c0          ADD      r0,r2,r0,LSL #3
00000a  f200209a          ADD      r0,r0,#0x29a
00000e  8802              LDRH     r2,[r0,#0]
000010  600a              STR      r2,[r1,#0]
;;;1684   	pPar->STime.l = SystemParemater.RomPar.Dotp[level].SetTime; 
000012  7882              LDRB     r2,[r0,#2]
000014  604a              STR      r2,[r1,#4]
;;;1685   	pPar->RelValue.l = SystemParemater.RomPar.Dotp[level].ReleaseValue;
000016  8882              LDRH     r2,[r0,#4]
000018  608a              STR      r2,[r1,#8]
;;;1686   	pPar->RTime.l = SystemParemater.RomPar.Dotp[level].ReleaseTime;
00001a  7980              LDRB     r0,[r0,#6]
00001c  60c8              STR      r0,[r1,#0xc]
                  |L25.30|
;;;1687   }
00001e  4770              BX       lr
;;;1688   void apiSysParSetDotpPar(uint8_t level, tScuProtectPar *pPar)
                          ENDP

                  |L25.32|
                          DCD      ||.bss||+0x20

                          AREA ||i.apiSysParGetDotpProtectPar||, CODE, READONLY, ALIGN=2

                  apiSysParGetDotpProtectPar PROC
;;;1667   //	Dotp
;;;1668   void apiSysParGetDotpProtectPar(uint8_t level, tScuProtectPar *pPar)
000000  b510              PUSH     {r4,lr}
;;;1669   {
;;;1670   	if(level >= 3)
000002  2803              CMP      r0,#3
000004  d210              BCS      |L26.40|
;;;1671   		return;
;;;1672   	pPar->SetValue.l = SystemParemater.RamPar.Dotp[level].SetAdcValue;
000006  4b09              LDR      r3,|L26.44|
000008  eb030280          ADD      r2,r3,r0,LSL #2
00000c  f8b24484          LDRH     r4,[r2,#0x484]
000010  600c              STR      r4,[r1,#0]
;;;1673   	pPar->STime.l = SystemParemater.RomPar.Dotp[level].SetTime; 
000012  eb0300c0          ADD      r0,r3,r0,LSL #3
000016  f890329c          LDRB     r3,[r0,#0x29c]
00001a  604b              STR      r3,[r1,#4]
;;;1674   	pPar->RelValue.l = SystemParemater.RamPar.Dotp[level].ReleaseAdcValue;
00001c  f8b22486          LDRH     r2,[r2,#0x486]
000020  608a              STR      r2,[r1,#8]
;;;1675   	pPar->RTime.l = SystemParemater.RomPar.Dotp[level].ReleaseTime;
000022  f89002a0          LDRB     r0,[r0,#0x2a0]
000026  60c8              STR      r0,[r1,#0xc]
                  |L26.40|
;;;1676   }
000028  bd10              POP      {r4,pc}
;;;1677   
                          ENDP

00002a  0000              DCW      0x0000
                  |L26.44|
                          DCD      ||.bss||+0x20

                          AREA ||i.apiSysParGetDtpPar||, CODE, READONLY, ALIGN=2

                  apiSysParGetDtpPar PROC
;;;1728   //----------- DTP ---------------------------
;;;1729   void apiSysParGetDtpPar(uint8_t level, tScuProtectPar *pPar)
000000  2803              CMP      r0,#3
;;;1730   {
000002  d20c              BCS      |L27.30|
;;;1731   	if(level >= 3)
;;;1732   		return;
;;;1733   	pPar->SetValue.l = SystemParemater.RomPar.Dtp[level].SetValue;
000004  4a06              LDR      r2,|L27.32|
000006  eb0200c0          ADD      r0,r2,r0,LSL #3
00000a  f20020ca          ADD      r0,r0,#0x2ca
00000e  8802              LDRH     r2,[r0,#0]
000010  600a              STR      r2,[r1,#0]
;;;1734   	pPar->STime.l = SystemParemater.RomPar.Dtp[level].SetTime; 
000012  7882              LDRB     r2,[r0,#2]
000014  604a              STR      r2,[r1,#4]
;;;1735   	pPar->RelValue.l = SystemParemater.RomPar.Dtp[level].ReleaseValue;
000016  8882              LDRH     r2,[r0,#4]
000018  608a              STR      r2,[r1,#8]
;;;1736   	pPar->RTime.l = SystemParemater.RomPar.Dtp[level].ReleaseTime;
00001a  7980              LDRB     r0,[r0,#6]
00001c  60c8              STR      r0,[r1,#0xc]
                  |L27.30|
;;;1737   }
00001e  4770              BX       lr
;;;1738   void apiSysParSetDtpPar(uint8_t level, tScuProtectPar *pPar)
                          ENDP

                  |L27.32|
                          DCD      ||.bss||+0x20

                          AREA ||i.apiSysParGetDutpPar||, CODE, READONLY, ALIGN=2

                  apiSysParGetDutpPar PROC
;;;1708   
;;;1709   void apiSysParGetDutpPar(uint8_t level, tScuProtectPar *pPar)
000000  2803              CMP      r0,#3
;;;1710   {
000002  d20c              BCS      |L28.30|
;;;1711   	if(level >= 3)
;;;1712   		return;
;;;1713   	pPar->SetValue.l = SystemParemater.RomPar.Dutp[level].SetValue;
000004  4a06              LDR      r2,|L28.32|
000006  eb0200c0          ADD      r0,r2,r0,LSL #3
00000a  f20020b2          ADD      r0,r0,#0x2b2
00000e  8802              LDRH     r2,[r0,#0]
000010  600a              STR      r2,[r1,#0]
;;;1714   	pPar->STime.l = SystemParemater.RomPar.Dutp[level].SetTime; 
000012  7882              LDRB     r2,[r0,#2]
000014  604a              STR      r2,[r1,#4]
;;;1715   	pPar->RelValue.l = SystemParemater.RomPar.Dutp[level].ReleaseValue;
000016  8882              LDRH     r2,[r0,#4]
000018  608a              STR      r2,[r1,#8]
;;;1716   	pPar->RTime.l = SystemParemater.RomPar.Dutp[level].ReleaseTime;
00001a  7980              LDRB     r0,[r0,#6]
00001c  60c8              STR      r0,[r1,#0xc]
                  |L28.30|
;;;1717   }
00001e  4770              BX       lr
;;;1718   void apiSysParSetDutpPar(uint8_t level, tScuProtectPar *pPar)
                          ENDP

                  |L28.32|
                          DCD      ||.bss||+0x20

                          AREA ||i.apiSysParGetDutpProtectPar||, CODE, READONLY, ALIGN=2

                  apiSysParGetDutpProtectPar PROC
;;;1698   //----------- DUTP ---------------------------
;;;1699   void apiSysParGetDutpProtectPar(uint8_t level, tScuProtectPar *pPar)
000000  b510              PUSH     {r4,lr}
;;;1700   {
;;;1701   	if(level >= 3)
000002  2803              CMP      r0,#3
000004  d210              BCS      |L29.40|
;;;1702   		return;
;;;1703   	pPar->SetValue.l = SystemParemater.RamPar.Dutp[level].SetAdcValue;
000006  4b09              LDR      r3,|L29.44|
000008  eb030280          ADD      r2,r3,r0,LSL #2
00000c  f8b24490          LDRH     r4,[r2,#0x490]
000010  600c              STR      r4,[r1,#0]
;;;1704   	pPar->STime.l = SystemParemater.RomPar.Dutp[level].SetTime; 
000012  eb0300c0          ADD      r0,r3,r0,LSL #3
000016  f89032b4          LDRB     r3,[r0,#0x2b4]
00001a  604b              STR      r3,[r1,#4]
;;;1705   	pPar->RelValue.l = SystemParemater.RamPar.Dutp[level].ReleaseAdcValue;
00001c  f8b22492          LDRH     r2,[r2,#0x492]
000020  608a              STR      r2,[r1,#8]
;;;1706   	pPar->RTime.l = SystemParemater.RomPar.Dutp[level].ReleaseTime;
000022  f89002b8          LDRB     r0,[r0,#0x2b8]
000026  60c8              STR      r0,[r1,#0xc]
                  |L29.40|
;;;1707   }
000028  bd10              POP      {r4,pc}
;;;1708   
                          ENDP

00002a  0000              DCW      0x0000
                  |L29.44|
                          DCD      ||.bss||+0x20

                          AREA ||i.apiSysParGetFlatVoltage||, CODE, READONLY, ALIGN=2

                  apiSysParGetFlatVoltage PROC
;;;1451   }
;;;1452   void apiSysParGetFlatVoltage(tScuProtectPar *pPar)
000000  4902              LDR      r1,|L30.12|
;;;1453   {
;;;1454   	pPar->SetValue.l = SystemParemater.RomPar.MinFlatVoltage;
000002  8b8a              LDRH     r2,[r1,#0x1c]  ; SystemParemater
000004  6002              STR      r2,[r0,#0]
;;;1455   	pPar->STime.l = SystemParemater.RomPar.MaxFlatVoltage;
000006  8bc9              LDRH     r1,[r1,#0x1e]  ; SystemParemater
000008  6041              STR      r1,[r0,#4]
;;;1456   }
00000a  4770              BX       lr
;;;1457   
                          ENDP

                  |L30.12|
                          DCD      ||.bss||+0x20

                          AREA ||i.apiSysParGetFullChargeCondition||, CODE, READONLY, ALIGN=2

                  apiSysParGetFullChargeCondition PROC
;;;1464   
;;;1465   void apiSysParGetFullChargeCondition(tScuProtectPar *pPar)
000000  4903              LDR      r1,|L31.16|
;;;1466   {
;;;1467   	pPar->SetValue.l = SystemParemater.RomPar.FullCharge.Current;
000002  880a              LDRH     r2,[r1,#0]  ; SystemParemater
000004  6002              STR      r2,[r0,#0]
;;;1468   	pPar->STime.l = SystemParemater.RomPar.FullCharge.Voltage;
000006  884a              LDRH     r2,[r1,#2]  ; SystemParemater
000008  6042              STR      r2,[r0,#4]
;;;1469   	pPar->RelValue.l = SystemParemater.RomPar.FullCharge.Time;
00000a  7909              LDRB     r1,[r1,#4]  ; SystemParemater
00000c  6081              STR      r1,[r0,#8]
;;;1470   }
00000e  4770              BX       lr
;;;1471   void apiSysParSetFullChargeCondition(tScuProtectPar *pPar)
                          ENDP

                  |L31.16|
                          DCD      ||.bss||+0x254

                          AREA ||i.apiSysParGetFwVersion||, CODE, READONLY, ALIGN=1

                  apiSysParGetFwVersion PROC
;;;1373   }
;;;1374   uint32_t apiSysParGetFwVersion(void)
000000  2000              MOVS     r0,#0
;;;1375   {
;;;1376   	//SystemParemater.FwVersion = 0x010203;
;;;1377   	return 0;//SystemParemater.FwVersion;
;;;1378   }
000002  4770              BX       lr
;;;1379   
                          ENDP


                          AREA ||i.apiSysParGetHwVersion||, CODE, READONLY, ALIGN=2

                  apiSysParGetHwVersion PROC
;;;1364   
;;;1365   uint32_t apiSysParGetHwVersion(void)
000000  4801              LDR      r0,|L33.8|
;;;1366   {
;;;1367   	return SystemParemater.RomPar.HwVersion;
000002  6900              LDR      r0,[r0,#0x10]  ; SystemParemater
;;;1368   }
000004  4770              BX       lr
;;;1369   void apiSysParSetHwVersion(uint32_t version)
                          ENDP

000006  0000              DCW      0x0000
                  |L33.8|
                          DCD      ||.bss||+0x20

                          AREA ||i.apiSysParGetInsulationResistance||, CODE, READONLY, ALIGN=2

                  apiSysParGetInsulationResistance PROC
;;;1500   
;;;1501   void apiSysParGetInsulationResistance(tScuProtectPar *pPar)
000000  4903              LDR      r1,|L34.16|
;;;1502   {
;;;1503   	pPar->SetValue.l = SystemParemater.RomPar.InsulationResistance.ReadInterval;
000002  f8912230          LDRB     r2,[r1,#0x230]  ; SystemParemater
000006  6002              STR      r2,[r0,#0]
;;;1504   	pPar->STime.l = SystemParemater.RomPar.InsulationResistance.SwDelay;
000008  f8911231          LDRB     r1,[r1,#0x231]  ; SystemParemater
00000c  6041              STR      r1,[r0,#4]
;;;1505   }
00000e  4770              BX       lr
;;;1506   
                          ENDP

                  |L34.16|
                          DCD      ||.bss||+0x20

                          AREA ||i.apiSysParGetMaxFlatVoltage||, CODE, READONLY, ALIGN=2

                  apiSysParGetMaxFlatVoltage PROC
;;;1447   
;;;1448   uint16_t apiSysParGetMaxFlatVoltage(void)
000000  4801              LDR      r0,|L35.8|
;;;1449   {
;;;1450   	return SystemParemater.RomPar.MaxFlatVoltage;
000002  8bc0              LDRH     r0,[r0,#0x1e]  ; SystemParemater
;;;1451   }
000004  4770              BX       lr
;;;1452   void apiSysParGetFlatVoltage(tScuProtectPar *pPar)
                          ENDP

000006  0000              DCW      0x0000
                  |L35.8|
                          DCD      ||.bss||+0x20

                          AREA ||i.apiSysParGetMinChargeCurrentValue||, CODE, READONLY, ALIGN=2

                  apiSysParGetMinChargeCurrentValue PROC
;;;1420   
;;;1421   uint16_t apiSysParGetMinChargeCurrentValue(void)
000000  4801              LDR      r0,|L36.8|
;;;1422   {
;;;1423   	return SystemParemater.RomPar.MinChargeDischargeCurrent;	
000002  8b40              LDRH     r0,[r0,#0x1a]  ; SystemParemater
;;;1424   }
000004  4770              BX       lr
;;;1425   
                          ENDP

000006  0000              DCW      0x0000
                  |L36.8|
                          DCD      ||.bss||+0x20

                          AREA ||i.apiSysParGetMinFlatVoltage||, CODE, READONLY, ALIGN=2

                  apiSysParGetMinFlatVoltage PROC
;;;1442   
;;;1443   uint16_t apiSysParGetMinFlatVoltage(void)
000000  4801              LDR      r0,|L37.8|
;;;1444   {
;;;1445   	return SystemParemater.RomPar.MinFlatVoltage;
000002  8b80              LDRH     r0,[r0,#0x1c]  ; SystemParemater
;;;1446   }
000004  4770              BX       lr
;;;1447   
                          ENDP

000006  0000              DCW      0x0000
                  |L37.8|
                          DCD      ||.bss||+0x20

                          AREA ||i.apiSysParGetNotwMessageString||, CODE, READONLY, ALIGN=2

                  apiSysParGetNotwMessageString PROC
;;;1963   //	Note Message
;;;1964   void apiSysParGetNotwMessageString(uint8_t *pMsg)
000000  2100              MOVS     r1,#0
;;;1965   {
;;;1966   	uint8_t	i;
;;;1967   	for(i=0; i<MAX_NOTE_MESSAGE_STRING_ITEM; i++)
;;;1968   	{
;;;1969   		pMsg[i] = SystemParemater.RomPar.NoteMessage[i];
000002  4b06              LDR      r3,|L38.28|
                  |L38.4|
000004  185a              ADDS     r2,r3,r1
000006  f89223fe          LDRB     r2,[r2,#0x3fe]
00000a  5442              STRB     r2,[r0,r1]
;;;1970   		if(pMsg[i] == 0)
00000c  2a00              CMP      r2,#0
00000e  d003              BEQ      |L38.24|
000010  1c49              ADDS     r1,r1,#1              ;1967
000012  b2c9              UXTB     r1,r1                 ;1967
000014  2964              CMP      r1,#0x64              ;1967
000016  d3f5              BCC      |L38.4|
                  |L38.24|
;;;1971   			break;
;;;1972   	}
;;;1973   }
000018  4770              BX       lr
;;;1974   void apiSysParSetNotwMessageString(uint8_t *pMsg)
                          ENDP

00001a  0000              DCW      0x0000
                  |L38.28|
                          DCD      ||.bss||+0x20

                          AREA ||i.apiSysParGetNtcFlag||, CODE, READONLY, ALIGN=2

                  apiSysParGetNtcFlag PROC
;;;1399   
;;;1400   uint32_t apiSysParGetNtcFlag(uint8_t BmuIndex)
000000  4902              LDR      r1,|L39.12|
;;;1401   {
;;;1402   	return SystemParemater.RomPar.NtcFlag[BmuIndex];	
000002  eb010080          ADD      r0,r1,r0,LSL #2
000006  f8d00120          LDR      r0,[r0,#0x120]
;;;1403   }
00000a  4770              BX       lr
;;;1404   
                          ENDP

                  |L39.12|
                          DCD      ||.bss||+0x20

                          AREA ||i.apiSysParGetNtcNumber||, CODE, READONLY, ALIGN=2

                  apiSysParGetNtcNumber PROC
;;;1540   
;;;1541   uint16_t apiSysParGetNtcNumber(void)
000000  4801              LDR      r0,|L40.8|
;;;1542   {
;;;1543   	return SystemParemater.RamPar.NtcNumber;
000002  f8b0046a          LDRH     r0,[r0,#0x46a]  ; SystemParemater
;;;1544   }
000006  4770              BX       lr
;;;1545   //---------------------------------------
                          ENDP

                  |L40.8|
                          DCD      ||.bss||+0x20

                          AREA ||i.apiSysParGetOcvTable||, CODE, READONLY, ALIGN=2

                  apiSysParGetOcvTable PROC
;;;1545   //---------------------------------------
;;;1546   void apiSysParGetOcvTable(uint8_t index ,tOcvRaTable *pOcvTable)
000000  4a04              LDR      r2,|L41.20|
;;;1547   {
;;;1548   	pOcvTable->Level =  SystemParemater.RomPar.OcvTable[index].Level;
000002  eb020080          ADD      r0,r2,r0,LSL #2
000006  f8902312          LDRB     r2,[r0,#0x312]
00000a  700a              STRB     r2,[r1,#0]
;;;1549   	pOcvTable->Value =  SystemParemater.RomPar.OcvTable[index].Value;
00000c  f8b00314          LDRH     r0,[r0,#0x314]
000010  8048              STRH     r0,[r1,#2]
;;;1550   }
000012  4770              BX       lr
;;;1551   
                          ENDP

                  |L41.20|
                          DCD      ||.bss||+0x20

                          AREA ||i.apiSysParGetOvpPar||, CODE, READONLY, ALIGN=2

                  apiSysParGetOvpPar PROC
;;;1574   //OVP
;;;1575   void apiSysParGetOvpPar(uint8_t level, tScuProtectPar *pPar)
000000  4a0d              LDR      r2,|L42.56|
;;;1576   {
;;;1577   	if(level >= 3)
000002  2803              CMP      r0,#3
000004  d30b              BCC      |L42.30|
;;;1578   	{
;;;1579   		if(level == 0x10)
000006  2810              CMP      r0,#0x10
000008  d005              BEQ      |L42.22|
;;;1580   			pPar->SetValue.l = SystemParemater.RomPar.OvpHwSetValue;
;;;1581   		else
;;;1582   		{
;;;1583   			pPar->SetValue.l = 0;
00000a  2000              MOVS     r0,#0
00000c  6008              STR      r0,[r1,#0]
;;;1584   			pPar->STime.l = 0;
00000e  6048              STR      r0,[r1,#4]
;;;1585   			pPar->RelValue.l = 0;
000010  6088              STR      r0,[r1,#8]
;;;1586   			pPar->RTime.l = 0;
000012  60c8              STR      r0,[r1,#0xc]
;;;1587   		}
;;;1588   		return;
;;;1589   	}
;;;1590   	pPar->SetValue.l = SystemParemater.RomPar.Ovp[level].SetValue;
;;;1591   	pPar->STime.l = SystemParemater.RomPar.Ovp[level].SetTime; 
;;;1592   	pPar->RelValue.l = SystemParemater.RomPar.Ovp[level].ReleaseValue;
;;;1593   	pPar->RTime.l = SystemParemater.RomPar.Ovp[level].ReleaseTime;
;;;1594   }
000014  4770              BX       lr
                  |L42.22|
000016  f8b20228          LDRH     r0,[r2,#0x228]        ;1580  ; SystemParemater
00001a  6008              STR      r0,[r1,#0]            ;1580
00001c  4770              BX       lr
                  |L42.30|
00001e  eb0200c0          ADD      r0,r2,r0,LSL #3       ;1590
000022  f200203a          ADD      r0,r0,#0x23a          ;1590
000026  8802              LDRH     r2,[r0,#0]            ;1590
000028  600a              STR      r2,[r1,#0]            ;1590
00002a  7882              LDRB     r2,[r0,#2]            ;1591
00002c  604a              STR      r2,[r1,#4]            ;1591
00002e  8882              LDRH     r2,[r0,#4]            ;1592
000030  608a              STR      r2,[r1,#8]            ;1592
000032  7980              LDRB     r0,[r0,#6]            ;1593
000034  60c8              STR      r0,[r1,#0xc]          ;1593
000036  4770              BX       lr
;;;1595   
                          ENDP

                  |L42.56|
                          DCD      ||.bss||+0x20

                          AREA ||i.apiSysParGetOvpPfPar||, CODE, READONLY, ALIGN=2

                  apiSysParGetOvpPfPar PROC
;;;1875   //	PF
;;;1876   void apiSysParGetOvpPfPar(tScuProtectPar *pPar)
000000  4903              LDR      r1,|L43.16|
;;;1877   {
;;;1878   	pPar->SetValue.l = SystemParemater.RomPar.OvpPf.SetValue;
000002  f8b123da          LDRH     r2,[r1,#0x3da]  ; SystemParemater
000006  6002              STR      r2,[r0,#0]
;;;1879   	pPar->STime.l = SystemParemater.RomPar.OvpPf.SetTime; 
000008  f89113dc          LDRB     r1,[r1,#0x3dc]  ; SystemParemater
00000c  6041              STR      r1,[r0,#4]
;;;1880   }
00000e  4770              BX       lr
;;;1881   void apiSysParSetOvpPfPar(tScuProtectPar *pPar)
                          ENDP

                  |L43.16|
                          DCD      ||.bss||+0x20

                          AREA ||i.apiSysParGetPfFlag||, CODE, READONLY, ALIGN=2

                  apiSysParGetPfFlag PROC
;;;1274   
;;;1275   uint16_t apiSysParGetPfFlag(void)
000000  4801              LDR      r0,|L44.8|
;;;1276   {
;;;1277   	return mBatteryInfo.PfFlag;
000002  8b00              LDRH     r0,[r0,#0x18]  ; mBatteryInfo
;;;1278   }
000004  4770              BX       lr
;;;1279   
                          ENDP

000006  0000              DCW      0x0000
                  |L44.8|
                          DCD      ||.bss||

                          AREA ||i.apiSysParGetPreDischargeTime||, CODE, READONLY, ALIGN=2

                  apiSysParGetPreDischargeTime PROC
;;;1513   
;;;1514   uint16_t apiSysParGetPreDischargeTime(void)
000000  4801              LDR      r0,|L45.8|
;;;1515   {
;;;1516   	return SystemParemater.RomPar.PreDischargeTime;
000002  f8b0022c          LDRH     r0,[r0,#0x22c]  ; SystemParemater
;;;1517   }
000006  4770              BX       lr
;;;1518   
                          ENDP

                  |L45.8|
                          DCD      ||.bss||+0x20

                          AREA ||i.apiSysParGetQmax||, CODE, READONLY, ALIGN=2

                  apiSysParGetQmax PROC
;;;1235   
;;;1236   uint32_t apiSysParGetQmax(void)
000000  4801              LDR      r0,|L46.8|
;;;1237   {
;;;1238   	return mBatteryInfo.Qmax;
000002  6900              LDR      r0,[r0,#0x10]  ; mBatteryInfo
;;;1239   }
000004  4770              BX       lr
;;;1240   
                          ENDP

000006  0000              DCW      0x0000
                  |L46.8|
                          DCD      ||.bss||

                          AREA ||i.apiSysParGetQmaxUpdateTimes||, CODE, READONLY, ALIGN=2

                  apiSysParGetQmaxUpdateTimes PROC
;;;1251   
;;;1252   uint16_t apiSysParGetQmaxUpdateTimes(void)
000000  4801              LDR      r0,|L47.8|
;;;1253   {
;;;1254   	return mBatteryInfo.QmaxUpdateTimes;
000002  8a80              LDRH     r0,[r0,#0x14]  ; mBatteryInfo
;;;1255   }
000004  4770              BX       lr
;;;1256   
                          ENDP

000006  0000              DCW      0x0000
                  |L47.8|
                          DCD      ||.bss||

                          AREA ||i.apiSysParGetRaTable||, CODE, READONLY, ALIGN=2

                  apiSysParGetRaTable PROC
;;;1551   
;;;1552   void apiSysParGetRaTable(uint8_t index ,tOcvRaTable *pOcvTable)
000000  4a04              LDR      r2,|L48.20|
;;;1553   {
;;;1554   	pOcvTable->Level =  SystemParemater.RomPar.RaTable[index].Level;
000002  eb020080          ADD      r0,r2,r0,LSL #2
000006  f8902376          LDRB     r2,[r0,#0x376]
00000a  700a              STRB     r2,[r1,#0]
;;;1555   	pOcvTable->Value =  SystemParemater.RomPar.RaTable[index].Value;
00000c  f8b00378          LDRH     r0,[r0,#0x378]
000010  8048              STRH     r0,[r1,#2]
;;;1556   }
000012  4770              BX       lr
;;;1557   
                          ENDP

                  |L48.20|
                          DCD      ||.bss||+0x20

                          AREA ||i.apiSysParGetRelayOnDiffVoltage||, CODE, READONLY, ALIGN=2

                  apiSysParGetRelayOnDiffVoltage PROC
;;;1523   }
;;;1524   uint16_t apiSysParGetRelayOnDiffVoltage(void)
000000  4801              LDR      r0,|L49.8|
;;;1525   {
;;;1526   	return SystemParemater.RomPar.RelayOnThreshold;
000002  f8b0022e          LDRH     r0,[r0,#0x22e]  ; SystemParemater
;;;1527   }
000006  4770              BX       lr
;;;1528   
                          ENDP

                  |L49.8|
                          DCD      ||.bss||+0x20

                          AREA ||i.apiSysParGetScuId||, CODE, READONLY, ALIGN=2

                  apiSysParGetScuId PROC
;;;686    */
;;;687    uint8_t apiSysParGetScuId(void)
000000  4801              LDR      r0,|L50.8|
;;;688    {
;;;689    	return mScuIdInfo.ScuID1;
000002  7c00              LDRB     r0,[r0,#0x10]  ; mScuIdInfo
;;;690    }
000004  4770              BX       lr
;;;691    
                          ENDP

000006  0000              DCW      0x0000
                  |L50.8|
                          DCD      ||.bss||+0x544

                          AREA ||i.apiSysParGetTerminateVoltage||, CODE, READONLY, ALIGN=2

                  apiSysParGetTerminateVoltage PROC
;;;1477   }	
;;;1478   uint16_t apiSysParGetTerminateVoltage(void)
000000  4801              LDR      r0,|L51.8|
;;;1479   {
;;;1480   	return SystemParemater.RomPar.TerminateVoltage;
000002  f8b00222          LDRH     r0,[r0,#0x222]  ; SystemParemater
;;;1481   }
000006  4770              BX       lr
;;;1482   void apiSysParSetTerminateVoltage(uint16_t voltage)
                          ENDP

                  |L51.8|
                          DCD      ||.bss||+0x20

                          AREA ||i.apiSysParGetUvpPar||, CODE, READONLY, ALIGN=2

                  apiSysParGetUvpPar PROC
;;;1612   
;;;1613   void apiSysParGetUvpPar(uint8_t level, tScuProtectPar *pPar)
000000  4a0d              LDR      r2,|L52.56|
;;;1614   {
;;;1615   	if(level >= 3)
000002  2803              CMP      r0,#3
000004  d30b              BCC      |L52.30|
;;;1616   	{
;;;1617   		if(level == 0x10)
000006  2810              CMP      r0,#0x10
000008  d005              BEQ      |L52.22|
;;;1618   			pPar->SetValue.l = SystemParemater.RomPar.UvpHwSetValue;
;;;1619   		else
;;;1620   		{
;;;1621   			pPar->SetValue.l = 0;
00000a  2000              MOVS     r0,#0
00000c  6008              STR      r0,[r1,#0]
;;;1622   			pPar->STime.l = 0;
00000e  6048              STR      r0,[r1,#4]
;;;1623   			pPar->RelValue.l = 0;
000010  6088              STR      r0,[r1,#8]
;;;1624   			pPar->RTime.l = 0;
000012  60c8              STR      r0,[r1,#0xc]
;;;1625   		}
;;;1626   		return;
;;;1627   	}
;;;1628   	pPar->SetValue.l = SystemParemater.RomPar.Uvp[level].SetValue;
;;;1629   	pPar->STime.l = SystemParemater.RomPar.Uvp[level].SetTime; 
;;;1630   	pPar->RelValue.l = SystemParemater.RomPar.Uvp[level].ReleaseValue;
;;;1631   	pPar->RTime.l = SystemParemater.RomPar.Uvp[level].ReleaseTime;
;;;1632   }
000014  4770              BX       lr
                  |L52.22|
000016  f8b2022a          LDRH     r0,[r2,#0x22a]        ;1618  ; SystemParemater
00001a  6008              STR      r0,[r1,#0]            ;1618
00001c  4770              BX       lr
                  |L52.30|
00001e  eb0200c0          ADD      r0,r2,r0,LSL #3       ;1628
000022  f2002052          ADD      r0,r0,#0x252          ;1628
000026  8802              LDRH     r2,[r0,#0]            ;1628
000028  600a              STR      r2,[r1,#0]            ;1628
00002a  7882              LDRB     r2,[r0,#2]            ;1629
00002c  604a              STR      r2,[r1,#4]            ;1629
00002e  8882              LDRH     r2,[r0,#4]            ;1630
000030  608a              STR      r2,[r1,#8]            ;1630
000032  7980              LDRB     r0,[r0,#6]            ;1631
000034  60c8              STR      r0,[r1,#0xc]          ;1631
000036  4770              BX       lr
;;;1633   
                          ENDP

                  |L52.56|
                          DCD      ||.bss||+0x20

                          AREA ||i.apiSysParGetUvpPfPar||, CODE, READONLY, ALIGN=2

                  apiSysParGetUvpPfPar PROC
;;;1887   
;;;1888   void apiSysParGetUvpPfPar(tScuProtectPar *pPar)
000000  4903              LDR      r1,|L53.16|
;;;1889   {
;;;1890   	pPar->SetValue.l = SystemParemater.RomPar.UvpPf.SetValue;
000002  f8b123de          LDRH     r2,[r1,#0x3de]  ; SystemParemater
000006  6002              STR      r2,[r0,#0]
;;;1891   	pPar->STime.l = SystemParemater.RomPar.UvpPf.SetTime; 
000008  f89113e0          LDRB     r1,[r1,#0x3e0]  ; SystemParemater
00000c  6041              STR      r1,[r0,#4]
;;;1892   }
00000e  4770              BX       lr
;;;1893   void apiSysParSetUvpPfPar(tScuProtectPar *pPar)
                          ENDP

                  |L53.16|
                          DCD      ||.bss||+0x20

                          AREA ||i.apiSysParGetZeroCurrentValue||, CODE, READONLY, ALIGN=2

                  apiSysParGetZeroCurrentValue PROC
;;;1410   
;;;1411   uint16_t apiSysParGetZeroCurrentValue(void)
000000  4801              LDR      r0,|L54.8|
;;;1412   {
;;;1413   	return SystemParemater.RomPar.ZeroCurrent;	
000002  8b00              LDRH     r0,[r0,#0x18]  ; SystemParemater
;;;1414   }
000004  4770              BX       lr
;;;1415   void apiSysParSetZeroCurrentValue(uint16_t current)
                          ENDP

000006  0000              DCW      0x0000
                  |L54.8|
                          DCD      ||.bss||+0x20

                          AREA ||i.apiSysParIsOvpPfSet||, CODE, READONLY, ALIGN=2

                  apiSysParIsOvpPfSet PROC
;;;1220   
;;;1221   uint8_t apiSysParIsOvpPfSet(void)
000000  4803              LDR      r0,|L55.16|
;;;1222   {
;;;1223   	if(mBatteryInfo.PfFlag & BATINFO_OVP_PF_FLAG)
000002  7e00              LDRB     r0,[r0,#0x18]  ; mBatteryInfo
000004  07c0              LSLS     r0,r0,#31
000006  d001              BEQ      |L55.12|
;;;1224   		return 1;
000008  2001              MOVS     r0,#1
;;;1225   	return 0;
;;;1226   }
00000a  4770              BX       lr
                  |L55.12|
00000c  2000              MOVS     r0,#0                 ;1225
00000e  4770              BX       lr
;;;1227   
                          ENDP

                  |L55.16|
                          DCD      ||.bss||

                          AREA ||i.apiSysParIsUvpPfSet||, CODE, READONLY, ALIGN=2

                  apiSysParIsUvpPfSet PROC
;;;1227   
;;;1228   uint8_t apiSysParIsUvpPfSet(void)
000000  4803              LDR      r0,|L56.16|
;;;1229   {
;;;1230   	if(mBatteryInfo.PfFlag & BATINFO_UVP_PF_FLAG)
000002  7e00              LDRB     r0,[r0,#0x18]  ; mBatteryInfo
000004  0780              LSLS     r0,r0,#30
000006  d501              BPL      |L56.12|
;;;1231   		return 1;
000008  2001              MOVS     r0,#1
;;;1232   	return 0;
;;;1233   }
00000a  4770              BX       lr
                  |L56.12|
00000c  2000              MOVS     r0,#0                 ;1232
00000e  4770              BX       lr
;;;1234   
                          ENDP

                  |L56.16|
                          DCD      ||.bss||

                          AREA ||i.apiSysParOpen||, CODE, READONLY, ALIGN=2

                  apiSysParOpen PROC
;;;1990   
;;;1991   uint16_t apiSysParOpen(void)
000000  b510              PUSH     {r4,lr}
;;;1992   {
;;;1993   	setBatteryInfoDefaultValue();
000002  f7fffffe          BL       setBatteryInfoDefaultValue
;;;1994   	loadBatteryInfoPar();
000006  f7fffffe          BL       loadBatteryInfoPar
;;;1995   	
;;;1996   	SystemParIdleCount = 0;
00000a  490b              LDR      r1,|L57.56|
00000c  2000              MOVS     r0,#0
00000e  7048              STRB     r0,[r1,#1]
;;;1997   	
;;;1998   	sysParSetDefaultRomValue();
000010  f7fffffe          BL       sysParSetDefaultRomValue
;;;1999   	loadSysPar();
000014  f7fffffe          BL       loadSysPar
;;;2000   	loadCalPar();
000018  f7fffffe          BL       loadCalPar
;;;2001   	loadScuIdPar();
00001c  f7fffffe          BL       loadScuIdPar
;;;2002   	setCalParRamValue();
000020  f7fffffe          BL       setCalParRamValue
;;;2003   	
;;;2004   	updateCellNumber();
000024  f7fffffe          BL       updateCellNumber
;;;2005   	updateNtcNumber();
000028  f7fffffe          BL       updateNtcNumber
;;;2006   	setSysParRamValue();
00002c  f7fffffe          BL       setSysParRamValue
;;;2007   	return sizeof(tSysRomPar);
000030  f44f608d          MOV      r0,#0x468
;;;2008   	
;;;2009   }
000034  bd10              POP      {r4,pc}
;;;2010   
                          ENDP

000036  0000              DCW      0x0000
                  |L57.56|
                          DCD      ||.data||

                          AREA ||i.apiSysParOvpPfClean||, CODE, READONLY, ALIGN=2

                  apiSysParOvpPfClean PROC
;;;1199   /* Public function prototypes -----------------------------------------------*/
;;;1200   void apiSysParOvpPfClean(void)
000000  4803              LDR      r0,|L58.16|
;;;1201   {
;;;1202   	mBatteryInfo.PfFlag &= ~BATINFO_OVP_PF_FLAG;
000002  8b01              LDRH     r1,[r0,#0x18]  ; mBatteryInfo
000004  f0210101          BIC      r1,r1,#1
000008  8301              STRH     r1,[r0,#0x18]
;;;1203   	resetBatteryInfoIdleCount();
00000a  f7ffbffe          B.W      resetBatteryInfoIdleCount
;;;1204   }
;;;1205   void apiSysParOvpPfSet(void)
                          ENDP

00000e  0000              DCW      0x0000
                  |L58.16|
                          DCD      ||.bss||

                          AREA ||i.apiSysParOvpPfSet||, CODE, READONLY, ALIGN=2

                  apiSysParOvpPfSet PROC
;;;1204   }
;;;1205   void apiSysParOvpPfSet(void)
000000  4803              LDR      r0,|L59.16|
;;;1206   {
;;;1207   	mBatteryInfo.PfFlag |= BATINFO_OVP_PF_FLAG;
000002  8b01              LDRH     r1,[r0,#0x18]  ; mBatteryInfo
000004  f0410101          ORR      r1,r1,#1
000008  8301              STRH     r1,[r0,#0x18]
;;;1208   	resetBatteryInfoIdleCount();
00000a  f7ffbffe          B.W      resetBatteryInfoIdleCount
;;;1209   }
;;;1210   void apiSysParUvpPfClean(void)
                          ENDP

00000e  0000              DCW      0x0000
                  |L59.16|
                          DCD      ||.bss||

                          AREA ||i.apiSysParSet2ndOtProtectPar||, CODE, READONLY, ALIGN=2

                  apiSysParSet2ndOtProtectPar PROC
;;;1652   }
;;;1653   void apiSysParSet2ndOtProtectPar(tScuProtectPar *pPar)
000000  4902              LDR      r1,|L60.12|
;;;1654   {
;;;1655   	SystemParemater.RomPar.OtHwSetValue = pPar->SetValue.l; 
000002  8800              LDRH     r0,[r0,#0]
000004  f8a10224          STRH     r0,[r1,#0x224]
;;;1656   }
000008  4770              BX       lr
;;;1657   void apiSysParGet2ndUtProtectPar(tScuProtectPar *pPar)
                          ENDP

00000a  0000              DCW      0x0000
                  |L60.12|
                          DCD      ||.bss||+0x20

                          AREA ||i.apiSysParSet2ndUtProtectPar||, CODE, READONLY, ALIGN=2

                  apiSysParSet2ndUtProtectPar PROC
;;;1660   }
;;;1661   void apiSysParSet2ndUtProtectPar(tScuProtectPar *pPar)
000000  4902              LDR      r1,|L61.12|
;;;1662   {
;;;1663   	SystemParemater.RomPar.UtHwSetValue = pPar->SetValue.l;
000002  8800              LDRH     r0,[r0,#0]
000004  f8a10226          STRH     r0,[r1,#0x226]
;;;1664   }
000008  4770              BX       lr
;;;1665   
                          ENDP

00000a  0000              DCW      0x0000
                  |L61.12|
                          DCD      ||.bss||+0x20

                          AREA ||i.apiSysParSetAfeCommTime||, CODE, READONLY, ALIGN=2

                  apiSysParSetAfeCommTime PROC
;;;1493   
;;;1494   void apiSysParSetAfeCommTime(tScuProtectPar *pPar)
000000  4904              LDR      r1,|L62.20|
;;;1495   {
;;;1496   	SystemParemater.RomPar.AfeComm.L1Time = pPar->SetValue.l;
000002  7802              LDRB     r2,[r0,#0]
000004  f8812232          STRB     r2,[r1,#0x232]
;;;1497   	SystemParemater.RomPar.AfeComm.L2Time = pPar->STime.l;
000008  7900              LDRB     r0,[r0,#4]
00000a  f8810233          STRB     r0,[r1,#0x233]
;;;1498   	resetSysParIdleCount();
00000e  f7ffbffe          B.W      resetSysParIdleCount
;;;1499   }
;;;1500   
                          ENDP

000012  0000              DCW      0x0000
                  |L62.20|
                          DCD      ||.bss||+0x20

                          AREA ||i.apiSysParSetBalanceChg||, CODE, READONLY, ALIGN=2

                  apiSysParSetBalanceChg PROC
;;;1922   }
;;;1923   void apiSysParSetBalanceChg(tScuProtectPar *pPar)
000000  4905              LDR      r1,|L63.24|
;;;1924   {
;;;1925   	SystemParemater.RomPar.Balance.ChgSet = pPar->SetValue.l;
000002  8802              LDRH     r2,[r0,#0]
000004  800a              STRH     r2,[r1,#0]
;;;1926   	SystemParemater.RomPar.Balance.ChgRelease = pPar->STime.l;
000006  8882              LDRH     r2,[r0,#4]
000008  804a              STRH     r2,[r1,#2]
;;;1927   	SystemParemater.RomPar.Balance.ChgDeltaSet = pPar->RelValue.l;
00000a  8902              LDRH     r2,[r0,#8]
00000c  808a              STRH     r2,[r1,#4]
;;;1928   	SystemParemater.RomPar.Balance.ChgDeltaRelease = pPar->RTime.l;
00000e  8980              LDRH     r0,[r0,#0xc]
000010  80c8              STRH     r0,[r1,#6]
;;;1929   	resetSysParIdleCount();
000012  f7ffbffe          B.W      resetSysParIdleCount
;;;1930   }
;;;1931   
                          ENDP

000016  0000              DCW      0x0000
                  |L63.24|
                          DCD      ||.bss||+0x406

                          AREA ||i.apiSysParSetBalanceDhg||, CODE, READONLY, ALIGN=2

                  apiSysParSetBalanceDhg PROC
;;;1938   }
;;;1939   void apiSysParSetBalanceDhg(tScuProtectPar *pPar)
000000  4905              LDR      r1,|L64.24|
;;;1940   {
;;;1941   	SystemParemater.RomPar.Balance.DhgSet = pPar->SetValue.l;
000002  8802              LDRH     r2,[r0,#0]
000004  800a              STRH     r2,[r1,#0]
;;;1942   	SystemParemater.RomPar.Balance.DhgRelease = pPar->STime.l;
000006  8882              LDRH     r2,[r0,#4]
000008  804a              STRH     r2,[r1,#2]
;;;1943   	SystemParemater.RomPar.Balance.DhgDeltaSet = pPar->RelValue.l;
00000a  8902              LDRH     r2,[r0,#8]
00000c  808a              STRH     r2,[r1,#4]
;;;1944   	SystemParemater.RomPar.Balance.DhgDeltaRelease = pPar->RTime.l;
00000e  8980              LDRH     r0,[r0,#0xc]
000010  80c8              STRH     r0,[r1,#6]
;;;1945   	resetSysParIdleCount();
000012  f7ffbffe          B.W      resetSysParIdleCount
;;;1946   }
;;;1947   void apiSysParGetBalanceRlx(tScuProtectPar *pPar)
                          ENDP

000016  0000              DCW      0x0000
                  |L64.24|
                          DCD      ||.bss||+0x40e

                          AREA ||i.apiSysParSetBalanceDuty||, CODE, READONLY, ALIGN=2

                  apiSysParSetBalanceDuty PROC
;;;1907   }
;;;1908   void apiSysParSetBalanceDuty(tScuProtectPar *pPar)
000000  4905              LDR      r1,|L65.24|
;;;1909   {
;;;1910   	SystemParemater.RomPar.Balance.DutySet = pPar->SetValue.l;
000002  7802              LDRB     r2,[r0,#0]
000004  700a              STRB     r2,[r1,#0]
;;;1911   	SystemParemater.RomPar.Balance.DutyRest = pPar->STime.l;
000006  7902              LDRB     r2,[r0,#4]
000008  704a              STRB     r2,[r1,#1]
;;;1912   	SystemParemater.RomPar.Balance.TempSet = pPar->RelValue.l;
00000a  7a02              LDRB     r2,[r0,#8]
00000c  708a              STRB     r2,[r1,#2]
;;;1913   	SystemParemater.RomPar.Balance.TempRelease = pPar->RTime.l;
00000e  7b00              LDRB     r0,[r0,#0xc]
000010  70c8              STRB     r0,[r1,#3]
;;;1914   	resetSysParIdleCount();
000012  f7ffbffe          B.W      resetSysParIdleCount
;;;1915   }
;;;1916   void apiSysParGetBalanceChg(tScuProtectPar *pPar)
                          ENDP

000016  0000              DCW      0x0000
                  |L65.24|
                          DCD      ||.bss||+0x402

                          AREA ||i.apiSysParSetBalanceRlx||, CODE, READONLY, ALIGN=2

                  apiSysParSetBalanceRlx PROC
;;;1953   }
;;;1954   void apiSysParSetBalanceRlx(tScuProtectPar *pPar)
000000  4905              LDR      r1,|L66.24|
;;;1955   {
;;;1956   	SystemParemater.RomPar.Balance.RlxSet = pPar->SetValue.l;
000002  8802              LDRH     r2,[r0,#0]
000004  800a              STRH     r2,[r1,#0]
;;;1957   	SystemParemater.RomPar.Balance.RlxRelease = pPar->STime.l;
000006  8882              LDRH     r2,[r0,#4]
000008  804a              STRH     r2,[r1,#2]
;;;1958   	SystemParemater.RomPar.Balance.RlxDeltaSet = pPar->RelValue.l;
00000a  8902              LDRH     r2,[r0,#8]
00000c  808a              STRH     r2,[r1,#4]
;;;1959   	SystemParemater.RomPar.Balance.RlxDeltaRelease = pPar->RTime.l;
00000e  8980              LDRH     r0,[r0,#0xc]
000010  80c8              STRH     r0,[r1,#6]
;;;1960   	resetSysParIdleCount();
000012  f7ffbffe          B.W      resetSysParIdleCount
;;;1961   }
;;;1962   //----------------------------------------------------------
                          ENDP

000016  0000              DCW      0x0000
                  |L66.24|
                          DCD      ||.bss||+0x416

                          AREA ||i.apiSysParSetBmuNumber||, CODE, READONLY, ALIGN=2

                  apiSysParSetBmuNumber PROC
;;;1383   }
;;;1384   void apiSysParSetBmuNumber(uint8_t num)
000000  4902              LDR      r1,|L67.12|
;;;1385   {
;;;1386   	SystemParemater.RomPar.BmuNumber = num;
000002  f8810220          STRB     r0,[r1,#0x220]
;;;1387   	resetSysParIdleCount();
000006  f7ffbffe          B.W      resetSysParIdleCount
;;;1388   }
;;;1389   
                          ENDP

00000a  0000              DCW      0x0000
                  |L67.12|
                          DCD      ||.bss||+0x20

                          AREA ||i.apiSysParSetCellFlag||, CODE, READONLY, ALIGN=2

                  apiSysParSetCellFlag PROC
;;;1393   }
;;;1394   void apiSysParSetCellFlag(uint8_t BmuIndex,uint32_t CellFlag)
000000  4a02              LDR      r2,|L68.12|
;;;1395   {
;;;1396   	SystemParemater.RomPar.CellFlag[BmuIndex] = CellFlag;
000002  eb020080          ADD      r0,r2,r0,LSL #2
000006  6201              STR      r1,[r0,#0x20]
;;;1397   	resetSysParIdleCount();
000008  f7ffbffe          B.W      resetSysParIdleCount
;;;1398   }
;;;1399   
                          ENDP

                  |L68.12|
                          DCD      ||.bss||+0x20

                          AREA ||i.apiSysParSetCocpPar||, CODE, READONLY, ALIGN=2

                  apiSysParSetCocpPar PROC
;;;1863   }
;;;1864   void apiSysParSetCocpPar(uint8_t level, tScuProtectPar *pPar)
000000  2803              CMP      r0,#3
;;;1865   {
000002  d20e              BCS      |L69.34|
;;;1866   	if(level >= 3)
;;;1867   		return;
;;;1868   	SystemParemater.RomPar.Cocp[level].SetValue = pPar->SetValue.l;
000004  4b07              LDR      r3,|L69.36|
000006  880a              LDRH     r2,[r1,#0]
000008  eb0300c0          ADD      r0,r3,r0,LSL #3
00000c  f20020e2          ADD      r0,r0,#0x2e2
000010  8002              STRH     r2,[r0,#0]
;;;1869   	SystemParemater.RomPar.Cocp[level].SetTime = pPar->STime.l;
000012  790a              LDRB     r2,[r1,#4]
000014  7082              STRB     r2,[r0,#2]
;;;1870   	SystemParemater.RomPar.Cocp[level].ReleaseValue = pPar->RelValue.l;
000016  890a              LDRH     r2,[r1,#8]
000018  8082              STRH     r2,[r0,#4]
;;;1871   	SystemParemater.RomPar.Cocp[level].ReleaseTime = pPar->RTime.l;	
00001a  7b09              LDRB     r1,[r1,#0xc]
00001c  7181              STRB     r1,[r0,#6]
;;;1872   	resetSysParIdleCount();
00001e  f7ffbffe          B.W      resetSysParIdleCount
                  |L69.34|
;;;1873   }
000022  4770              BX       lr
;;;1874   //-----------------------------------------
                          ENDP

                  |L69.36|
                          DCD      ||.bss||+0x20

                          AREA ||i.apiSysParSetCotpPar||, CODE, READONLY, ALIGN=2

                  apiSysParSetCotpPar PROC
;;;1772   }
;;;1773   void apiSysParSetCotpPar(uint8_t level, tScuProtectPar *pPar)
000000  4a0b              LDR      r2,|L70.48|
;;;1774   {
;;;1775   	if(level >= 3)
000002  2803              CMP      r0,#3
000004  d305              BCC      |L70.18|
;;;1776   	{
;;;1777   		if(level == 0x10)
000006  2810              CMP      r0,#0x10
000008  d102              BNE      |L70.16|
;;;1778   			SystemParemater.RomPar.OtHwSetValue = pPar->SetValue.l;
00000a  8808              LDRH     r0,[r1,#0]
00000c  f8a20224          STRH     r0,[r2,#0x224]
                  |L70.16|
;;;1779   		return;
;;;1780   	}
;;;1781   	SystemParemater.RomPar.Cotp[level].SetValue = pPar->SetValue.l;
;;;1782   	SystemParemater.RomPar.Cotp[level].SetTime = pPar->STime.l;
;;;1783   	SystemParemater.RomPar.Cotp[level].ReleaseValue = pPar->RelValue.l;
;;;1784   	SystemParemater.RomPar.Cotp[level].ReleaseTime = pPar->RTime.l;
;;;1785   	resetSysParIdleCount();
;;;1786   }
000010  4770              BX       lr
                  |L70.18|
000012  eb0200c0          ADD      r0,r2,r0,LSL #3       ;1781
000016  f200206a          ADD      r0,r0,#0x26a          ;1781
00001a  880b              LDRH     r3,[r1,#0]            ;1781
00001c  8003              STRH     r3,[r0,#0]            ;1781
00001e  790a              LDRB     r2,[r1,#4]            ;1782
000020  7082              STRB     r2,[r0,#2]            ;1782
000022  890a              LDRH     r2,[r1,#8]            ;1783
000024  8082              STRH     r2,[r0,#4]            ;1783
000026  7b09              LDRB     r1,[r1,#0xc]          ;1784
000028  7181              STRB     r1,[r0,#6]            ;1784
00002a  f7ffbffe          B.W      resetSysParIdleCount
;;;1787   	
                          ENDP

00002e  0000              DCW      0x0000
                  |L70.48|
                          DCD      ||.bss||+0x20

                          AREA ||i.apiSysParSetCutpPar||, CODE, READONLY, ALIGN=2

                  apiSysParSetCutpPar PROC
;;;1813   }
;;;1814   void apiSysParSetCutpPar(uint8_t level, tScuProtectPar *pPar)
000000  4a0b              LDR      r2,|L71.48|
;;;1815   {
;;;1816   	if(level >= 3)
000002  2803              CMP      r0,#3
000004  d305              BCC      |L71.18|
;;;1817   	{
;;;1818   		if(level == 0x10)
000006  2810              CMP      r0,#0x10
000008  d102              BNE      |L71.16|
;;;1819   			SystemParemater.RomPar.UtHwSetValue = pPar->SetValue.l;
00000a  8808              LDRH     r0,[r1,#0]
00000c  f8a20226          STRH     r0,[r2,#0x226]
                  |L71.16|
;;;1820   		return;
;;;1821   	}
;;;1822   	SystemParemater.RomPar.Cutp[level].SetValue = pPar->SetValue.l;
;;;1823   	SystemParemater.RomPar.Cutp[level].SetTime = pPar->STime.l;
;;;1824   	SystemParemater.RomPar.Cutp[level].ReleaseValue = pPar->RelValue.l;
;;;1825   	SystemParemater.RomPar.Cutp[level].ReleaseTime = pPar->RTime.l;	
;;;1826   	resetSysParIdleCount();
;;;1827   }
000010  4770              BX       lr
                  |L71.18|
000012  eb0200c0          ADD      r0,r2,r0,LSL #3       ;1822
000016  f2002082          ADD      r0,r0,#0x282          ;1822
00001a  880b              LDRH     r3,[r1,#0]            ;1822
00001c  8003              STRH     r3,[r0,#0]            ;1822
00001e  790a              LDRB     r2,[r1,#4]            ;1823
000020  7082              STRB     r2,[r0,#2]            ;1823
000022  890a              LDRH     r2,[r1,#8]            ;1824
000024  8082              STRH     r2,[r0,#4]            ;1824
000026  7b09              LDRB     r1,[r1,#0xc]          ;1825
000028  7181              STRB     r1,[r0,#6]            ;1825
00002a  f7ffbffe          B.W      resetSysParIdleCount
;;;1828   
                          ENDP

00002e  0000              DCW      0x0000
                  |L71.48|
                          DCD      ||.bss||+0x20

                          AREA ||i.apiSysParSetCycleCount||, CODE, READONLY, ALIGN=2

                  apiSysParSetCycleCount PROC
;;;1267   
;;;1268   void apiSysParSetCycleCount(uint16_t count)
000000  b510              PUSH     {r4,lr}
;;;1269   {
000002  4604              MOV      r4,r0
;;;1270   	sysParDebugMsg("apiSysParSetCycleCount");
000004  a004              ADR      r0,|L72.24|
000006  f7fffffe          BL       appSerialCanDavinciSendTextMessage
;;;1271   	mBatteryInfo.CycleCount = count;
00000a  4809              LDR      r0,|L72.48|
00000c  82c4              STRH     r4,[r0,#0x16]
;;;1272   	resetBatteryInfoIdleCount();
00000e  e8bd4010          POP      {r4,lr}
000012  f7ffbffe          B.W      resetBatteryInfoIdleCount
;;;1273   }
;;;1274   
                          ENDP

000016  0000              DCW      0x0000
                  |L72.24|
000018  61706953          DCB      "apiSysParSetCycleCount",0
00001c  79735061
000020  72536574
000024  4379636c
000028  65436f75
00002c  6e7400  
00002f  00                DCB      0
                  |L72.48|
                          DCD      ||.bss||

                          AREA ||i.apiSysParSetDesignedCapacity||, CODE, READONLY, ALIGN=2

                  apiSysParSetDesignedCapacity PROC
;;;1436   
;;;1437   void apiSysParSetDesignedCapacity(uint32_t dc)
000000  4901              LDR      r1,|L73.8|
;;;1438   {
;;;1439   	SystemParemater.RomPar.DesignedCapacity = dc;
000002  6148              STR      r0,[r1,#0x14]  ; SystemParemater
;;;1440   	resetSysParIdleCount();
000004  f7ffbffe          B.W      resetSysParIdleCount
;;;1441   }
;;;1442   
                          ENDP

                  |L73.8|
                          DCD      ||.bss||+0x20

                          AREA ||i.apiSysParSetDocpPar||, CODE, READONLY, ALIGN=2

                  apiSysParSetDocpPar PROC
;;;1840   }
;;;1841   void apiSysParSetDocpPar(uint8_t level, tScuProtectPar *pPar)
000000  2803              CMP      r0,#3
;;;1842   {
000002  d20e              BCS      |L74.34|
;;;1843   	if(level >= 3)
;;;1844   		return;
;;;1845   	SystemParemater.RomPar.Docp[level].SetValue = pPar->SetValue.l;
000004  4b07              LDR      r3,|L74.36|
000006  880a              LDRH     r2,[r1,#0]
000008  eb0300c0          ADD      r0,r3,r0,LSL #3
00000c  f20020fa          ADD      r0,r0,#0x2fa
000010  8002              STRH     r2,[r0,#0]
;;;1846   	SystemParemater.RomPar.Docp[level].SetTime = pPar->STime.l;
000012  790a              LDRB     r2,[r1,#4]
000014  7082              STRB     r2,[r0,#2]
;;;1847   	SystemParemater.RomPar.Docp[level].ReleaseValue = pPar->RelValue.l;
000016  890a              LDRH     r2,[r1,#8]
000018  8082              STRH     r2,[r0,#4]
;;;1848   	SystemParemater.RomPar.Docp[level].ReleaseTime = pPar->RTime.l;	
00001a  7b09              LDRB     r1,[r1,#0xc]
00001c  7181              STRB     r1,[r0,#6]
;;;1849   	resetSysParIdleCount();
00001e  f7ffbffe          B.W      resetSysParIdleCount
                  |L74.34|
;;;1850   }
000022  4770              BX       lr
;;;1851   
                          ENDP

                  |L74.36|
                          DCD      ||.bss||+0x20

                          AREA ||i.apiSysParSetDotpPar||, CODE, READONLY, ALIGN=2

                  apiSysParSetDotpPar PROC
;;;1687   }
;;;1688   void apiSysParSetDotpPar(uint8_t level, tScuProtectPar *pPar)
000000  2803              CMP      r0,#3
;;;1689   {
000002  d20e              BCS      |L75.34|
;;;1690   	if(level >= 3)
;;;1691   		return;
;;;1692   	SystemParemater.RomPar.Dotp[level].SetValue = pPar->SetValue.l;
000004  4b07              LDR      r3,|L75.36|
000006  880a              LDRH     r2,[r1,#0]
000008  eb0300c0          ADD      r0,r3,r0,LSL #3
00000c  f200209a          ADD      r0,r0,#0x29a
000010  8002              STRH     r2,[r0,#0]
;;;1693   	SystemParemater.RomPar.Dotp[level].SetTime = pPar->STime.l;
000012  790a              LDRB     r2,[r1,#4]
000014  7082              STRB     r2,[r0,#2]
;;;1694   	SystemParemater.RomPar.Dotp[level].ReleaseValue = pPar->RelValue.l;
000016  890a              LDRH     r2,[r1,#8]
000018  8082              STRH     r2,[r0,#4]
;;;1695   	SystemParemater.RomPar.Dotp[level].ReleaseTime = pPar->RTime.l;	
00001a  7b09              LDRB     r1,[r1,#0xc]
00001c  7181              STRB     r1,[r0,#6]
;;;1696   	resetSysParIdleCount();
00001e  f7ffbffe          B.W      resetSysParIdleCount
                  |L75.34|
;;;1697   }
000022  4770              BX       lr
;;;1698   //----------- DUTP ---------------------------
                          ENDP

                  |L75.36|
                          DCD      ||.bss||+0x20

                          AREA ||i.apiSysParSetDtpPar||, CODE, READONLY, ALIGN=2

                  apiSysParSetDtpPar PROC
;;;1737   }
;;;1738   void apiSysParSetDtpPar(uint8_t level, tScuProtectPar *pPar)
000000  2803              CMP      r0,#3
;;;1739   {
000002  d20e              BCS      |L76.34|
;;;1740   	if(level >= 3)
;;;1741   		return;
;;;1742   	SystemParemater.RomPar.Dtp[level].SetValue = pPar->SetValue.l;
000004  4b07              LDR      r3,|L76.36|
000006  880a              LDRH     r2,[r1,#0]
000008  eb0300c0          ADD      r0,r3,r0,LSL #3
00000c  f20020ca          ADD      r0,r0,#0x2ca
000010  8002              STRH     r2,[r0,#0]
;;;1743   	SystemParemater.RomPar.Dtp[level].SetTime = pPar->STime.l;
000012  790a              LDRB     r2,[r1,#4]
000014  7082              STRB     r2,[r0,#2]
;;;1744   	SystemParemater.RomPar.Dtp[level].ReleaseValue = pPar->RelValue.l;
000016  890a              LDRH     r2,[r1,#8]
000018  8082              STRH     r2,[r0,#4]
;;;1745   	SystemParemater.RomPar.Dtp[level].ReleaseTime = pPar->RTime.l;	
00001a  7b09              LDRB     r1,[r1,#0xc]
00001c  7181              STRB     r1,[r0,#6]
;;;1746   	resetSysParIdleCount();
00001e  f7ffbffe          B.W      resetSysParIdleCount
                  |L76.34|
;;;1747   }
000022  4770              BX       lr
;;;1748   //------------------------------------------------------
                          ENDP

                  |L76.36|
                          DCD      ||.bss||+0x20

                          AREA ||i.apiSysParSetDutpPar||, CODE, READONLY, ALIGN=2

                  apiSysParSetDutpPar PROC
;;;1717   }
;;;1718   void apiSysParSetDutpPar(uint8_t level, tScuProtectPar *pPar)
000000  2803              CMP      r0,#3
;;;1719   {
000002  d20e              BCS      |L77.34|
;;;1720   	if(level >= 3)
;;;1721   		return;
;;;1722   	SystemParemater.RomPar.Dutp[level].SetValue = pPar->SetValue.l;
000004  4b07              LDR      r3,|L77.36|
000006  880a              LDRH     r2,[r1,#0]
000008  eb0300c0          ADD      r0,r3,r0,LSL #3
00000c  f20020b2          ADD      r0,r0,#0x2b2
000010  8002              STRH     r2,[r0,#0]
;;;1723   	SystemParemater.RomPar.Dutp[level].SetTime = pPar->STime.l;
000012  790a              LDRB     r2,[r1,#4]
000014  7082              STRB     r2,[r0,#2]
;;;1724   	SystemParemater.RomPar.Dutp[level].ReleaseValue = pPar->RelValue.l;
000016  890a              LDRH     r2,[r1,#8]
000018  8082              STRH     r2,[r0,#4]
;;;1725   	SystemParemater.RomPar.Dutp[level].ReleaseTime = pPar->RTime.l;	
00001a  7b09              LDRB     r1,[r1,#0xc]
00001c  7181              STRB     r1,[r0,#6]
;;;1726   	resetSysParIdleCount();
00001e  f7ffbffe          B.W      resetSysParIdleCount
                  |L77.34|
;;;1727   }
000022  4770              BX       lr
;;;1728   //----------- DTP ---------------------------
                          ENDP

                  |L77.36|
                          DCD      ||.bss||+0x20

                          AREA ||i.apiSysParSetFlatVoltage||, CODE, READONLY, ALIGN=2

                  apiSysParSetFlatVoltage PROC
;;;1457   
;;;1458   void apiSysParSetFlatVoltage(tScuProtectPar *pPar)
000000  4903              LDR      r1,|L78.16|
;;;1459   {
;;;1460   	SystemParemater.RomPar.MinFlatVoltage = pPar->SetValue.l;
000002  8802              LDRH     r2,[r0,#0]
000004  838a              STRH     r2,[r1,#0x1c]
;;;1461   	SystemParemater.RomPar.MaxFlatVoltage = pPar->STime.l;
000006  8880              LDRH     r0,[r0,#4]
000008  83c8              STRH     r0,[r1,#0x1e]
;;;1462   	resetSysParIdleCount();
00000a  f7ffbffe          B.W      resetSysParIdleCount
;;;1463   }
;;;1464   
                          ENDP

00000e  0000              DCW      0x0000
                  |L78.16|
                          DCD      ||.bss||+0x20

                          AREA ||i.apiSysParSetFullChargeCondition||, CODE, READONLY, ALIGN=2

                  apiSysParSetFullChargeCondition PROC
;;;1470   }
;;;1471   void apiSysParSetFullChargeCondition(tScuProtectPar *pPar)
000000  4904              LDR      r1,|L79.20|
;;;1472   {
;;;1473   	SystemParemater.RomPar.FullCharge.Current = pPar->SetValue.l;
000002  8802              LDRH     r2,[r0,#0]
000004  800a              STRH     r2,[r1,#0]
;;;1474   	SystemParemater.RomPar.FullCharge.Voltage = pPar->STime.l;
000006  8882              LDRH     r2,[r0,#4]
000008  804a              STRH     r2,[r1,#2]
;;;1475   	SystemParemater.RomPar.FullCharge.Time = pPar->RelValue.l;
00000a  7a00              LDRB     r0,[r0,#8]
00000c  7108              STRB     r0,[r1,#4]
;;;1476   	resetSysParIdleCount();
00000e  f7ffbffe          B.W      resetSysParIdleCount
;;;1477   }	
;;;1478   uint16_t apiSysParGetTerminateVoltage(void)
                          ENDP

000012  0000              DCW      0x0000
                  |L79.20|
                          DCD      ||.bss||+0x254

                          AREA ||i.apiSysParSetHwVersion||, CODE, READONLY, ALIGN=2

                  apiSysParSetHwVersion PROC
;;;1368   }
;;;1369   void apiSysParSetHwVersion(uint32_t version)
000000  4901              LDR      r1,|L80.8|
;;;1370   {
;;;1371   	SystemParemater.RomPar.HwVersion = version;
000002  6108              STR      r0,[r1,#0x10]  ; SystemParemater
;;;1372   	resetSysParIdleCount();
000004  f7ffbffe          B.W      resetSysParIdleCount
;;;1373   }
;;;1374   uint32_t apiSysParGetFwVersion(void)
                          ENDP

                  |L80.8|
                          DCD      ||.bss||+0x20

                          AREA ||i.apiSysParSetInsulationResistance||, CODE, READONLY, ALIGN=2

                  apiSysParSetInsulationResistance PROC
;;;1506   
;;;1507   void apiSysParSetInsulationResistance(tScuProtectPar *pPar)
000000  4904              LDR      r1,|L81.20|
;;;1508   {
;;;1509   	SystemParemater.RomPar.InsulationResistance.ReadInterval = pPar->SetValue.l;
000002  7802              LDRB     r2,[r0,#0]
000004  f8812230          STRB     r2,[r1,#0x230]
;;;1510   	SystemParemater.RomPar.InsulationResistance.SwDelay = pPar->STime.l;
000008  7900              LDRB     r0,[r0,#4]
00000a  f8810231          STRB     r0,[r1,#0x231]
;;;1511   	resetSysParIdleCount();
00000e  f7ffbffe          B.W      resetSysParIdleCount
;;;1512   }
;;;1513   
                          ENDP

000012  0000              DCW      0x0000
                  |L81.20|
                          DCD      ||.bss||+0x20

                          AREA ||i.apiSysParSetMinChargeCurrentValue||, CODE, READONLY, ALIGN=2

                  apiSysParSetMinChargeCurrentValue PROC
;;;1425   
;;;1426   void apiSysParSetMinChargeCurrentValue(uint16_t current)
000000  4901              LDR      r1,|L82.8|
;;;1427   {
;;;1428   	SystemParemater.RomPar.MinChargeDischargeCurrent = current;	
000002  8348              STRH     r0,[r1,#0x1a]
;;;1429   	resetSysParIdleCount();
000004  f7ffbffe          B.W      resetSysParIdleCount
;;;1430   }
;;;1431   
                          ENDP

                  |L82.8|
                          DCD      ||.bss||+0x20

                          AREA ||i.apiSysParSetNotwMessageString||, CODE, READONLY, ALIGN=2

                  apiSysParSetNotwMessageString PROC
;;;1973   }
;;;1974   void apiSysParSetNotwMessageString(uint8_t *pMsg)
000000  b430              PUSH     {r4,r5}
;;;1975   {
;;;1976   	uint8_t	i;
;;;1977   	for(i=0; i<MAX_NOTE_MESSAGE_STRING_ITEM; i++)
000002  2100              MOVS     r1,#0
;;;1978   	{
;;;1979   		SystemParemater.RomPar.NoteMessage[i] = pMsg[i];
000004  4a06              LDR      r2,|L83.32|
                  |L83.6|
000006  5c43              LDRB     r3,[r0,r1]
000008  1854              ADDS     r4,r2,r1
00000a  f88433fe          STRB     r3,[r4,#0x3fe]
;;;1980   		if(pMsg[i] == 0)
00000e  5c43              LDRB     r3,[r0,r1]
000010  b11b              CBZ      r3,|L83.26|
000012  1c49              ADDS     r1,r1,#1              ;1977
000014  b2c9              UXTB     r1,r1                 ;1977
000016  2964              CMP      r1,#0x64              ;1977
000018  d3f5              BCC      |L83.6|
                  |L83.26|
;;;1981   			break;
;;;1982   	}
;;;1983   	resetSysParIdleCount();
00001a  bc30              POP      {r4,r5}
00001c  f7ffbffe          B.W      resetSysParIdleCount
;;;1984   }
;;;1985   uint32_t apiSysParGetChecksum(void)
                          ENDP

                  |L83.32|
                          DCD      ||.bss||+0x20

                          AREA ||i.apiSysParSetNtcFlag||, CODE, READONLY, ALIGN=2

                  apiSysParSetNtcFlag PROC
;;;1404   
;;;1405   void apiSysParSetNtcFlag(uint8_t BmuIndex, uint32_t NtcFlag)
000000  4a03              LDR      r2,|L84.16|
;;;1406   {
;;;1407   	SystemParemater.RomPar.NtcFlag[BmuIndex] = NtcFlag;
000002  eb020080          ADD      r0,r2,r0,LSL #2
000006  f8c01120          STR      r1,[r0,#0x120]
;;;1408   	resetSysParIdleCount();
00000a  f7ffbffe          B.W      resetSysParIdleCount
;;;1409   }
;;;1410   
                          ENDP

00000e  0000              DCW      0x0000
                  |L84.16|
                          DCD      ||.bss||+0x20

                          AREA ||i.apiSysParSetOcvTable||, CODE, READONLY, ALIGN=2

                  apiSysParSetOcvTable PROC
;;;1557   
;;;1558   void apiSysParSetOcvTable(uint8_t index ,tOcvRaTable *pOcvTable)
000000  4a05              LDR      r2,|L85.24|
;;;1559   {
;;;1560   	SystemParemater.RomPar.OcvTable[index].Level = pOcvTable->Level;
000002  780b              LDRB     r3,[r1,#0]
000004  eb020080          ADD      r0,r2,r0,LSL #2
000008  f8803312          STRB     r3,[r0,#0x312]
;;;1561   	SystemParemater.RomPar.OcvTable[index].Value = pOcvTable->Value;
00000c  8849              LDRH     r1,[r1,#2]
00000e  f8a01314          STRH     r1,[r0,#0x314]
;;;1562   	resetSysParIdleCount();
000012  f7ffbffe          B.W      resetSysParIdleCount
;;;1563   }
;;;1564   
                          ENDP

000016  0000              DCW      0x0000
                  |L85.24|
                          DCD      ||.bss||+0x20

                          AREA ||i.apiSysParSetOvpPar||, CODE, READONLY, ALIGN=2

                  apiSysParSetOvpPar PROC
;;;1595   
;;;1596   void apiSysParSetOvpPar(uint8_t level, tScuProtectPar *pPar)
000000  4a0b              LDR      r2,|L86.48|
;;;1597   {	
;;;1598   	if(level >= 3)
000002  2803              CMP      r0,#3
000004  d305              BCC      |L86.18|
;;;1599   	{
;;;1600   		if(level == 0x10)
000006  2810              CMP      r0,#0x10
000008  d102              BNE      |L86.16|
;;;1601   			SystemParemater.RomPar.OvpHwSetValue = pPar->SetValue.l;
00000a  8808              LDRH     r0,[r1,#0]
00000c  f8a20228          STRH     r0,[r2,#0x228]
                  |L86.16|
;;;1602   		return;
;;;1603   	}
;;;1604   	SystemParemater.RomPar.Ovp[level].SetValue = pPar->SetValue.l;
;;;1605   	SystemParemater.RomPar.Ovp[level].SetTime = pPar->STime.l;
;;;1606   	SystemParemater.RomPar.Ovp[level].ReleaseValue = pPar->RelValue.l;
;;;1607   	SystemParemater.RomPar.Ovp[level].ReleaseTime = pPar->RTime.l;
;;;1608   	resetSysParIdleCount();
;;;1609   }
000010  4770              BX       lr
                  |L86.18|
000012  eb0200c0          ADD      r0,r2,r0,LSL #3       ;1604
000016  f200203a          ADD      r0,r0,#0x23a          ;1604
00001a  880b              LDRH     r3,[r1,#0]            ;1604
00001c  8003              STRH     r3,[r0,#0]            ;1604
00001e  790a              LDRB     r2,[r1,#4]            ;1605
000020  7082              STRB     r2,[r0,#2]            ;1605
000022  890a              LDRH     r2,[r1,#8]            ;1606
000024  8082              STRH     r2,[r0,#4]            ;1606
000026  7b09              LDRB     r1,[r1,#0xc]          ;1607
000028  7181              STRB     r1,[r0,#6]            ;1607
00002a  f7ffbffe          B.W      resetSysParIdleCount
;;;1610   
                          ENDP

00002e  0000              DCW      0x0000
                  |L86.48|
                          DCD      ||.bss||+0x20

                          AREA ||i.apiSysParSetOvpPfPar||, CODE, READONLY, ALIGN=2

                  apiSysParSetOvpPfPar PROC
;;;1880   }
;;;1881   void apiSysParSetOvpPfPar(tScuProtectPar *pPar)
000000  4904              LDR      r1,|L87.20|
;;;1882   {
;;;1883   	SystemParemater.RomPar.OvpPf.SetValue = pPar->SetValue.l;
000002  8802              LDRH     r2,[r0,#0]
000004  f8a123da          STRH     r2,[r1,#0x3da]
;;;1884   	SystemParemater.RomPar.OvpPf.SetTime = pPar->STime.l;
000008  7900              LDRB     r0,[r0,#4]
00000a  f88103dc          STRB     r0,[r1,#0x3dc]
;;;1885   	resetSysParIdleCount();
00000e  f7ffbffe          B.W      resetSysParIdleCount
;;;1886   }
;;;1887   
                          ENDP

000012  0000              DCW      0x0000
                  |L87.20|
                          DCD      ||.bss||+0x20

                          AREA ||i.apiSysParSetPfFlag||, CODE, READONLY, ALIGN=2

                  apiSysParSetPfFlag PROC
;;;1279   
;;;1280   void apiSysParSetPfFlag(uint16_t flag)
000000  b510              PUSH     {r4,lr}
;;;1281   {
000002  4604              MOV      r4,r0
;;;1282   	sysParDebugMsg("apiSysParSetPfFlag");
000004  a004              ADR      r0,|L88.24|
000006  f7fffffe          BL       appSerialCanDavinciSendTextMessage
;;;1283   
;;;1284   	mBatteryInfo.PfFlag = flag;
00000a  4808              LDR      r0,|L88.44|
00000c  8304              STRH     r4,[r0,#0x18]
;;;1285   	resetBatteryInfoIdleCount();
00000e  e8bd4010          POP      {r4,lr}
000012  f7ffbffe          B.W      resetBatteryInfoIdleCount
;;;1286   }
;;;1287   
                          ENDP

000016  0000              DCW      0x0000
                  |L88.24|
000018  61706953          DCB      "apiSysParSetPfFlag",0
00001c  79735061
000020  72536574
000024  5066466c
000028  616700  
00002b  00                DCB      0
                  |L88.44|
                          DCD      ||.bss||

                          AREA ||i.apiSysParSetPreDischargeTime||, CODE, READONLY, ALIGN=2

                  apiSysParSetPreDischargeTime PROC
;;;1518   
;;;1519   void apiSysParSetPreDischargeTime(uint16_t time)
000000  4902              LDR      r1,|L89.12|
;;;1520   {
;;;1521   	SystemParemater.RomPar.PreDischargeTime = time;
000002  f8a1022c          STRH     r0,[r1,#0x22c]
;;;1522   	resetSysParIdleCount();
000006  f7ffbffe          B.W      resetSysParIdleCount
;;;1523   }
;;;1524   uint16_t apiSysParGetRelayOnDiffVoltage(void)
                          ENDP

00000a  0000              DCW      0x0000
                  |L89.12|
                          DCD      ||.bss||+0x20

                          AREA ||i.apiSysParSetQmax||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                  apiSysParSetQmax PROC
;;;1240   
;;;1241   void apiSysParSetQmax(uint32_t Qmax)
000000  b510              PUSH     {r4,lr}
;;;1242   {
000002  b09a              SUB      sp,sp,#0x68
000004  4604              MOV      r4,r0
;;;1243   	char	str[100];
;;;1244   	
;;;1245   	sprintf(str,"apiSysParSetQmax %d", Qmax);
000006  4622              MOV      r2,r4
000008  a106              ADR      r1,|L90.36|
00000a  a801              ADD      r0,sp,#4
00000c  f7fffffe          BL       __2sprintf
;;;1246   	sysParDebugMsg(str);
000010  a801              ADD      r0,sp,#4
000012  f7fffffe          BL       appSerialCanDavinciSendTextMessage
;;;1247   	
;;;1248   	mBatteryInfo.Qmax = Qmax;
000016  4808              LDR      r0,|L90.56|
000018  6104              STR      r4,[r0,#0x10]  ; mBatteryInfo
;;;1249   	resetBatteryInfoIdleCount();
00001a  f7fffffe          BL       resetBatteryInfoIdleCount
;;;1250   }
00001e  b01a              ADD      sp,sp,#0x68
000020  bd10              POP      {r4,pc}
;;;1251   
                          ENDP

000022  0000              DCW      0x0000
                  |L90.36|
000024  61706953          DCB      "apiSysParSetQmax %d",0
000028  79735061
00002c  72536574
000030  516d6178
000034  20256400
                  |L90.56|
                          DCD      ||.bss||

                          AREA ||i.apiSysParSetQmaxUpdateTimes||, CODE, READONLY, ALIGN=2

                  apiSysParSetQmaxUpdateTimes PROC
;;;1256   
;;;1257   void apiSysParSetQmaxUpdateTimes(uint16_t times)
000000  b510              PUSH     {r4,lr}
;;;1258   {
000002  4604              MOV      r4,r0
;;;1259   	sysParDebugMsg("apiSysParSetQmaxUpdateTimes");
000004  a004              ADR      r0,|L91.24|
000006  f7fffffe          BL       appSerialCanDavinciSendTextMessage
;;;1260   	mBatteryInfo.QmaxUpdateTimes = times;
00000a  480a              LDR      r0,|L91.52|
00000c  8284              STRH     r4,[r0,#0x14]
;;;1261   	resetBatteryInfoIdleCount();
00000e  e8bd4010          POP      {r4,lr}
000012  f7ffbffe          B.W      resetBatteryInfoIdleCount
;;;1262   }
;;;1263   uint16_t apiSysParGetCycleCount(void)
                          ENDP

000016  0000              DCW      0x0000
                  |L91.24|
000018  61706953          DCB      "apiSysParSetQmaxUpdateTimes",0
00001c  79735061
000020  72536574
000024  516d6178
000028  55706461
00002c  74655469
000030  6d657300
                  |L91.52|
                          DCD      ||.bss||

                          AREA ||i.apiSysParSetRaTable||, CODE, READONLY, ALIGN=2

                  apiSysParSetRaTable PROC
;;;1564   
;;;1565   void apiSysParSetRaTable(uint8_t index ,tOcvRaTable *pOcvTable)
000000  4a05              LDR      r2,|L92.24|
;;;1566   {
;;;1567   	SystemParemater.RomPar.RaTable[index].Level = pOcvTable->Level;
000002  780b              LDRB     r3,[r1,#0]
000004  eb020080          ADD      r0,r2,r0,LSL #2
000008  f8803376          STRB     r3,[r0,#0x376]
;;;1568   	SystemParemater.RomPar.RaTable[index].Value = pOcvTable->Value;
00000c  8849              LDRH     r1,[r1,#2]
00000e  f8a01378          STRH     r1,[r0,#0x378]
;;;1569   	resetSysParIdleCount();
000012  f7ffbffe          B.W      resetSysParIdleCount
;;;1570   }
;;;1571   
                          ENDP

000016  0000              DCW      0x0000
                  |L92.24|
                          DCD      ||.bss||+0x20

                          AREA ||i.apiSysParSetRelayOnDiffVoltage||, CODE, READONLY, ALIGN=2

                  apiSysParSetRelayOnDiffVoltage PROC
;;;1528   
;;;1529   void apiSysParSetRelayOnDiffVoltage(uint16_t voltage)
000000  4902              LDR      r1,|L93.12|
;;;1530   {
;;;1531   	SystemParemater.RomPar.RelayOnThreshold = voltage;
000002  f8a1022e          STRH     r0,[r1,#0x22e]
;;;1532   	resetSysParIdleCount();
000006  f7ffbffe          B.W      resetSysParIdleCount
;;;1533   }
;;;1534   
                          ENDP

00000a  0000              DCW      0x0000
                  |L93.12|
                          DCD      ||.bss||+0x20

                          AREA ||i.apiSysParSetTerminateVoltage||, CODE, READONLY, ALIGN=2

                  apiSysParSetTerminateVoltage PROC
;;;1481   }
;;;1482   void apiSysParSetTerminateVoltage(uint16_t voltage)
000000  4902              LDR      r1,|L94.12|
;;;1483   {
;;;1484   	SystemParemater.RomPar.TerminateVoltage = voltage;
000002  f8a10222          STRH     r0,[r1,#0x222]
;;;1485   	resetSysParIdleCount();
000006  f7ffbffe          B.W      resetSysParIdleCount
;;;1486   }
;;;1487   
                          ENDP

00000a  0000              DCW      0x0000
                  |L94.12|
                          DCD      ||.bss||+0x20

                          AREA ||i.apiSysParSetUvpPar||, CODE, READONLY, ALIGN=2

                  apiSysParSetUvpPar PROC
;;;1633   
;;;1634   void apiSysParSetUvpPar(uint8_t level, tScuProtectPar *pPar)
000000  4a0b              LDR      r2,|L95.48|
;;;1635   {	
;;;1636   	if(level >= 3)
000002  2803              CMP      r0,#3
000004  d305              BCC      |L95.18|
;;;1637   	{
;;;1638   		if(level == 0x10)
000006  2810              CMP      r0,#0x10
000008  d102              BNE      |L95.16|
;;;1639   			SystemParemater.RomPar.UvpHwSetValue = pPar->SetValue.l;
00000a  8808              LDRH     r0,[r1,#0]
00000c  f8a2022a          STRH     r0,[r2,#0x22a]
                  |L95.16|
;;;1640   		return;
;;;1641   	}
;;;1642   	SystemParemater.RomPar.Uvp[level].SetValue = pPar->SetValue.l;
;;;1643   	SystemParemater.RomPar.Uvp[level].SetTime = pPar->STime.l;
;;;1644   	SystemParemater.RomPar.Uvp[level].ReleaseValue = pPar->RelValue.l;
;;;1645   	SystemParemater.RomPar.Uvp[level].ReleaseTime = pPar->RTime.l;
;;;1646   	resetSysParIdleCount();
;;;1647   }
000010  4770              BX       lr
                  |L95.18|
000012  eb0200c0          ADD      r0,r2,r0,LSL #3       ;1642
000016  f2002052          ADD      r0,r0,#0x252          ;1642
00001a  880b              LDRH     r3,[r1,#0]            ;1642
00001c  8003              STRH     r3,[r0,#0]            ;1642
00001e  790a              LDRB     r2,[r1,#4]            ;1643
000020  7082              STRB     r2,[r0,#2]            ;1643
000022  890a              LDRH     r2,[r1,#8]            ;1644
000024  8082              STRH     r2,[r0,#4]            ;1644
000026  7b09              LDRB     r1,[r1,#0xc]          ;1645
000028  7181              STRB     r1,[r0,#6]            ;1645
00002a  f7ffbffe          B.W      resetSysParIdleCount
;;;1648   
                          ENDP

00002e  0000              DCW      0x0000
                  |L95.48|
                          DCD      ||.bss||+0x20

                          AREA ||i.apiSysParSetUvpPfPar||, CODE, READONLY, ALIGN=2

                  apiSysParSetUvpPfPar PROC
;;;1892   }
;;;1893   void apiSysParSetUvpPfPar(tScuProtectPar *pPar)
000000  4904              LDR      r1,|L96.20|
;;;1894   {
;;;1895   	SystemParemater.RomPar.UvpPf.SetValue = pPar->SetValue.l;
000002  8802              LDRH     r2,[r0,#0]
000004  f8a123de          STRH     r2,[r1,#0x3de]
;;;1896   	SystemParemater.RomPar.UvpPf.SetTime = pPar->STime.l;
000008  7900              LDRB     r0,[r0,#4]
00000a  f88103e0          STRB     r0,[r1,#0x3e0]
;;;1897   	resetSysParIdleCount();
00000e  f7ffbffe          B.W      resetSysParIdleCount
;;;1898   }
;;;1899   
                          ENDP

000012  0000              DCW      0x0000
                  |L96.20|
                          DCD      ||.bss||+0x20

                          AREA ||i.apiSysParSetZeroCurrentValue||, CODE, READONLY, ALIGN=2

                  apiSysParSetZeroCurrentValue PROC
;;;1414   }
;;;1415   void apiSysParSetZeroCurrentValue(uint16_t current)
000000  4901              LDR      r1,|L97.8|
;;;1416   {
;;;1417   	SystemParemater.RomPar.ZeroCurrent = current;
000002  8308              STRH     r0,[r1,#0x18]
;;;1418   	resetSysParIdleCount();
000004  f7ffbffe          B.W      resetSysParIdleCount
;;;1419   }
;;;1420   
                          ENDP

                  |L97.8|
                          DCD      ||.bss||+0x20

                          AREA ||i.apiSysParUvpPfClean||, CODE, READONLY, ALIGN=2

                  apiSysParUvpPfClean PROC
;;;1209   }
;;;1210   void apiSysParUvpPfClean(void)
000000  4803              LDR      r0,|L98.16|
;;;1211   {
;;;1212   	mBatteryInfo.PfFlag &= ~BATINFO_UVP_PF_FLAG;
000002  8b01              LDRH     r1,[r0,#0x18]  ; mBatteryInfo
000004  f0210102          BIC      r1,r1,#2
000008  8301              STRH     r1,[r0,#0x18]
;;;1213   	resetBatteryInfoIdleCount();
00000a  f7ffbffe          B.W      resetBatteryInfoIdleCount
;;;1214   }
;;;1215   void apiSysParUvpPfSet(void)
                          ENDP

00000e  0000              DCW      0x0000
                  |L98.16|
                          DCD      ||.bss||

                          AREA ||i.apiSysParUvpPfSet||, CODE, READONLY, ALIGN=2

                  apiSysParUvpPfSet PROC
;;;1214   }
;;;1215   void apiSysParUvpPfSet(void)
000000  4803              LDR      r0,|L99.16|
;;;1216   {
;;;1217   	mBatteryInfo.PfFlag |= BATINFO_UVP_PF_FLAG;
000002  8b01              LDRH     r1,[r0,#0x18]  ; mBatteryInfo
000004  f0410102          ORR      r1,r1,#2
000008  8301              STRH     r1,[r0,#0x18]
;;;1218   	resetBatteryInfoIdleCount();
00000a  f7ffbffe          B.W      resetBatteryInfoIdleCount
;;;1219   }
;;;1220   
                          ENDP

00000e  0000              DCW      0x0000
                  |L99.16|
                          DCD      ||.bss||

                          AREA ||i.appCurrDebug||, CODE, READONLY, ALIGN=2

                  appCurrDebug PROC
;;;1287   
;;;1288   int32_t appCurrDebug(uint8_t CurrentIndex, int32_t adc)
000000  4a03              LDR      r2,|L100.16|
;;;1289   {
;;;1290   	return doCalibration(&SysCalPar.RamPar.Current[CurrentIndex], adc);
000002  eb000040          ADD      r0,r0,r0,LSL #1
000006  eb020080          ADD      r0,r2,r0,LSL #2
00000a  3054              ADDS     r0,r0,#0x54
00000c  f7ffbffe          B.W      doCalibration
;;;1291   }
;;;1292   int32_t appVbatDebug(uint8_t VbatIndex, int32_t adc)
                          ENDP

                  |L100.16|
                          DCD      ||.bss||+0x4c0

                          AREA ||i.appVbatDebug||, CODE, READONLY, ALIGN=2

                  appVbatDebug PROC
;;;1291   }
;;;1292   int32_t appVbatDebug(uint8_t VbatIndex, int32_t adc)
000000  4a03              LDR      r2,|L101.16|
;;;1293   {
;;;1294   	return doCalibration(&SysCalPar.RamPar.VBat[VbatIndex], adc);
000002  eb000040          ADD      r0,r0,r0,LSL #1
000006  eb020080          ADD      r0,r2,r0,LSL #2
00000a  306c              ADDS     r0,r0,#0x6c
00000c  f7ffbffe          B.W      doCalibration
;;;1295   }
;;;1296   
                          ENDP

                  |L101.16|
                          DCD      ||.bss||+0x4c0

                          AREA ||i.batteryInfoSwTimerHandler||, CODE, READONLY, ALIGN=2

                  batteryInfoSwTimerHandler PROC
;;;376    }
;;;377    static void batteryInfoSwTimerHandler(__far void *dest, uint16_t evt, void *vDataPtr)
000000  b510              PUSH     {r4,lr}
;;;378    {
;;;379    	//GPIOD->ODR |= GPIO_PIN_14;
;;;380    	if(evt == LIB_SW_TIMER_EVT_SW_10MS_2)
000002  2902              CMP      r1,#2
000004  d110              BNE      |L102.40|
;;;381    	{
;;;382    		if(BatInfoIdleCount)
000006  4909              LDR      r1,|L102.44|
000008  7808              LDRB     r0,[r1,#0]  ; BatInfoIdleCount
00000a  2800              CMP      r0,#0
00000c  d00c              BEQ      |L102.40|
;;;383    		{
;;;384    			BatInfoIdleCount--;
00000e  1e40              SUBS     r0,r0,#1
000010  b2c0              UXTB     r0,r0
000012  7008              STRB     r0,[r1,#0]
;;;385    			if(!BatInfoIdleCount)
000014  2800              CMP      r0,#0
000016  d107              BNE      |L102.40|
;;;386    			{
;;;387    				saveBatteryInfoPar();
000018  f7fffffe          BL       saveBatteryInfoPar
;;;388    				LibSwTimerClose(batteryInfoSwTimerHandler, 0);
00001c  e8bd4010          POP      {r4,lr}
000020  2100              MOVS     r1,#0
000022  4803              LDR      r0,|L102.48|
000024  f7ffbffe          B.W      LibSwTimerClose
                  |L102.40|
;;;389    			}
;;;390    		}
;;;391    	}
;;;392    	//GPIOD->ODR &= ~GPIO_PIN_14;
;;;393    }
000028  bd10              POP      {r4,pc}
;;;394    
                          ENDP

00002a  0000              DCW      0x0000
                  |L102.44|
                          DCD      ||.data||
                  |L102.48|
                          DCD      batteryInfoSwTimerHandler

                          AREA ||i.loadBatteryInfoPar||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_sizespec
                          REQUIRE _printf_percent
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_x
                          REQUIRE _printf_longlong_hex
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                  loadBatteryInfoPar PROC
;;;310    
;;;311    static void loadBatteryInfoPar(void)
000000  b5f0              PUSH     {r4-r7,lr}
;;;312    {
000002  f6ad0dac          SUB      sp,sp,#0x8ac
;;;313    	uint8_t			buffer[2100];
;;;314    	tHalEeProm		mHalEeProm;
;;;315    	tBatteryInfo	*pBatteryInfo;
;;;316    	uint8_t			flag = 0;
000006  2500              MOVS     r5,#0
;;;317    	uint32_t		*par;
;;;318    	uint32_t		Checksum = 0;
000008  2600              MOVS     r6,#0
;;;319    	char			str[100];
;;;320    	
;;;321    	mHalEeProm.StartAddress = BAT_INFO_PAR_ADDR;
00000a  482a              LDR      r0,|L103.180|
00000c  901a              STR      r0,[sp,#0x68]
;;;322    	mHalEeProm.Length = sizeof(tBatteryInfo);
00000e  2020              MOVS     r0,#0x20
000010  f8ad0070          STRH     r0,[sp,#0x70]
;;;323    	mHalEeProm.pDataBuffer = buffer;
000014  a81e              ADD      r0,sp,#0x78
000016  901d              STR      r0,[sp,#0x74]
;;;324    	
;;;325    	sysParDebugMsg("Load bat Par");
000018  a027              ADR      r0,|L103.184|
00001a  f7fffffe          BL       appSerialCanDavinciSendTextMessage
;;;326    	HalEePromRead(&mHalEeProm);
00001e  a81a              ADD      r0,sp,#0x68
000020  f7fffffe          BL       HalEePromRead
;;;327    	
;;;328    	//DumpBuffer(buffer,64);
;;;329    	
;;;330    	pBatteryInfo = (tBatteryInfo *)buffer;
000024  af1e              ADD      r7,sp,#0x78
;;;331    	if(memcmp(pBatteryInfo->HeadInfo, BAT_INFO_PAR_HEAD_INFO, 8) != 0)
000026  2208              MOVS     r2,#8
000028  a127              ADR      r1,|L103.200|
00002a  4638              MOV      r0,r7
00002c  f7fffffe          BL       memcmp
000030  b120              CBZ      r0,|L103.60|
;;;332    	{
;;;333    		sysParDebugMsg("bat info Head Info Error");	
000032  a028              ADR      r0,|L103.212|
000034  f7fffffe          BL       appSerialCanDavinciSendTextMessage
;;;334    		flag = 1;
000038  2501              MOVS     r5,#1
00003a  e012              B        |L103.98|
                  |L103.60|
;;;335    	}
;;;336    	else if(pBatteryInfo->ParLeng != sizeof(tBatteryInfo))
00003c  f8bd0080          LDRH     r0,[sp,#0x80]
000040  2820              CMP      r0,#0x20
000042  d004              BEQ      |L103.78|
;;;337    	{
;;;338    		sysParDebugMsg("batinfo len Error");	
000044  a02a              ADR      r0,|L103.240|
000046  f7fffffe          BL       appSerialCanDavinciSendTextMessage
;;;339    		flag = 1;
00004a  2501              MOVS     r5,#1
00004c  e009              B        |L103.98|
                  |L103.78|
;;;340    	}
;;;341    	else if(pBatteryInfo->DateCode != BAT_INFO_PAR_DATE_CODE)
00004e  f8bd0082          LDRH     r0,[sp,#0x82]
000052  f5a05188          SUB      r1,r0,#0x1100
000056  3908              SUBS     r1,r1,#8
000058  d003              BEQ      |L103.98|
;;;342    	{
;;;343    		sysParDebugMsg("bat info DateCode Error");	
00005a  a02a              ADR      r0,|L103.260|
00005c  f7fffffe          BL       appSerialCanDavinciSendTextMessage
;;;344    		flag = 1;
000060  2501              MOVS     r5,#1
                  |L103.98|
;;;345    	}
;;;346    	if(!flag)
000062  b98d              CBNZ     r5,|L103.136|
;;;347    	{
;;;348    		par =(uint32_t *)pBatteryInfo;
000064  463c              MOV      r4,r7
;;;349    		while(1)
;;;350    		{
;;;351    			Checksum ^= (uint32_t)*par;
;;;352    			par++;
;;;353    			if(par >= &pBatteryInfo->Reserved)
000066  f107001c          ADD      r0,r7,#0x1c
                  |L103.106|
00006a  cc02              LDM      r4!,{r1}              ;351
00006c  404e              EORS     r6,r6,r1              ;351
00006e  4284              CMP      r4,r0
000070  d3fb              BCC      |L103.106|
;;;354    				break;
;;;355    		}
;;;356    		if(Checksum != 0)
000072  b14e              CBZ      r6,|L103.136|
;;;357    		{	
;;;358    			flag = 1;
000074  2501              MOVS     r5,#1
;;;359    			sprintf(str,"BatInfo Checksum Error =%.8lX %.8lX", Checksum,
000076  4632              MOV      r2,r6
000078  a128              ADR      r1,|L103.284|
00007a  a801              ADD      r0,sp,#4
00007c  68fb              LDR      r3,[r7,#0xc]
00007e  f7fffffe          BL       __2sprintf
;;;360    					pBatteryInfo->Checksum	
;;;361    						);
;;;362    			sysParDebugMsg(str);
000082  a801              ADD      r0,sp,#4
000084  f7fffffe          BL       appSerialCanDavinciSendTextMessage
                  |L103.136|
;;;363    		}
;;;364    	}
;;;365    	if(flag)
000088  2d00              CMP      r5,#0
00008a  d110              BNE      |L103.174|
;;;366    	{
;;;367    	}
;;;368    	else
;;;369    	{
;;;370    		sysParDebugMsg("BatInfo Load Par ok");		
00008c  a02c              ADR      r0,|L103.320|
00008e  f7fffffe          BL       appSerialCanDavinciSendTextMessage
;;;371    		memcpy(&mBatteryInfo ,pBatteryInfo, sizeof(tBatteryInfo));
000092  2220              MOVS     r2,#0x20
000094  4639              MOV      r1,r7
000096  482f              LDR      r0,|L103.340|
000098  f7fffffe          BL       __aeabi_memcpy4
;;;372    		
;;;373    		sprintf(str,"Qmax=%d" ,mBatteryInfo.Qmax);
00009c  482d              LDR      r0,|L103.340|
00009e  a12e              ADR      r1,|L103.344|
0000a0  6902              LDR      r2,[r0,#0x10]  ; mBatteryInfo
0000a2  a801              ADD      r0,sp,#4
0000a4  f7fffffe          BL       __2sprintf
;;;374    		sysParDebugMsg(str);
0000a8  a801              ADD      r0,sp,#4
0000aa  f7fffffe          BL       appSerialCanDavinciSendTextMessage
                  |L103.174|
;;;375    	}	
;;;376    }
0000ae  f60d0dac          ADD      sp,sp,#0x8ac
0000b2  bdf0              POP      {r4-r7,pc}
;;;377    static void batteryInfoSwTimerHandler(__far void *dest, uint16_t evt, void *vDataPtr)
                          ENDP

                  |L103.180|
                          DCD      0x0807e800
                  |L103.184|
0000b8  4c6f6164          DCB      "Load bat Par",0
0000bc  20626174
0000c0  20506172
0000c4  00      
0000c5  00                DCB      0
0000c6  00                DCB      0
0000c7  00                DCB      0
                  |L103.200|
0000c8  42617450          DCB      "BatPar01",0
0000cc  61723031
0000d0  00      
0000d1  00                DCB      0
0000d2  00                DCB      0
0000d3  00                DCB      0
                  |L103.212|
0000d4  62617420          DCB      "bat info Head Info Error",0
0000d8  696e666f
0000dc  20486561
0000e0  6420496e
0000e4  666f2045
0000e8  72726f72
0000ec  00      
0000ed  00                DCB      0
0000ee  00                DCB      0
0000ef  00                DCB      0
                  |L103.240|
0000f0  62617469          DCB      "batinfo len Error",0
0000f4  6e666f20
0000f8  6c656e20
0000fc  4572726f
000100  7200    
000102  00                DCB      0
000103  00                DCB      0
                  |L103.260|
000104  62617420          DCB      "bat info DateCode Error",0
000108  696e666f
00010c  20446174
000110  65436f64
000114  65204572
000118  726f7200
                  |L103.284|
00011c  42617449          DCB      "BatInfo Checksum Error =%.8lX %.8lX",0
000120  6e666f20
000124  43686563
000128  6b73756d
00012c  20457272
000130  6f72203d
000134  252e386c
000138  5820252e
00013c  386c5800
                  |L103.320|
000140  42617449          DCB      "BatInfo Load Par ok",0
000144  6e666f20
000148  4c6f6164
00014c  20506172
000150  206f6b00
                  |L103.340|
                          DCD      ||.bss||
                  |L103.344|
000158  516d6178          DCB      "Qmax=%d",0
00015c  3d256400

                          AREA ||i.loadCalPar||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_sizespec
                          REQUIRE _printf_percent
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_x
                          REQUIRE _printf_longlong_hex
                  loadCalPar PROC
;;;503    
;;;504    static void loadCalPar(void)
000000  b5f0              PUSH     {r4-r7,lr}
;;;505    {
000002  f6ad0dac          SUB      sp,sp,#0x8ac
;;;506    	uint8_t	buffer[2100];
;;;507    	tHalEeProm	mHalEeProm;
;;;508    	tSysCalPar	*pSysCalPar;
;;;509    	uint8_t		flag = 0;
000006  2500              MOVS     r5,#0
;;;510    	uint32_t	*par;
;;;511    	uint32_t	Checksum = 0;
000008  2600              MOVS     r6,#0
;;;512    	char	str[100];
;;;513    	
;;;514    	mHalEeProm.StartAddress = CAL_PAR_ADDR;
00000a  4826              LDR      r0,|L104.164|
00000c  901a              STR      r0,[sp,#0x68]
;;;515    	mHalEeProm.Length = sizeof(tSysCalPar);
00000e  2084              MOVS     r0,#0x84
000010  f8ad0070          STRH     r0,[sp,#0x70]
;;;516    	mHalEeProm.pDataBuffer = buffer;
000014  a81e              ADD      r0,sp,#0x78
000016  901d              STR      r0,[sp,#0x74]
;;;517    	
;;;518    	sysParDebugMsg("Load cal Par");
000018  a023              ADR      r0,|L104.168|
00001a  f7fffffe          BL       appSerialCanDavinciSendTextMessage
;;;519    	HalEePromRead(&mHalEeProm);
00001e  a81a              ADD      r0,sp,#0x68
000020  f7fffffe          BL       HalEePromRead
;;;520    	
;;;521    	//DumpBuffer(buffer,64);
;;;522    	
;;;523    	pSysCalPar = (tSysCalPar *)buffer;
000024  af1e              ADD      r7,sp,#0x78
;;;524    	if(memcmp(pSysCalPar->RomPar.HeadInfo, CAL_PAR_HEAD_INFO, 8) != 0)
000026  2208              MOVS     r2,#8
000028  a123              ADR      r1,|L104.184|
00002a  4638              MOV      r0,r7
00002c  f7fffffe          BL       memcmp
000030  b120              CBZ      r0,|L104.60|
;;;525    	{
;;;526    		sysParDebugMsg("Cal Head Info Error");	
000032  a024              ADR      r0,|L104.196|
000034  f7fffffe          BL       appSerialCanDavinciSendTextMessage
;;;527    		flag = 1;
000038  2501              MOVS     r5,#1
00003a  e012              B        |L104.98|
                  |L104.60|
;;;528    	}
;;;529    	else if(pSysCalPar->RomPar.ParLeng != sizeof(tCalRomPar))
00003c  f8bd0080          LDRH     r0,[sp,#0x80]
000040  2854              CMP      r0,#0x54
000042  d004              BEQ      |L104.78|
;;;530    	{
;;;531    		sysParDebugMsg("Cal len Error");	
000044  a024              ADR      r0,|L104.216|
000046  f7fffffe          BL       appSerialCanDavinciSendTextMessage
;;;532    		flag = 1;
00004a  2501              MOVS     r5,#1
00004c  e009              B        |L104.98|
                  |L104.78|
;;;533    	}
;;;534    	else if(pSysCalPar->RomPar.DateCode != CAL_PAR_DATE_CODE)
00004e  f8bd0082          LDRH     r0,[sp,#0x82]
000052  f5a05188          SUB      r1,r0,#0x1100
000056  3902              SUBS     r1,#2
000058  d003              BEQ      |L104.98|
;;;535    	{
;;;536    		sysParDebugMsg("Cal DateCode Error");	
00005a  a023              ADR      r0,|L104.232|
00005c  f7fffffe          BL       appSerialCanDavinciSendTextMessage
;;;537    		flag = 1;
000060  2501              MOVS     r5,#1
                  |L104.98|
;;;538    	}
;;;539    	if(!flag)
000062  b98d              CBNZ     r5,|L104.136|
;;;540    	{
;;;541    		par =(uint32_t *)pSysCalPar;
000064  463c              MOV      r4,r7
;;;542    		while(1)
;;;543    		{
;;;544    			Checksum ^= (uint32_t)*par;
;;;545    			par++;
;;;546    			if(par >= &pSysCalPar->RomPar.Reserved)
000066  f1070050          ADD      r0,r7,#0x50
                  |L104.106|
00006a  cc02              LDM      r4!,{r1}              ;544
00006c  404e              EORS     r6,r6,r1              ;544
00006e  4284              CMP      r4,r0
000070  d3fb              BCC      |L104.106|
;;;547    				break;
;;;548    		}
;;;549    		if(Checksum != 0)
000072  b14e              CBZ      r6,|L104.136|
;;;550    		{	
;;;551    			flag = 1;
000074  2501              MOVS     r5,#1
;;;552    			sprintf(str,"Cal Checksum Error =%.8lX %.8lX", Checksum,
000076  4632              MOV      r2,r6
000078  a120              ADR      r1,|L104.252|
00007a  a801              ADD      r0,sp,#4
00007c  68fb              LDR      r3,[r7,#0xc]
00007e  f7fffffe          BL       __2sprintf
;;;553    					pSysCalPar->RomPar.Checksum	
;;;554    						);
;;;555    			sysParDebugMsg(str);
000082  a801              ADD      r0,sp,#4
000084  f7fffffe          BL       appSerialCanDavinciSendTextMessage
                  |L104.136|
;;;556    		}
;;;557    	}
;;;558    	if(flag)
000088  2d00              CMP      r5,#0
00008a  d107              BNE      |L104.156|
;;;559    	{
;;;560    		;
;;;561    	}
;;;562    	else
;;;563    	{
;;;564    		sysParDebugMsg("Load Par ok");		
00008c  a023              ADR      r0,|L104.284|
00008e  f7fffffe          BL       appSerialCanDavinciSendTextMessage
;;;565    		memcpy(&SysCalPar.RomPar ,&pSysCalPar->RomPar, sizeof(tSysCalPar));
000092  2284              MOVS     r2,#0x84
000094  4639              MOV      r1,r7
000096  4824              LDR      r0,|L104.296|
000098  f7fffffe          BL       __aeabi_memcpy4
                  |L104.156|
;;;566    	}
;;;567    }
00009c  f60d0dac          ADD      sp,sp,#0x8ac
0000a0  bdf0              POP      {r4-r7,pc}
;;;568    
                          ENDP

0000a2  0000              DCW      0x0000
                  |L104.164|
                          DCD      0x0807f000
                  |L104.168|
0000a8  4c6f6164          DCB      "Load cal Par",0
0000ac  2063616c
0000b0  20506172
0000b4  00      
0000b5  00                DCB      0
0000b6  00                DCB      0
0000b7  00                DCB      0
                  |L104.184|
0000b8  43616c50          DCB      "CalPar01",0
0000bc  61723031
0000c0  00      
0000c1  00                DCB      0
0000c2  00                DCB      0
0000c3  00                DCB      0
                  |L104.196|
0000c4  43616c20          DCB      "Cal Head Info Error",0
0000c8  48656164
0000cc  20496e66
0000d0  6f204572
0000d4  726f7200
                  |L104.216|
0000d8  43616c20          DCB      "Cal len Error",0
0000dc  6c656e20
0000e0  4572726f
0000e4  7200    
0000e6  00                DCB      0
0000e7  00                DCB      0
                  |L104.232|
0000e8  43616c20          DCB      "Cal DateCode Error",0
0000ec  44617465
0000f0  436f6465
0000f4  20457272
0000f8  6f7200  
0000fb  00                DCB      0
                  |L104.252|
0000fc  43616c20          DCB      "Cal Checksum Error =%.8lX %.8lX",0
000100  43686563
000104  6b73756d
000108  20457272
00010c  6f72203d
000110  252e386c
000114  5820252e
000118  386c5800
                  |L104.284|
00011c  4c6f6164          DCB      "Load Par ok",0
000120  20506172
000124  206f6b00
                  |L104.296|
                          DCD      ||.bss||+0x4c0

                          AREA ||i.loadScuIdPar||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_sizespec
                          REQUIRE _printf_percent
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_x
                          REQUIRE _printf_longlong_hex
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                  loadScuIdPar PROC
;;;603    
;;;604    static void loadScuIdPar(void)
000000  b5f0              PUSH     {r4-r7,lr}
;;;605    {
000002  f6ad0dac          SUB      sp,sp,#0x8ac
;;;606    	uint8_t		buffer[2100];
;;;607    	tHalEeProm	mHalEeProm;
;;;608    	tScuIdInfo	*pScuIdInfo;
;;;609    	uint8_t		flag = 0;
000006  2500              MOVS     r5,#0
;;;610    	uint32_t	*par;
;;;611    	uint32_t	Checksum = 0;
000008  2600              MOVS     r6,#0
;;;612    	uint8_t		scuid;
;;;613    	char		str[100];
;;;614    	
;;;615    	mHalEeProm.StartAddress = SCUID_PAR_ADDR;
00000a  4831              LDR      r0,|L105.208|
00000c  901a              STR      r0,[sp,#0x68]
;;;616    	mHalEeProm.Length = sizeof(tScuIdInfo);
00000e  2018              MOVS     r0,#0x18
000010  f8ad0070          STRH     r0,[sp,#0x70]
;;;617    	mHalEeProm.pDataBuffer = buffer;
000014  a81e              ADD      r0,sp,#0x78
000016  901d              STR      r0,[sp,#0x74]
;;;618    	
;;;619    	sysParDebugMsg("Load scuid Par");
000018  a02e              ADR      r0,|L105.212|
00001a  f7fffffe          BL       appSerialCanDavinciSendTextMessage
;;;620    	HalEePromRead(&mHalEeProm);
00001e  a81a              ADD      r0,sp,#0x68
000020  f7fffffe          BL       HalEePromRead
;;;621    	
;;;622    	//DumpBuffer(buffer,64);
;;;623    	
;;;624    	pScuIdInfo = (tScuIdInfo *)buffer;
000024  af1e              ADD      r7,sp,#0x78
;;;625    	if(memcmp(pScuIdInfo->HeadInfo, SCUID_PAR_HEAD_INFO, 8) != 0)
000026  2208              MOVS     r2,#8
000028  a12e              ADR      r1,|L105.228|
00002a  4638              MOV      r0,r7
00002c  f7fffffe          BL       memcmp
000030  b120              CBZ      r0,|L105.60|
;;;626    	{
;;;627    		sysParDebugMsg("scuid Head Info Error");	
000032  a02f              ADR      r0,|L105.240|
000034  f7fffffe          BL       appSerialCanDavinciSendTextMessage
;;;628    		flag = 1;
000038  2501              MOVS     r5,#1
00003a  e012              B        |L105.98|
                  |L105.60|
;;;629    	}
;;;630    	else if(pScuIdInfo->ParLeng != sizeof(tScuIdInfo))
00003c  f8bd0080          LDRH     r0,[sp,#0x80]
000040  2818              CMP      r0,#0x18
000042  d004              BEQ      |L105.78|
;;;631    	{
;;;632    		sysParDebugMsg("scuid len Error");	
000044  a030              ADR      r0,|L105.264|
000046  f7fffffe          BL       appSerialCanDavinciSendTextMessage
;;;633    		flag = 1;
00004a  2501              MOVS     r5,#1
00004c  e009              B        |L105.98|
                  |L105.78|
;;;634    	}
;;;635    	else if(pScuIdInfo->DateCode != SCUID_PAR_DATE_CODE)
00004e  f8bd0082          LDRH     r0,[sp,#0x82]
000052  f5a05104          SUB      r1,r0,#0x2100
000056  3907              SUBS     r1,#7
000058  d003              BEQ      |L105.98|
;;;636    	{
;;;637    		sysParDebugMsg("scuid DateCode Error");	
00005a  a02f              ADR      r0,|L105.280|
00005c  f7fffffe          BL       appSerialCanDavinciSendTextMessage
;;;638    		flag = 1;
000060  2501              MOVS     r5,#1
                  |L105.98|
;;;639    	}
;;;640    	if(!flag)
000062  b98d              CBNZ     r5,|L105.136|
;;;641    	{
;;;642    		par =(uint32_t *)pScuIdInfo;
000064  463c              MOV      r4,r7
;;;643    		while(1)
;;;644    		{
;;;645    			Checksum ^= (uint32_t)*par;
;;;646    			par++;
;;;647    			if(par >= &pScuIdInfo->Reserved)
000066  f1070014          ADD      r0,r7,#0x14
                  |L105.106|
00006a  cc02              LDM      r4!,{r1}              ;645
00006c  404e              EORS     r6,r6,r1              ;645
00006e  4284              CMP      r4,r0
000070  d3fb              BCC      |L105.106|
;;;648    				break;
;;;649    		}
;;;650    		if(Checksum != 0)
000072  b14e              CBZ      r6,|L105.136|
;;;651    		{	
;;;652    			flag = 1;
000074  2501              MOVS     r5,#1
;;;653    			sprintf(str,"scuid Checksum Error =%.8lX %.8lX", Checksum,
000076  4632              MOV      r2,r6
000078  a12d              ADR      r1,|L105.304|
00007a  a801              ADD      r0,sp,#4
00007c  68fb              LDR      r3,[r7,#0xc]
00007e  f7fffffe          BL       __2sprintf
;;;654    					pScuIdInfo->Checksum	
;;;655    						);
;;;656    			sysParDebugMsg(str);
000082  a801              ADD      r0,sp,#4
000084  f7fffffe          BL       appSerialCanDavinciSendTextMessage
                  |L105.136|
;;;657    		}
;;;658    	}
;;;659    	if(flag)
;;;660    	{
;;;661    		mScuIdInfo.ScuID1 = 0xff;
000088  4c32              LDR      r4,|L105.340|
00008a  b125              CBZ      r5,|L105.150|
00008c  20ff              MOVS     r0,#0xff
00008e  7420              STRB     r0,[r4,#0x10]
                  |L105.144|
;;;662    	}
;;;663    	else
;;;664    	{
;;;665    		sysParDebugMsg("Load scuid ok");		
;;;666    		memcpy(&mScuIdInfo ,pScuIdInfo, sizeof(tSysCalPar));
;;;667    		if(mScuIdInfo.ScuID1 == mScuIdInfo.ScuID2 ||
;;;668    		   mScuIdInfo.ScuID1 == mScuIdInfo.ScuID3)
;;;669    		{
;;;670    			scuid = mScuIdInfo.ScuID1;
;;;671    		}
;;;672    		else if(mScuIdInfo.ScuID2 == mScuIdInfo.ScuID3)
;;;673    			scuid = mScuIdInfo.ScuID2;
;;;674    		else
;;;675    			scuid = 0xff;
;;;676    		mScuIdInfo.ScuID1 = scuid;		
;;;677    		sprintf(str,"Scuid = %d",scuid);
;;;678    		sysParDebugMsg(str);
;;;679    	}
;;;680    }
000090  f60d0dac          ADD      sp,sp,#0x8ac
000094  bdf0              POP      {r4-r7,pc}
                  |L105.150|
000096  a030              ADR      r0,|L105.344|
000098  f7fffffe          BL       appSerialCanDavinciSendTextMessage
00009c  2284              MOVS     r2,#0x84              ;666
00009e  4639              MOV      r1,r7                 ;666
0000a0  482c              LDR      r0,|L105.340|
0000a2  f7fffffe          BL       __aeabi_memcpy4
0000a6  7c20              LDRB     r0,[r4,#0x10]         ;667  ; mScuIdInfo
0000a8  7c62              LDRB     r2,[r4,#0x11]         ;667  ; mScuIdInfo
0000aa  4290              CMP      r0,r2                 ;667
0000ac  d002              BEQ      |L105.180|
0000ae  7ca1              LDRB     r1,[r4,#0x12]         ;668  ; mScuIdInfo
0000b0  4288              CMP      r0,r1                 ;668
0000b2  d101              BNE      |L105.184|
                  |L105.180|
0000b4  4602              MOV      r2,r0                 ;670
0000b6  e002              B        |L105.190|
                  |L105.184|
0000b8  428a              CMP      r2,r1                 ;672
0000ba  d000              BEQ      |L105.190|
0000bc  22ff              MOVS     r2,#0xff              ;675
                  |L105.190|
0000be  7422              STRB     r2,[r4,#0x10]         ;676
0000c0  a129              ADR      r1,|L105.360|
0000c2  a801              ADD      r0,sp,#4              ;677
0000c4  f7fffffe          BL       __2sprintf
0000c8  a801              ADD      r0,sp,#4              ;678
0000ca  f7fffffe          BL       appSerialCanDavinciSendTextMessage
0000ce  e7df              B        |L105.144|
;;;681    //static tScuIdInfo	ScuIdInfo;
                          ENDP

                  |L105.208|
                          DCD      0x0807e000
                  |L105.212|
0000d4  4c6f6164          DCB      "Load scuid Par",0
0000d8  20736375
0000dc  69642050
0000e0  617200  
0000e3  00                DCB      0
                  |L105.228|
0000e4  53637549          DCB      "ScuID001",0
0000e8  44303031
0000ec  00      
0000ed  00                DCB      0
0000ee  00                DCB      0
0000ef  00                DCB      0
                  |L105.240|
0000f0  73637569          DCB      "scuid Head Info Error",0
0000f4  64204865
0000f8  61642049
0000fc  6e666f20
000100  4572726f
000104  7200    
000106  00                DCB      0
000107  00                DCB      0
                  |L105.264|
000108  73637569          DCB      "scuid len Error",0
00010c  64206c65
000110  6e204572
000114  726f7200
                  |L105.280|
000118  73637569          DCB      "scuid DateCode Error",0
00011c  64204461
000120  7465436f
000124  64652045
000128  72726f72
00012c  00      
00012d  00                DCB      0
00012e  00                DCB      0
00012f  00                DCB      0
                  |L105.304|
000130  73637569          DCB      "scuid Checksum Error =%.8lX %.8lX",0
000134  64204368
000138  65636b73
00013c  756d2045
000140  72726f72
000144  203d252e
000148  386c5820
00014c  252e386c
000150  5800    
000152  00                DCB      0
000153  00                DCB      0
                  |L105.340|
                          DCD      ||.bss||+0x544
                  |L105.344|
000158  4c6f6164          DCB      "Load scuid ok",0
00015c  20736375
000160  6964206f
000164  6b00    
000166  00                DCB      0
000167  00                DCB      0
                  |L105.360|
000168  53637569          DCB      "Scuid = %d",0
00016c  64203d20
000170  256400  
000173  00                DCB      0

                          AREA ||i.loadSysPar||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_sizespec
                          REQUIRE _printf_percent
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_x
                          REQUIRE _printf_longlong_hex
                  loadSysPar PROC
;;;404    
;;;405    static uint16_t loadSysPar(void)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;406    {
000004  f6ad0da8          SUB      sp,sp,#0x8a8
;;;407    	uint8_t	buffer[2100];
;;;408    	tHalEeProm	mHalEeProm;
;;;409    	tSysPar		*pSysPar;
;;;410    	uint8_t		flag = 0;
000008  2500              MOVS     r5,#0
;;;411    	uint32_t	*par;
;;;412    	uint32_t	Checksum = 0;
00000a  2600              MOVS     r6,#0
;;;413    	char	str[100];
;;;414    	
;;;415    	mHalEeProm.StartAddress = PAR_ADDR;
00000c  4826              LDR      r0,|L106.168|
00000e  9019              STR      r0,[sp,#0x64]
;;;416    	mHalEeProm.Length = sizeof(tSysRomPar);
000010  f44f688d          MOV      r8,#0x468
000014  f8ad806c          STRH     r8,[sp,#0x6c]
;;;417    	mHalEeProm.pDataBuffer = buffer;
000018  a81d              ADD      r0,sp,#0x74
00001a  901c              STR      r0,[sp,#0x70]
;;;418    	
;;;419    	sysParDebugMsg("Load Par");
00001c  a023              ADR      r0,|L106.172|
00001e  f7fffffe          BL       appSerialCanDavinciSendTextMessage
;;;420    	HalEePromRead(&mHalEeProm);
000022  a819              ADD      r0,sp,#0x64
000024  f7fffffe          BL       HalEePromRead
;;;421    	
;;;422    	//DumpBuffer(buffer,64);
;;;423    	
;;;424    	pSysPar = (tSysPar *)buffer;
000028  af1d              ADD      r7,sp,#0x74
;;;425    	if(memcmp(pSysPar->RomPar.HeadInfo, SYSPAR_HEAD_INFO, 8) != 0)
00002a  2208              MOVS     r2,#8
00002c  a122              ADR      r1,|L106.184|
00002e  4638              MOV      r0,r7
000030  f7fffffe          BL       memcmp
000034  b120              CBZ      r0,|L106.64|
;;;426    	{
;;;427    		sysParDebugMsg("Head Info Error");	
000036  a023              ADR      r0,|L106.196|
000038  f7fffffe          BL       appSerialCanDavinciSendTextMessage
;;;428    		flag = 1;
00003c  2501              MOVS     r5,#1
00003e  e012              B        |L106.102|
                  |L106.64|
;;;429    	}
;;;430    	else if(pSysPar->RomPar.ParLeng != sizeof(tSysRomPar))
000040  f8bd007c          LDRH     r0,[sp,#0x7c]
000044  4540              CMP      r0,r8
000046  d004              BEQ      |L106.82|
;;;431    	{
;;;432    		sysParDebugMsg("len Error");	
000048  a022              ADR      r0,|L106.212|
00004a  f7fffffe          BL       appSerialCanDavinciSendTextMessage
;;;433    		flag = 1;
00004e  2501              MOVS     r5,#1
000050  e009              B        |L106.102|
                  |L106.82|
;;;434    	}
;;;435    	else if(pSysPar->RomPar.DateCode != SYSPAR_DATE_CODE)
000052  f8bd007e          LDRH     r0,[sp,#0x7e]
000056  f5a05190          SUB      r1,r0,#0x1200
00005a  3914              SUBS     r1,r1,#0x14
00005c  d003              BEQ      |L106.102|
;;;436    	{
;;;437    		sysParDebugMsg("DateCode Error");	
00005e  a020              ADR      r0,|L106.224|
000060  f7fffffe          BL       appSerialCanDavinciSendTextMessage
;;;438    		flag = 1;
000064  2501              MOVS     r5,#1
                  |L106.102|
;;;439    	}
;;;440    	if(!flag)
000066  b98d              CBNZ     r5,|L106.140|
;;;441    	{
;;;442    		par =(uint32_t *)pSysPar;
000068  463c              MOV      r4,r7
;;;443    		while(1)
;;;444    		{
;;;445    			Checksum ^= (uint32_t)*par;
;;;446    			par++;
;;;447    			if(par >= &pSysPar->RomPar.Reserved)
00006a  f2074064          ADD      r0,r7,#0x464
                  |L106.110|
00006e  cc02              LDM      r4!,{r1}              ;445
000070  404e              EORS     r6,r6,r1              ;445
000072  4284              CMP      r4,r0
000074  d3fb              BCC      |L106.110|
;;;448    				break;
;;;449    		}
;;;450    		if(Checksum != 0)
000076  b14e              CBZ      r6,|L106.140|
;;;451    		{	
;;;452    			flag = 1;
000078  2501              MOVS     r5,#1
;;;453    			sprintf(str,"Checksum Error =%.8lX %.8lX", Checksum,
00007a  4632              MOV      r2,r6
00007c  a11c              ADR      r1,|L106.240|
00007e  4668              MOV      r0,sp
000080  68fb              LDR      r3,[r7,#0xc]
000082  f7fffffe          BL       __2sprintf
;;;454    					pSysPar->RomPar.Checksum	
;;;455    						);
;;;456    			sysParDebugMsg(str);
000086  4668              MOV      r0,sp
000088  f7fffffe          BL       appSerialCanDavinciSendTextMessage
                  |L106.140|
;;;457    		}
;;;458    	}
;;;459    	if(flag)
00008c  2d00              CMP      r5,#0
00008e  d107              BNE      |L106.160|
;;;460    	{
;;;461    	}
;;;462    	else
;;;463    	{
;;;464    		sysParDebugMsg("Load Par ok");		
000090  a01e              ADR      r0,|L106.268|
000092  f7fffffe          BL       appSerialCanDavinciSendTextMessage
;;;465    		memcpy(&SystemParemater.RomPar ,&pSysPar->RomPar, sizeof(tSysRomPar));
000096  4642              MOV      r2,r8
000098  4639              MOV      r1,r7
00009a  481f              LDR      r0,|L106.280|
00009c  f7fffffe          BL       __aeabi_memcpy4
                  |L106.160|
;;;466    	}
;;;467    }
0000a0  f60d0da8          ADD      sp,sp,#0x8a8
0000a4  e8bd81f0          POP      {r4-r8,pc}
;;;468    
                          ENDP

                  |L106.168|
                          DCD      0x0807f800
                  |L106.172|
0000ac  4c6f6164          DCB      "Load Par",0
0000b0  20506172
0000b4  00      
0000b5  00                DCB      0
0000b6  00                DCB      0
0000b7  00                DCB      0
                  |L106.184|
0000b8  53797350          DCB      "SysPar01",0
0000bc  61723031
0000c0  00      
0000c1  00                DCB      0
0000c2  00                DCB      0
0000c3  00                DCB      0
                  |L106.196|
0000c4  48656164          DCB      "Head Info Error",0
0000c8  20496e66
0000cc  6f204572
0000d0  726f7200
                  |L106.212|
0000d4  6c656e20          DCB      "len Error",0
0000d8  4572726f
0000dc  7200    
0000de  00                DCB      0
0000df  00                DCB      0
                  |L106.224|
0000e0  44617465          DCB      "DateCode Error",0
0000e4  436f6465
0000e8  20457272
0000ec  6f7200  
0000ef  00                DCB      0
                  |L106.240|
0000f0  43686563          DCB      "Checksum Error =%.8lX %.8lX",0
0000f4  6b73756d
0000f8  20457272
0000fc  6f72203d
000100  252e386c
000104  5820252e
000108  386c5800
                  |L106.268|
00010c  4c6f6164          DCB      "Load Par ok",0
000110  20506172
000114  206f6b00
                  |L106.280|
                          DCD      ||.bss||+0x20

                          AREA ||i.resetBatteryInfoIdleCount||, CODE, READONLY, ALIGN=2

                  resetBatteryInfoIdleCount PROC
;;;394    
;;;395    static void resetBatteryInfoIdleCount(void)
000000  b510              PUSH     {r4,lr}
;;;396    {
;;;397    	if(BatInfoIdleCount == 0)
000002  4c05              LDR      r4,|L107.24|
000004  7820              LDRB     r0,[r4,#0]  ; BatInfoIdleCount
000006  2800              CMP      r0,#0
000008  d103              BNE      |L107.18|
;;;398    	{
;;;399    	  	LibSwTimerOpen(batteryInfoSwTimerHandler, 0);
00000a  2100              MOVS     r1,#0
00000c  4803              LDR      r0,|L107.28|
00000e  f7fffffe          BL       LibSwTimerOpen
                  |L107.18|
;;;400    	}
;;;401    	BatInfoIdleCount  = 50;
000012  2032              MOVS     r0,#0x32
000014  7020              STRB     r0,[r4,#0]
;;;402    }
000016  bd10              POP      {r4,pc}
;;;403    
                          ENDP

                  |L107.24|
                          DCD      ||.data||
                  |L107.28|
                          DCD      batteryInfoSwTimerHandler

                          AREA ||i.resetSysParIdleCount||, CODE, READONLY, ALIGN=2

                  resetSysParIdleCount PROC
;;;748    }
;;;749    static void resetSysParIdleCount(void)
000000  b510              PUSH     {r4,lr}
;;;750    {
;;;751    	if(SystemParIdleCount == 0)
000002  4c05              LDR      r4,|L108.24|
000004  7860              LDRB     r0,[r4,#1]  ; SystemParIdleCount
000006  2800              CMP      r0,#0
000008  d103              BNE      |L108.18|
;;;752    	{
;;;753    	  	LibSwTimerOpen(sysParSwTimerHandler, 0);
00000a  2100              MOVS     r1,#0
00000c  4803              LDR      r0,|L108.28|
00000e  f7fffffe          BL       LibSwTimerOpen
                  |L108.18|
;;;754    	}
;;;755    	SystemParIdleCount  = 50;
000012  2032              MOVS     r0,#0x32
000014  7060              STRB     r0,[r4,#1]
;;;756    }
000016  bd10              POP      {r4,pc}
;;;757    static void setCalParRamValue(void)
                          ENDP

                  |L108.24|
                          DCD      ||.data||
                  |L108.28|
                          DCD      sysParSwTimerHandler

                          AREA ||i.saveBatteryInfoPar||, CODE, READONLY, ALIGN=2

                  saveBatteryInfoPar PROC
;;;276    
;;;277    static void saveBatteryInfoPar(void)
000000  b57f              PUSH     {r0-r6,lr}
;;;278    {
;;;279    	uint32_t		*par;
;;;280    	uint32_t		Checksum = 0;
000002  2100              MOVS     r1,#0
;;;281    	tHalEeProm		mHalEeProm;
;;;282    	
;;;283    	memcpy(&mBatteryInfo.HeadInfo, BAT_INFO_PAR_HEAD_INFO, 8);
000004  a014              ADR      r0,|L109.88|
000006  4c13              LDR      r4,|L109.84|
000008  c805              LDM      r0,{r0,r2}
00000a  e9c40200          STRD     r0,r2,[r4,#0]
;;;284    	mBatteryInfo.ParLeng = sizeof(tBatteryInfo);
00000e  2520              MOVS     r5,#0x20
000010  8125              STRH     r5,[r4,#8]
;;;285    	mBatteryInfo.DateCode = BAT_INFO_PAR_DATE_CODE;
000012  f2411008          MOV      r0,#0x1108
000016  8160              STRH     r0,[r4,#0xa]
;;;286    	mBatteryInfo.Checksum = 0;
000018  2000              MOVS     r0,#0
00001a  60e0              STR      r0,[r4,#0xc]  ; mBatteryInfo
;;;287    	mBatteryInfo.Reserved = 0;
00001c  61e0              STR      r0,[r4,#0x1c]  ; mBatteryInfo
;;;288    	par =(uint32_t *)&mBatteryInfo;
00001e  4620              MOV      r0,r4
000020  f100021c          ADD      r2,r0,#0x1c           ;283
                  |L109.36|
;;;289    	while(1)
;;;290    	{
;;;291    		Checksum ^= (uint32_t)*par;
000024  c808              LDM      r0!,{r3}
000026  4059              EORS     r1,r1,r3
;;;292    		par++;
;;;293    		if(par >= &mBatteryInfo.Reserved)
000028  4290              CMP      r0,r2
00002a  d3fb              BCC      |L109.36|
;;;294    			break;
;;;295    	}
;;;296    	mBatteryInfo.Checksum = Checksum;
00002c  60e1              STR      r1,[r4,#0xc]  ; mBatteryInfo
;;;297    	
;;;298    	mHalEeProm.StartAddress = BAT_INFO_PAR_ADDR;
00002e  480d              LDR      r0,|L109.100|
000030  9000              STR      r0,[sp,#0]
;;;299    	mHalEeProm.Length = mBatteryInfo.ParLeng;
000032  f8ad5008          STRH     r5,[sp,#8]
;;;300    	mHalEeProm.pDataBuffer = (uint8_t *)&mBatteryInfo;
000036  9403              STR      r4,[sp,#0xc]
;;;301    	
;;;302    	if(HalEePromErase(&mHalEeProm) != 0)
000038  4668              MOV      r0,sp
00003a  f7fffffe          BL       HalEePromErase
00003e  b110              CBZ      r0,|L109.70|
;;;303    		sysParDebugMsg("Save batinfo Par ..erase error");
000040  a009              ADR      r0,|L109.104|
000042  f7fffffe          BL       appSerialCanDavinciSendTextMessage
                  |L109.70|
;;;304    	
;;;305    	HalEePromWrite(&mHalEeProm);
000046  4668              MOV      r0,sp
000048  f7fffffe          BL       HalEePromWrite
;;;306    	
;;;307    	sysParDebugMsg("Save batinfo Par");
00004c  a00e              ADR      r0,|L109.136|
00004e  f7fffffe          BL       appSerialCanDavinciSendTextMessage
;;;308    }
000052  bd7f              POP      {r0-r6,pc}
;;;309    
                          ENDP

                  |L109.84|
                          DCD      ||.bss||
                  |L109.88|
000058  42617450          DCB      "BatPar01",0
00005c  61723031
000060  00      
000061  00                DCB      0
000062  00                DCB      0
000063  00                DCB      0
                  |L109.100|
                          DCD      0x0807e800
                  |L109.104|
000068  53617665          DCB      "Save batinfo Par ..erase error",0
00006c  20626174
000070  696e666f
000074  20506172
000078  202e2e65
00007c  72617365
000080  20657272
000084  6f7200  
000087  00                DCB      0
                  |L109.136|
000088  53617665          DCB      "Save batinfo Par",0
00008c  20626174
000090  696e666f
000094  20506172
000098  00      
000099  00                DCB      0
00009a  00                DCB      0
00009b  00                DCB      0

                          AREA ||i.saveCalPar||, CODE, READONLY, ALIGN=2

                  saveCalPar PROC
;;;568    
;;;569    static void saveCalPar(void)
000000  b57f              PUSH     {r0-r6,lr}
;;;570    {
;;;571    	uint32_t	*par;
;;;572    	uint32_t	Checksum = 0;
000002  2100              MOVS     r1,#0
;;;573    	tHalEeProm	mHalEeProm;
;;;574    	
;;;575    	memcpy(&SysCalPar.RomPar.HeadInfo, CAL_PAR_HEAD_INFO, 8);
000004  a215              ADR      r2,|L110.92|
000006  4814              LDR      r0,|L110.88|
000008  ca0c              LDM      r2,{r2,r3}
00000a  e9c02310          STRD     r2,r3,[r0,#0x40]
;;;576    	SysCalPar.RomPar.ParLeng = sizeof(tCalRomPar);
00000e  f1000540          ADD      r5,r0,#0x40
000012  2454              MOVS     r4,#0x54
000014  812c              STRH     r4,[r5,#8]
;;;577    	SysCalPar.RomPar.DateCode = CAL_PAR_DATE_CODE;
000016  f2411002          MOV      r0,#0x1102
00001a  8168              STRH     r0,[r5,#0xa]
;;;578    	SysCalPar.RomPar.Checksum = 0;
00001c  2200              MOVS     r2,#0
00001e  60ea              STR      r2,[r5,#0xc]  ; SysCalPar
;;;579    	par =(uint32_t *)&SysCalPar.RomPar;
000020  4628              MOV      r0,r5
;;;580    	SysCalPar.RomPar.Reserved = 0;
000022  652a              STR      r2,[r5,#0x50]  ; SysCalPar
000024  f1000250          ADD      r2,r0,#0x50           ;576
                  |L110.40|
;;;581    	while(1)
;;;582    	{
;;;583    		Checksum ^= (uint32_t)*par;
000028  c808              LDM      r0!,{r3}
00002a  4059              EORS     r1,r1,r3
;;;584    		par++;
;;;585    		if(par >= &SysCalPar.RomPar.Reserved)
00002c  4290              CMP      r0,r2
00002e  d3fb              BCC      |L110.40|
;;;586    			break;
;;;587    	}
;;;588    	SysCalPar.RomPar.Checksum = Checksum;
000030  60e9              STR      r1,[r5,#0xc]  ; SysCalPar
;;;589    	
;;;590    	mHalEeProm.StartAddress = CAL_PAR_ADDR;
000032  480d              LDR      r0,|L110.104|
000034  9000              STR      r0,[sp,#0]
;;;591    	mHalEeProm.Length = SysCalPar.RomPar.ParLeng;
000036  f8ad4008          STRH     r4,[sp,#8]
;;;592    	mHalEeProm.pDataBuffer = (uint8_t *)&SysCalPar.RomPar;
00003a  9503              STR      r5,[sp,#0xc]
;;;593    	
;;;594    	if(HalEePromErase(&mHalEeProm) != 0)
00003c  4668              MOV      r0,sp
00003e  f7fffffe          BL       HalEePromErase
000042  b110              CBZ      r0,|L110.74|
;;;595    			sysParDebugMsg("Save Cal Par ..erase error");
000044  a009              ADR      r0,|L110.108|
000046  f7fffffe          BL       appSerialCanDavinciSendTextMessage
                  |L110.74|
;;;596    	
;;;597    	HalEePromWrite(&mHalEeProm);
00004a  4668              MOV      r0,sp
00004c  f7fffffe          BL       HalEePromWrite
;;;598    	
;;;599    	sysParDebugMsg("Save Cal Par");
000050  a00d              ADR      r0,|L110.136|
000052  f7fffffe          BL       appSerialCanDavinciSendTextMessage
;;;600    }
000056  bd7f              POP      {r0-r6,pc}
;;;601    
                          ENDP

                  |L110.88|
                          DCD      ||.bss||+0x480
                  |L110.92|
00005c  43616c50          DCB      "CalPar01",0
000060  61723031
000064  00      
000065  00                DCB      0
000066  00                DCB      0
000067  00                DCB      0
                  |L110.104|
                          DCD      0x0807f000
                  |L110.108|
00006c  53617665          DCB      "Save Cal Par ..erase error",0
000070  2043616c
000074  20506172
000078  202e2e65
00007c  72617365
000080  20657272
000084  6f7200  
000087  00                DCB      0
                  |L110.136|
000088  53617665          DCB      "Save Cal Par",0
00008c  2043616c
000090  20506172
000094  00      
000095  00                DCB      0
000096  00                DCB      0
000097  00                DCB      0

                          AREA ||i.saveScuIdPar||, CODE, READONLY, ALIGN=2

                  saveScuIdPar PROC
;;;691    
;;;692    void saveScuIdPar(uint8_t scuid)
000000  b57f              PUSH     {r0-r6,lr}
;;;693    {
;;;694    	uint32_t	*par;
;;;695    	uint32_t	Checksum = 0;
000002  2100              MOVS     r1,#0
;;;696    	tHalEeProm	mHalEeProm;
;;;697    	
;;;698    	memcpy(&mScuIdInfo.HeadInfo, SCUID_PAR_HEAD_INFO, 8);
000004  a316              ADR      r3,|L111.96|
000006  4a15              LDR      r2,|L111.92|
000008  cb18              LDM      r3,{r3,r4}
00000a  e9c23411          STRD     r3,r4,[r2,#0x44]
;;;699    	mScuIdInfo.ParLeng = sizeof(tScuIdInfo);
00000e  2518              MOVS     r5,#0x18
000010  3244              ADDS     r2,r2,#0x44
000012  8115              STRH     r5,[r2,#8]
;;;700    	mScuIdInfo.DateCode = SCUID_PAR_DATE_CODE;
000014  f2421307          MOV      r3,#0x2107
000018  8153              STRH     r3,[r2,#0xa]
;;;701    	mScuIdInfo.Checksum = 0;
00001a  2300              MOVS     r3,#0
00001c  60d3              STR      r3,[r2,#0xc]  ; mScuIdInfo
;;;702    	mScuIdInfo.ScuID1 = scuid;
00001e  7410              STRB     r0,[r2,#0x10]
;;;703    	mScuIdInfo.ScuID2 = scuid;
000020  7450              STRB     r0,[r2,#0x11]
;;;704    	mScuIdInfo.ScuID3 = scuid;
000022  7490              STRB     r0,[r2,#0x12]
;;;705    	par =(uint32_t *)&mScuIdInfo;
000024  4610              MOV      r0,r2
;;;706    	mScuIdInfo.Reserved = 0;
000026  6153              STR      r3,[r2,#0x14]  ; mScuIdInfo
000028  f1000314          ADD      r3,r0,#0x14           ;699
                  |L111.44|
;;;707    	while(1)
;;;708    	{
;;;709    		Checksum ^= (uint32_t)*par;
00002c  c810              LDM      r0!,{r4}
00002e  4061              EORS     r1,r1,r4
;;;710    		par++;
;;;711    		if(par >= &mScuIdInfo.Reserved)
000030  4298              CMP      r0,r3
000032  d3fb              BCC      |L111.44|
;;;712    			break;
;;;713    	}
;;;714    	mScuIdInfo.Checksum = Checksum;
000034  60d1              STR      r1,[r2,#0xc]  ; mScuIdInfo
;;;715    	
;;;716    	mHalEeProm.StartAddress = SCUID_PAR_ADDR;
000036  480d              LDR      r0,|L111.108|
000038  9000              STR      r0,[sp,#0]
;;;717    	mHalEeProm.Length = mScuIdInfo.ParLeng;
00003a  f8ad5008          STRH     r5,[sp,#8]
;;;718    	mHalEeProm.pDataBuffer = (uint8_t *)&mScuIdInfo;
00003e  9203              STR      r2,[sp,#0xc]
;;;719    	
;;;720    	if(HalEePromErase(&mHalEeProm) != 0)
000040  4668              MOV      r0,sp
000042  f7fffffe          BL       HalEePromErase
000046  b110              CBZ      r0,|L111.78|
;;;721    		sysParDebugMsg("Save scuid Par ..erase error");
000048  a009              ADR      r0,|L111.112|
00004a  f7fffffe          BL       appSerialCanDavinciSendTextMessage
                  |L111.78|
;;;722    	
;;;723    	HalEePromWrite(&mHalEeProm);
00004e  4668              MOV      r0,sp
000050  f7fffffe          BL       HalEePromWrite
;;;724    	
;;;725    	sysParDebugMsg("Save scuid Par");
000054  a00e              ADR      r0,|L111.144|
000056  f7fffffe          BL       appSerialCanDavinciSendTextMessage
;;;726    }
00005a  bd7f              POP      {r0-r6,pc}
;;;727    //wwwwwwwwwwwwwwwwwwwwwwwwwwwww
                          ENDP

                  |L111.92|
                          DCD      ||.bss||+0x500
                  |L111.96|
000060  53637549          DCB      "ScuID001",0
000064  44303031
000068  00      
000069  00                DCB      0
00006a  00                DCB      0
00006b  00                DCB      0
                  |L111.108|
                          DCD      0x0807e000
                  |L111.112|
000070  53617665          DCB      "Save scuid Par ..erase error",0
000074  20736375
000078  69642050
00007c  6172202e
000080  2e657261
000084  73652065
000088  72726f72
00008c  00      
00008d  00                DCB      0
00008e  00                DCB      0
00008f  00                DCB      0
                  |L111.144|
000090  53617665          DCB      "Save scuid Par",0
000094  20736375
000098  69642050
00009c  617200  
00009f  00                DCB      0

                          AREA ||i.saveSysPar||, CODE, READONLY, ALIGN=2

                  saveSysPar PROC
;;;468    
;;;469    static void saveSysPar(void)
000000  b57f              PUSH     {r0-r6,lr}
;;;470    {
;;;471    	uint32_t	*par;
;;;472    	uint32_t	Checksum = 0;
000002  2100              MOVS     r1,#0
;;;473    	tHalEeProm	mHalEeProm;
;;;474    	
;;;475    	memcpy(&SystemParemater.RomPar.HeadInfo, SYSPAR_HEAD_INFO, 8);
000004  a216              ADR      r2,|L112.96|
000006  4815              LDR      r0,|L112.92|
000008  ca0c              LDM      r2,{r2,r3}
00000a  e9c02308          STRD     r2,r3,[r0,#0x20]
;;;476    	SystemParemater.RomPar.ParLeng = sizeof(tSysRomPar);
00000e  f1000520          ADD      r5,r0,#0x20
000012  f44f648d          MOV      r4,#0x468
000016  812c              STRH     r4,[r5,#8]
;;;477    	SystemParemater.RomPar.DateCode = SYSPAR_DATE_CODE;
000018  f2412014          MOV      r0,#0x1214
00001c  8168              STRH     r0,[r5,#0xa]
;;;478    	SystemParemater.RomPar.Checksum = 0;
00001e  2200              MOVS     r2,#0
000020  60ea              STR      r2,[r5,#0xc]  ; SystemParemater
;;;479    	par =(uint32_t *)&SystemParemater.RomPar;
000022  4628              MOV      r0,r5
;;;480    	SystemParemater.RomPar.Reserved = 0;
000024  f8c52464          STR      r2,[r5,#0x464]  ; SystemParemater
000028  f2004264          ADD      r2,r0,#0x464          ;476
                  |L112.44|
;;;481    	while(1)
;;;482    	{
;;;483    		Checksum ^= (uint32_t)*par;
00002c  c808              LDM      r0!,{r3}
00002e  4059              EORS     r1,r1,r3
;;;484    		par++;
;;;485    		if(par >= &SystemParemater.RomPar.Reserved)
000030  4290              CMP      r0,r2
000032  d3fb              BCC      |L112.44|
;;;486    			break;
;;;487    	}
;;;488    	SystemParemater.RomPar.Checksum = Checksum;
000034  60e9              STR      r1,[r5,#0xc]  ; SystemParemater
;;;489    	
;;;490    	mHalEeProm.StartAddress = PAR_ADDR;
000036  480d              LDR      r0,|L112.108|
000038  9000              STR      r0,[sp,#0]
;;;491    	mHalEeProm.Length = SystemParemater.RomPar.ParLeng;
00003a  f8ad4008          STRH     r4,[sp,#8]
;;;492    	mHalEeProm.pDataBuffer = (uint8_t *)&SystemParemater.RomPar;
00003e  9503              STR      r5,[sp,#0xc]
;;;493    	
;;;494    	if(HalEePromErase(&mHalEeProm) != 0)
000040  4668              MOV      r0,sp
000042  f7fffffe          BL       HalEePromErase
000046  b110              CBZ      r0,|L112.78|
;;;495    			sysParDebugMsg("Save Sys Par ..erase error");
000048  a009              ADR      r0,|L112.112|
00004a  f7fffffe          BL       appSerialCanDavinciSendTextMessage
                  |L112.78|
;;;496    	
;;;497    	HalEePromWrite(&mHalEeProm);
00004e  4668              MOV      r0,sp
000050  f7fffffe          BL       HalEePromWrite
;;;498    	
;;;499    	sysParDebugMsg("Save Sys Par");
000054  a00d              ADR      r0,|L112.140|
000056  f7fffffe          BL       appSerialCanDavinciSendTextMessage
;;;500    }
00005a  bd7f              POP      {r0-r6,pc}
;;;501    
                          ENDP

                  |L112.92|
                          DCD      ||.bss||
                  |L112.96|
000060  53797350          DCB      "SysPar01",0
000064  61723031
000068  00      
000069  00                DCB      0
00006a  00                DCB      0
00006b  00                DCB      0
                  |L112.108|
                          DCD      0x0807f800
                  |L112.112|
000070  53617665          DCB      "Save Sys Par ..erase error",0
000074  20537973
000078  20506172
00007c  202e2e65
000080  72617365
000084  20657272
000088  6f7200  
00008b  00                DCB      0
                  |L112.140|
00008c  53617665          DCB      "Save Sys Par",0
000090  20537973
000094  20506172
000098  00      
000099  00                DCB      0
00009a  00                DCB      0
00009b  00                DCB      0

                          AREA ||i.setBatteryInfoDefaultValue||, CODE, READONLY, ALIGN=2

                  setBatteryInfoDefaultValue PROC
;;;268    /* Private function prototypes -----------------------------------------------*/
;;;269    static void setBatteryInfoDefaultValue(void)
000000  4804              LDR      r0,|L113.20|
;;;270    {
;;;271    	mBatteryInfo.Qmax = 280001;
000002  4903              LDR      r1,|L113.16|
000004  6101              STR      r1,[r0,#0x10]  ; mBatteryInfo
;;;272    	mBatteryInfo.QmaxUpdateTimes = 0;
000006  2100              MOVS     r1,#0
000008  8281              STRH     r1,[r0,#0x14]
;;;273    	mBatteryInfo.CycleCount = 0;
00000a  82c1              STRH     r1,[r0,#0x16]
;;;274    	mBatteryInfo.PfFlag =0;
00000c  8301              STRH     r1,[r0,#0x18]
;;;275    }
00000e  4770              BX       lr
;;;276    
                          ENDP

                  |L113.16|
                          DCD      0x000445c1
                  |L113.20|
                          DCD      ||.bss||

                          AREA ||i.setCalParRamValue||, CODE, READONLY, ALIGN=2

                  setCalParRamValue PROC
;;;756    }
;;;757    static void setCalParRamValue(void)
000000  e92d41ff          PUSH     {r0-r8,lr}
;;;758    {
;;;759    	uint8_t	i;
;;;760    	
;;;761    	for(i=0; i<2; i++)
000004  2500              MOVS     r5,#0
;;;762    	{
;;;763    		SysCalPar.RamPar.Current[i] = calCoef(
000006  4f13              LDR      r7,|L114.84|
                  |L114.8|
000008  eb071405          ADD      r4,r7,r5,LSL #4
00000c  69e0              LDR      r0,[r4,#0x1c]
00000e  9000              STR      r0,[sp,#0]
000010  e9d43205          LDRD     r3,r2,[r4,#0x14]
000014  a801              ADD      r0,sp,#4
000016  6921              LDR      r1,[r4,#0x10]
000018  f7fffffe          BL       calCoef
00001c  eb050045          ADD      r0,r5,r5,LSL #1
000020  eb070680          ADD      r6,r7,r0,LSL #2
000024  a801              ADD      r0,sp,#4
000026  c807              LDM      r0,{r0-r2}
000028  e9c61216          STRD     r1,r2,[r6,#0x58]
00002c  6570              STR      r0,[r6,#0x54]
;;;764    								SysCalPar.RomPar.Currentt[i].valL,
;;;765    								SysCalPar.RomPar.Currentt[i].adcL,
;;;766    								SysCalPar.RomPar.Currentt[i].valH,
;;;767    								SysCalPar.RomPar.Currentt[i].adcH);
;;;768    		SysCalPar.RamPar.VBat[i] = calCoef(
00002e  6be0              LDR      r0,[r4,#0x3c]
000030  9000              STR      r0,[sp,#0]
000032  e9d4320d          LDRD     r3,r2,[r4,#0x34]
000036  a801              ADD      r0,sp,#4
000038  6b21              LDR      r1,[r4,#0x30]
00003a  f7fffffe          BL       calCoef
00003e  a801              ADD      r0,sp,#4
000040  366c              ADDS     r6,r6,#0x6c
000042  c807              LDM      r0,{r0-r2}
000044  c607              STM      r6!,{r0-r2}
000046  1c6d              ADDS     r5,r5,#1              ;761
000048  b2ed              UXTB     r5,r5                 ;761
00004a  2d02              CMP      r5,#2                 ;761
00004c  d3dc              BCC      |L114.8|
;;;769    								SysCalPar.RomPar.VBat[i].valL,
;;;770    								SysCalPar.RomPar.VBat[i].adcL,
;;;771    								SysCalPar.RomPar.VBat[i].valH,
;;;772    								SysCalPar.RomPar.VBat[i].adcH);
;;;773    	}								
;;;774    }
00004e  e8bd81ff          POP      {r0-r8,pc}
;;;775    
                          ENDP

000052  0000              DCW      0x0000
                  |L114.84|
                          DCD      ||.bss||+0x4c0

                          AREA ||i.setDefaultBalanceValue||, CODE, READONLY, ALIGN=2

                  setDefaultBalanceValue PROC
;;;940    }
;;;941    static void setDefaultBalanceValue(void)
000000  b570              PUSH     {r4-r6,lr}
;;;942    {
;;;943    	SystemParemater.RomPar.Balance.DutySet = 10;
000002  4c11              LDR      r4,|L115.72|
000004  250a              MOVS     r5,#0xa
000006  7025              STRB     r5,[r4,#0]
;;;944    	SystemParemater.RomPar.Balance.DutyRest = 5;
000008  2005              MOVS     r0,#5
00000a  7060              STRB     r0,[r4,#1]
;;;945    	SystemParemater.RomPar.Balance.TempSet = 
00000c  2032              MOVS     r0,#0x32
00000e  f7fffffe          BL       LibSetRealTemperatureToInternalValue
000012  70a0              STRB     r0,[r4,#2]
;;;946    				LibSetRealTemperatureToInternalValue(50);
;;;947    	SystemParemater.RomPar.Balance.TempRelease = 
000014  2035              MOVS     r0,#0x35
000016  f7fffffe          BL       LibSetRealTemperatureToInternalValue
00001a  70e0              STRB     r0,[r4,#3]
;;;948    				LibSetRealTemperatureToInternalValue(53);
;;;949    	SystemParemater.RomPar.Balance.ChgSet = 3350;
00001c  f6405016          MOV      r0,#0xd16
000020  80a0              STRH     r0,[r4,#4]
;;;950    	SystemParemater.RomPar.Balance.ChgRelease = 3350;
000022  80e0              STRH     r0,[r4,#6]
;;;951    	SystemParemater.RomPar.Balance.ChgDeltaSet = 20;
000024  2114              MOVS     r1,#0x14
000026  8121              STRH     r1,[r4,#8]
;;;952    	SystemParemater.RomPar.Balance.ChgDeltaRelease = 10;
000028  8165              STRH     r5,[r4,#0xa]
;;;953    	SystemParemater.RomPar.Balance.DhgSet = 3300;
00002a  f64040e4          MOV      r0,#0xce4
00002e  81a0              STRH     r0,[r4,#0xc]
;;;954    	SystemParemater.RomPar.Balance.DhgRelease = 3300;
000030  81e0              STRH     r0,[r4,#0xe]
;;;955    	SystemParemater.RomPar.Balance.DhgDeltaSet = 5000;
000032  f2413288          MOV      r2,#0x1388
000036  8222              STRH     r2,[r4,#0x10]
;;;956    	SystemParemater.RomPar.Balance.DhgDeltaRelease = 2000;
000038  f44f62fa          MOV      r2,#0x7d0
00003c  8262              STRH     r2,[r4,#0x12]
;;;957    
;;;958    	SystemParemater.RomPar.Balance.RlxSet = 3300;
00003e  82a0              STRH     r0,[r4,#0x14]
;;;959    	SystemParemater.RomPar.Balance.RlxRelease = 3300;
000040  82e0              STRH     r0,[r4,#0x16]
;;;960    	SystemParemater.RomPar.Balance.RlxDeltaSet = 20;
000042  8321              STRH     r1,[r4,#0x18]
;;;961    	SystemParemater.RomPar.Balance.RlxDeltaRelease = 10;
000044  8365              STRH     r5,[r4,#0x1a]
;;;962    }
000046  bd70              POP      {r4-r6,pc}
;;;963    static void setDefaultOcvTable(void)
                          ENDP

                  |L115.72|
                          DCD      ||.bss||+0x402

                          AREA ||i.setDefaultCocpValue||, CODE, READONLY, ALIGN=2

                  setDefaultCocpValue PROC
;;;905    
;;;906    static void setDefaultCocpValue(void)
000000  480c              LDR      r0,|L116.52|
;;;907    {
;;;908    	SystemParemater.RomPar.Cocp[0].SetValue = 95;
000002  215f              MOVS     r1,#0x5f
000004  8001              STRH     r1,[r0,#0]
;;;909    	SystemParemater.RomPar.Cocp[0].SetTime = 8;
000006  2108              MOVS     r1,#8
000008  7081              STRB     r1,[r0,#2]
;;;910    	SystemParemater.RomPar.Cocp[0].ReleaseValue = 90;
00000a  215a              MOVS     r1,#0x5a
00000c  8081              STRH     r1,[r0,#4]
;;;911    	SystemParemater.RomPar.Cocp[0].ReleaseTime = 9;
00000e  2109              MOVS     r1,#9
000010  7181              STRB     r1,[r0,#6]
;;;912                        
;;;913    	SystemParemater.RomPar.Cocp[1].SetValue = 100;
000012  2164              MOVS     r1,#0x64
000014  8101              STRH     r1,[r0,#8]
;;;914    	SystemParemater.RomPar.Cocp[1].SetTime = 10;
000016  210a              MOVS     r1,#0xa
000018  7281              STRB     r1,[r0,#0xa]
;;;915    	SystemParemater.RomPar.Cocp[1].ReleaseValue = 97;
00001a  2161              MOVS     r1,#0x61
00001c  8181              STRH     r1,[r0,#0xc]
;;;916    	SystemParemater.RomPar.Cocp[1].ReleaseTime = 11;
00001e  210b              MOVS     r1,#0xb
000020  7381              STRB     r1,[r0,#0xe]
;;;917                        
;;;918    	SystemParemater.RomPar.Cocp[2].SetValue = 105;
000022  2169              MOVS     r1,#0x69
000024  8201              STRH     r1,[r0,#0x10]
;;;919    	SystemParemater.RomPar.Cocp[2].SetTime = 12;
000026  210c              MOVS     r1,#0xc
000028  7481              STRB     r1,[r0,#0x12]
;;;920    	SystemParemater.RomPar.Cocp[2].ReleaseValue = 102;
00002a  2166              MOVS     r1,#0x66
00002c  8281              STRH     r1,[r0,#0x14]
;;;921    	SystemParemater.RomPar.Cocp[2].ReleaseTime = 13;
00002e  210d              MOVS     r1,#0xd
000030  7581              STRB     r1,[r0,#0x16]
;;;922    }
000032  4770              BX       lr
;;;923    
                          ENDP

                  |L116.52|
                          DCD      ||.bss||+0x302

                          AREA ||i.setDefaultCotpValue||, CODE, READONLY, ALIGN=2

                  setDefaultCotpValue PROC
;;;811    }
;;;812    static void setDefaultCotpValue(void)
000000  b570              PUSH     {r4-r6,lr}
;;;813    {
;;;814    	SystemParemater.RomPar.Cotp[0].SetValue = 
000002  202d              MOVS     r0,#0x2d
000004  f7fffffe          BL       LibSetRealTemperatureToInternalValue
000008  4c0e              LDR      r4,|L117.68|
00000a  8020              STRH     r0,[r4,#0]
;;;815    			LibSetRealTemperatureToInternalValue(45);
;;;816    	SystemParemater.RomPar.Cotp[0].SetTime = 10;
00000c  250a              MOVS     r5,#0xa
00000e  70a5              STRB     r5,[r4,#2]
;;;817    	SystemParemater.RomPar.Cotp[0].ReleaseValue = 
000010  2028              MOVS     r0,#0x28
000012  f7fffffe          BL       LibSetRealTemperatureToInternalValue
000016  80a0              STRH     r0,[r4,#4]
;;;818    			LibSetRealTemperatureToInternalValue(40);
;;;819    	SystemParemater.RomPar.Cotp[0].ReleaseTime = 10;
000018  71a5              STRB     r5,[r4,#6]
;;;820                       
;;;821    	SystemParemater.RomPar.Cotp[1].SetValue = 
00001a  2032              MOVS     r0,#0x32
00001c  f7fffffe          BL       LibSetRealTemperatureToInternalValue
000020  8120              STRH     r0,[r4,#8]
;;;822    			LibSetRealTemperatureToInternalValue(50);
;;;823    	SystemParemater.RomPar.Cotp[1].SetTime = 10;
000022  72a5              STRB     r5,[r4,#0xa]
;;;824    	SystemParemater.RomPar.Cotp[1].ReleaseValue = 
000024  202d              MOVS     r0,#0x2d
000026  f7fffffe          BL       LibSetRealTemperatureToInternalValue
00002a  81a0              STRH     r0,[r4,#0xc]
;;;825    			LibSetRealTemperatureToInternalValue(45);
;;;826    	SystemParemater.RomPar.Cotp[1].ReleaseTime = 10;
00002c  73a5              STRB     r5,[r4,#0xe]
;;;827                       
;;;828    	SystemParemater.RomPar.Cotp[2].SetValue = 
00002e  2035              MOVS     r0,#0x35
000030  f7fffffe          BL       LibSetRealTemperatureToInternalValue
000034  8220              STRH     r0,[r4,#0x10]
;;;829    			LibSetRealTemperatureToInternalValue(53);
;;;830    	SystemParemater.RomPar.Cotp[2].SetTime = 10;
000036  74a5              STRB     r5,[r4,#0x12]
;;;831    	SystemParemater.RomPar.Cotp[2].ReleaseValue = 
000038  202d              MOVS     r0,#0x2d
00003a  f7fffffe          BL       LibSetRealTemperatureToInternalValue
00003e  82a0              STRH     r0,[r4,#0x14]
;;;832    			LibSetRealTemperatureToInternalValue(45);
;;;833    	SystemParemater.RomPar.Cotp[2].ReleaseTime = 10;
000040  75a5              STRB     r5,[r4,#0x16]
;;;834    }
000042  bd70              POP      {r4-r6,pc}
;;;835    static void setDefaultCutpValue(void)
                          ENDP

                  |L117.68|
                          DCD      ||.bss||+0x28a

                          AREA ||i.setDefaultCutpValue||, CODE, READONLY, ALIGN=2

                  setDefaultCutpValue PROC
;;;834    }
;;;835    static void setDefaultCutpValue(void)
000000  b570              PUSH     {r4-r6,lr}
;;;836    {
;;;837    	SystemParemater.RomPar.Cutp[0].SetValue = 
000002  2005              MOVS     r0,#5
000004  f7fffffe          BL       LibSetRealTemperatureToInternalValue
000008  4c0e              LDR      r4,|L118.68|
00000a  8020              STRH     r0,[r4,#0]
;;;838    			LibSetRealTemperatureToInternalValue(5);
;;;839    	SystemParemater.RomPar.Cutp[0].SetTime = 10;
00000c  250a              MOVS     r5,#0xa
00000e  70a5              STRB     r5,[r4,#2]
;;;840    	SystemParemater.RomPar.Cutp[0].ReleaseValue = 
000010  200a              MOVS     r0,#0xa
000012  f7fffffe          BL       LibSetRealTemperatureToInternalValue
000016  80a0              STRH     r0,[r4,#4]
;;;841    			LibSetRealTemperatureToInternalValue(10);
;;;842    	SystemParemater.RomPar.Cutp[0].ReleaseTime = 10;
000018  71a5              STRB     r5,[r4,#6]
;;;843                        
;;;844    	SystemParemater.RomPar.Cutp[1].SetValue = 
00001a  2002              MOVS     r0,#2
00001c  f7fffffe          BL       LibSetRealTemperatureToInternalValue
000020  8120              STRH     r0,[r4,#8]
;;;845    			LibSetRealTemperatureToInternalValue(2);
;;;846    	SystemParemater.RomPar.Cutp[1].SetTime = 10;
000022  72a5              STRB     r5,[r4,#0xa]
;;;847    	SystemParemater.RomPar.Cutp[1].ReleaseValue = 
000024  2005              MOVS     r0,#5
000026  f7fffffe          BL       LibSetRealTemperatureToInternalValue
00002a  81a0              STRH     r0,[r4,#0xc]
;;;848    			LibSetRealTemperatureToInternalValue(5);
;;;849    	SystemParemater.RomPar.Cutp[1].ReleaseTime = 10;
00002c  73a5              STRB     r5,[r4,#0xe]
;;;850                        
;;;851    	SystemParemater.RomPar.Cutp[2].SetValue = 
00002e  2000              MOVS     r0,#0
000030  f7fffffe          BL       LibSetRealTemperatureToInternalValue
000034  8220              STRH     r0,[r4,#0x10]
;;;852    			LibSetRealTemperatureToInternalValue(0);
;;;853    	SystemParemater.RomPar.Cutp[2].SetTime = 10;
000036  74a5              STRB     r5,[r4,#0x12]
;;;854    	SystemParemater.RomPar.Cutp[2].ReleaseValue = 
000038  2005              MOVS     r0,#5
00003a  f7fffffe          BL       LibSetRealTemperatureToInternalValue
00003e  82a0              STRH     r0,[r4,#0x14]
;;;855    			LibSetRealTemperatureToInternalValue(5);
;;;856    	SystemParemater.RomPar.Cutp[2].ReleaseTime = 10;
000040  75a5              STRB     r5,[r4,#0x16]
;;;857    }
000042  bd70              POP      {r4-r6,pc}
;;;858    static void setDefaultDotpValue(void)
                          ENDP

                  |L118.68|
                          DCD      ||.bss||+0x2a2

                          AREA ||i.setDefaultDocpValue||, CODE, READONLY, ALIGN=2

                  setDefaultDocpValue PROC
;;;923    
;;;924    static void setDefaultDocpValue(void)
000000  480c              LDR      r0,|L119.52|
;;;925    {
;;;926    	SystemParemater.RomPar.Docp[0].SetValue = 96;
000002  2160              MOVS     r1,#0x60
000004  8001              STRH     r1,[r0,#0]
;;;927    	SystemParemater.RomPar.Docp[0].SetTime = 10;
000006  210a              MOVS     r1,#0xa
000008  7081              STRB     r1,[r0,#2]
;;;928    	SystemParemater.RomPar.Docp[0].ReleaseValue = 91;
00000a  215b              MOVS     r1,#0x5b
00000c  8081              STRH     r1,[r0,#4]
;;;929    	SystemParemater.RomPar.Docp[0].ReleaseTime = 11;
00000e  210b              MOVS     r1,#0xb
000010  7181              STRB     r1,[r0,#6]
;;;930                        
;;;931    	SystemParemater.RomPar.Docp[1].SetValue = 101;
000012  2165              MOVS     r1,#0x65
000014  8101              STRH     r1,[r0,#8]
;;;932    	SystemParemater.RomPar.Docp[1].SetTime = 12;
000016  210c              MOVS     r1,#0xc
000018  7281              STRB     r1,[r0,#0xa]
;;;933    	SystemParemater.RomPar.Docp[1].ReleaseValue = 98;
00001a  2162              MOVS     r1,#0x62
00001c  8181              STRH     r1,[r0,#0xc]
;;;934    	SystemParemater.RomPar.Docp[1].ReleaseTime = 13;
00001e  210d              MOVS     r1,#0xd
000020  7381              STRB     r1,[r0,#0xe]
;;;935                        
;;;936    	SystemParemater.RomPar.Docp[2].SetValue = 106;
000022  216a              MOVS     r1,#0x6a
000024  8201              STRH     r1,[r0,#0x10]
;;;937    	SystemParemater.RomPar.Docp[2].SetTime = 14;
000026  210e              MOVS     r1,#0xe
000028  7481              STRB     r1,[r0,#0x12]
;;;938    	SystemParemater.RomPar.Docp[2].ReleaseValue = 103;
00002a  2167              MOVS     r1,#0x67
00002c  8281              STRH     r1,[r0,#0x14]
;;;939    	SystemParemater.RomPar.Docp[2].ReleaseTime = 15;
00002e  210f              MOVS     r1,#0xf
000030  7581              STRB     r1,[r0,#0x16]
;;;940    }
000032  4770              BX       lr
;;;941    static void setDefaultBalanceValue(void)
                          ENDP

                  |L119.52|
                          DCD      ||.bss||+0x31a

                          AREA ||i.setDefaultDotpValue||, CODE, READONLY, ALIGN=2

                  setDefaultDotpValue PROC
;;;857    }
;;;858    static void setDefaultDotpValue(void)
000000  b570              PUSH     {r4-r6,lr}
;;;859    {
;;;860    	SystemParemater.RomPar.Dotp[0].SetValue = 
000002  202d              MOVS     r0,#0x2d
000004  f7fffffe          BL       LibSetRealTemperatureToInternalValue
000008  4c0e              LDR      r4,|L120.68|
00000a  8020              STRH     r0,[r4,#0]
;;;861    			LibSetRealTemperatureToInternalValue(45);
;;;862    	SystemParemater.RomPar.Dotp[0].SetTime = 10;
00000c  250a              MOVS     r5,#0xa
00000e  70a5              STRB     r5,[r4,#2]
;;;863    	SystemParemater.RomPar.Dotp[0].ReleaseValue = 
000010  2028              MOVS     r0,#0x28
000012  f7fffffe          BL       LibSetRealTemperatureToInternalValue
000016  80a0              STRH     r0,[r4,#4]
;;;864    			LibSetRealTemperatureToInternalValue(40);
;;;865    	SystemParemater.RomPar.Dotp[0].ReleaseTime = 10;
000018  71a5              STRB     r5,[r4,#6]
;;;866                        
;;;867    	SystemParemater.RomPar.Dotp[1].SetValue = 
00001a  2032              MOVS     r0,#0x32
00001c  f7fffffe          BL       LibSetRealTemperatureToInternalValue
000020  8120              STRH     r0,[r4,#8]
;;;868    			LibSetRealTemperatureToInternalValue(50);
;;;869    	SystemParemater.RomPar.Dotp[1].SetTime = 10;
000022  72a5              STRB     r5,[r4,#0xa]
;;;870    	SystemParemater.RomPar.Dotp[1].ReleaseValue = 
000024  202d              MOVS     r0,#0x2d
000026  f7fffffe          BL       LibSetRealTemperatureToInternalValue
00002a  81a0              STRH     r0,[r4,#0xc]
;;;871    			LibSetRealTemperatureToInternalValue(45);
;;;872    	SystemParemater.RomPar.Dotp[1].ReleaseTime = 10;
00002c  73a5              STRB     r5,[r4,#0xe]
;;;873                        
;;;874    	SystemParemater.RomPar.Dotp[2].SetValue = 
00002e  2035              MOVS     r0,#0x35
000030  f7fffffe          BL       LibSetRealTemperatureToInternalValue
000034  8220              STRH     r0,[r4,#0x10]
;;;875    			LibSetRealTemperatureToInternalValue(53);
;;;876    	SystemParemater.RomPar.Dotp[2].SetTime = 10;
000036  74a5              STRB     r5,[r4,#0x12]
;;;877    	SystemParemater.RomPar.Dotp[2].ReleaseValue = 
000038  202d              MOVS     r0,#0x2d
00003a  f7fffffe          BL       LibSetRealTemperatureToInternalValue
00003e  82a0              STRH     r0,[r4,#0x14]
;;;878    			LibSetRealTemperatureToInternalValue(45);
;;;879    	SystemParemater.RomPar.Dotp[2].ReleaseTime = 10;
000040  75a5              STRB     r5,[r4,#0x16]
;;;880    	
;;;881    }
000042  bd70              POP      {r4-r6,pc}
;;;882    static void setDefaultDutpValue(void)
                          ENDP

                  |L120.68|
                          DCD      ||.bss||+0x2ba

                          AREA ||i.setDefaultDutpValue||, CODE, READONLY, ALIGN=2

                  setDefaultDutpValue PROC
;;;881    }
;;;882    static void setDefaultDutpValue(void)
000000  b570              PUSH     {r4-r6,lr}
;;;883    {
;;;884    	SystemParemater.RomPar.Dutp[0].SetValue = 
000002  f06f0009          MVN      r0,#9
000006  f7fffffe          BL       LibSetRealTemperatureToInternalValue
00000a  4c11              LDR      r4,|L121.80|
00000c  8020              STRH     r0,[r4,#0]
;;;885    			LibSetRealTemperatureToInternalValue(-10);
;;;886    	SystemParemater.RomPar.Dutp[0].SetTime = 10;
00000e  250a              MOVS     r5,#0xa
000010  70a5              STRB     r5,[r4,#2]
;;;887    	SystemParemater.RomPar.Dutp[0].ReleaseValue = 
000012  f06f0004          MVN      r0,#4
000016  f7fffffe          BL       LibSetRealTemperatureToInternalValue
00001a  80a0              STRH     r0,[r4,#4]
;;;888    			LibSetRealTemperatureToInternalValue(-5);
;;;889    	SystemParemater.RomPar.Dutp[0].ReleaseTime = 10;
00001c  71a5              STRB     r5,[r4,#6]
;;;890                        
;;;891    	SystemParemater.RomPar.Dutp[1].SetValue = 
00001e  f06f000e          MVN      r0,#0xe
000022  f7fffffe          BL       LibSetRealTemperatureToInternalValue
000026  8120              STRH     r0,[r4,#8]
;;;892    			LibSetRealTemperatureToInternalValue(-15);
;;;893    	SystemParemater.RomPar.Dutp[1].SetTime = 10;
000028  72a5              STRB     r5,[r4,#0xa]
;;;894    	SystemParemater.RomPar.Dutp[1].ReleaseValue = 
00002a  f06f000b          MVN      r0,#0xb
00002e  f7fffffe          BL       LibSetRealTemperatureToInternalValue
000032  81a0              STRH     r0,[r4,#0xc]
;;;895    			LibSetRealTemperatureToInternalValue(-12);
;;;896    	SystemParemater.RomPar.Dutp[1].ReleaseTime = 10;
000034  73a5              STRB     r5,[r4,#0xe]
;;;897                        
;;;898    	SystemParemater.RomPar.Dutp[2].SetValue = 
000036  f06f0018          MVN      r0,#0x18
00003a  f7fffffe          BL       LibSetRealTemperatureToInternalValue
00003e  8220              STRH     r0,[r4,#0x10]
;;;899    			LibSetRealTemperatureToInternalValue(-25);
;;;900    	SystemParemater.RomPar.Dutp[2].SetTime = 10;
000040  74a5              STRB     r5,[r4,#0x12]
;;;901    	SystemParemater.RomPar.Dutp[2].ReleaseValue = 
000042  f06f0011          MVN      r0,#0x11
000046  f7fffffe          BL       LibSetRealTemperatureToInternalValue
00004a  82a0              STRH     r0,[r4,#0x14]
;;;902    			LibSetRealTemperatureToInternalValue(-18);
;;;903    	SystemParemater.RomPar.Dutp[2].ReleaseTime = 10;
00004c  75a5              STRB     r5,[r4,#0x16]
;;;904    }
00004e  bd70              POP      {r4-r6,pc}
;;;905    
                          ENDP

                  |L121.80|
                          DCD      ||.bss||+0x2d2

                          AREA ||i.setDefaultOcvTable||, CODE, READONLY, ALIGN=2

                  setDefaultOcvTable PROC
;;;962    }
;;;963    static void setDefaultOcvTable(void)
000000  b510              PUSH     {r4,lr}
;;;964    {
000002  b098              SUB      sp,sp,#0x60
;;;965    	uint8_t		i;
;;;966    	tOcvRaTable	Ocv[]={
000004  225c              MOVS     r2,#0x5c
000006  490d              LDR      r1,|L122.60|
000008  a801              ADD      r0,sp,#4
00000a  f7fffffe          BL       __aeabi_memcpy4
;;;967    		{0,		2706},
;;;968    		{2,		3051},
;;;969    		{4,		3159},
;;;970    		{5,		3196},
;;;971    		{8,		3224},
;;;972    		{10,	3226},
;;;973    		{15,	3249},
;;;974    		{20,	3278},
;;;975    		{25,	3300},
;;;976    		{30,	3307},
;;;977    		{35,	3308},
;;;978    		{40,	3308},
;;;979    		{45,	3309},
;;;980    		{50,	3311},
;;;981    		{60,	3316},
;;;982    		{75,	3343},
;;;983    		{85,	3344},
;;;984    		{94,	3344},
;;;985    		{95,	3344},
;;;986    		{98,	3345},
;;;987    		{99,	3346},
;;;988    		{100,	3360},
;;;989    		{255,	65535}};
;;;990    	
;;;991    	for(i=0; i<25; i++)
00000e  2000              MOVS     r0,#0
;;;992    	{
;;;993    		if(Ocv[i].Level == 255)
;;;994    			break;
;;;995    		SystemParemater.RomPar.OcvTable[i].Level = Ocv[i].Level;
000010  4c0b              LDR      r4,|L122.64|
000012  ab01              ADD      r3,sp,#4              ;966
                  |L122.20|
000014  f8131020          LDRB     r1,[r3,r0,LSL #2]     ;993
000018  29ff              CMP      r1,#0xff              ;993
00001a  d00c              BEQ      |L122.54|
00001c  eb040280          ADD      r2,r4,r0,LSL #2
000020  f8821312          STRB     r1,[r2,#0x312]
;;;996    		SystemParemater.RomPar.OcvTable[i].Value = Ocv[i].Value;
000024  eb030180          ADD      r1,r3,r0,LSL #2
000028  8849              LDRH     r1,[r1,#2]
00002a  f8a21314          STRH     r1,[r2,#0x314]
00002e  1c40              ADDS     r0,r0,#1              ;991
000030  b2c0              UXTB     r0,r0                 ;991
000032  2819              CMP      r0,#0x19              ;991
000034  d3ee              BCC      |L122.20|
                  |L122.54|
;;;997    	}
;;;998    
;;;999    }
000036  b018              ADD      sp,sp,#0x60
000038  bd10              POP      {r4,pc}
;;;1000   static void setDefaultRaTable(void)
                          ENDP

00003a  0000              DCW      0x0000
                  |L122.60|
                          DCD      ||.constdata||
                  |L122.64|
                          DCD      ||.bss||+0x20

                          AREA ||i.setDefaultOvpPfValue||, CODE, READONLY, ALIGN=2

                  setDefaultOvpPfValue PROC
;;;1033   
;;;1034   static void setDefaultOvpPfValue(void)
000000  4804              LDR      r0,|L123.20|
;;;1035   {
;;;1036   	SystemParemater.RomPar.OvpPf.SetValue = 4500;
000002  f2411194          MOV      r1,#0x1194
000006  f8a013da          STRH     r1,[r0,#0x3da]
;;;1037   	SystemParemater.RomPar.OvpPf.SetTime = 20;
00000a  2114              MOVS     r1,#0x14
00000c  f88013dc          STRB     r1,[r0,#0x3dc]
;;;1038   }
000010  4770              BX       lr
;;;1039   
                          ENDP

000012  0000              DCW      0x0000
                  |L123.20|
                          DCD      ||.bss||+0x20

                          AREA ||i.setDefaultOvpValue||, CODE, READONLY, ALIGN=2

                  setDefaultOvpValue PROC
;;;776    
;;;777    static void setDefaultOvpValue(void)
000000  480d              LDR      r0,|L124.56|
;;;778    {
;;;779    	SystemParemater.RomPar.Ovp[0].SetValue = 3400;
000002  f6405148          MOV      r1,#0xd48
000006  8001              STRH     r1,[r0,#0]
;;;780    	SystemParemater.RomPar.Ovp[0].SetTime = 10;
000008  210a              MOVS     r1,#0xa
00000a  7081              STRB     r1,[r0,#2]
;;;781    	SystemParemater.RomPar.Ovp[0].ReleaseValue = 3350;
00000c  f6405216          MOV      r2,#0xd16
000010  8082              STRH     r2,[r0,#4]
;;;782    	SystemParemater.RomPar.Ovp[0].ReleaseTime = 10;
000012  7181              STRB     r1,[r0,#6]
;;;783             
;;;784    	SystemParemater.RomPar.Ovp[1].SetValue = 3500;
000014  f64052ac          MOV      r2,#0xdac
000018  8102              STRH     r2,[r0,#8]
;;;785    	SystemParemater.RomPar.Ovp[1].SetTime = 10;
00001a  7281              STRB     r1,[r0,#0xa]
;;;786    	SystemParemater.RomPar.Ovp[1].ReleaseValue = 3450;
00001c  f640527a          MOV      r2,#0xd7a
000020  8182              STRH     r2,[r0,#0xc]
;;;787    	SystemParemater.RomPar.Ovp[1].ReleaseTime = 10;
000022  7381              STRB     r1,[r0,#0xe]
;;;788             
;;;789    	SystemParemater.RomPar.Ovp[2].SetValue = 3600;
000024  f44f6261          MOV      r2,#0xe10
000028  8202              STRH     r2,[r0,#0x10]
;;;790    	SystemParemater.RomPar.Ovp[2].SetTime = 10;
00002a  7481              STRB     r1,[r0,#0x12]
;;;791    	SystemParemater.RomPar.Ovp[2].ReleaseValue = 3550;
00002c  f64052de          MOV      r2,#0xdde
000030  8282              STRH     r2,[r0,#0x14]
;;;792    	SystemParemater.RomPar.Ovp[2].ReleaseTime = 10;
000032  7581              STRB     r1,[r0,#0x16]
;;;793    }
000034  4770              BX       lr
;;;794    static void setDefaultUvpValue(void)
                          ENDP

000036  0000              DCW      0x0000
                  |L124.56|
                          DCD      ||.bss||+0x25a

                          AREA ||i.setDefaultRaTable||, CODE, READONLY, ALIGN=2

                  setDefaultRaTable PROC
;;;999    }
;;;1000   static void setDefaultRaTable(void)
000000  b510              PUSH     {r4,lr}
;;;1001   {
000002  b096              SUB      sp,sp,#0x58
;;;1002   	uint8_t		i;
;;;1003   	tOcvRaTable	Ra[]={
000004  2254              MOVS     r2,#0x54
000006  490d              LDR      r1,|L125.60|
000008  a801              ADD      r0,sp,#4
00000a  f7fffffe          BL       __aeabi_memcpy4
;;;1004   		{0,		119},
;;;1005   		{2,		114},
;;;1006   		{4,		110},
;;;1007   		{5,		108},
;;;1008   		{8,		97},
;;;1009   		{10,	97},
;;;1010   		{15,	105},
;;;1011   		{20,	98},
;;;1012   		{25,	96},
;;;1013   		{30,	95},
;;;1014   		{35,	97},
;;;1015   		{40,	102},
;;;1016   		{45,	106},
;;;1017   		{60,	102},
;;;1018   		{75,	102},
;;;1019   		{85,	98},
;;;1020   		{94,	101},
;;;1021   		{98,	103},
;;;1022   		{99,	103},
;;;1023   		{100,	104},
;;;1024   		{255,	65535}};
;;;1025   	for(i=0; i<25; i++)
00000e  2000              MOVS     r0,#0
;;;1026   	{
;;;1027   		if(Ra[i].Level == 255)
;;;1028   			break;
;;;1029   		SystemParemater.RomPar.RaTable[i].Level = Ra[i].Level;
000010  4c0b              LDR      r4,|L125.64|
000012  ab01              ADD      r3,sp,#4              ;1003
                  |L125.20|
000014  f8131020          LDRB     r1,[r3,r0,LSL #2]     ;1027
000018  29ff              CMP      r1,#0xff              ;1027
00001a  d00c              BEQ      |L125.54|
00001c  eb040280          ADD      r2,r4,r0,LSL #2
000020  f8821376          STRB     r1,[r2,#0x376]
;;;1030   		SystemParemater.RomPar.RaTable[i].Value = Ra[i].Value;
000024  eb030180          ADD      r1,r3,r0,LSL #2
000028  8849              LDRH     r1,[r1,#2]
00002a  f8a21378          STRH     r1,[r2,#0x378]
00002e  1c40              ADDS     r0,r0,#1              ;1025
000030  b2c0              UXTB     r0,r0                 ;1025
000032  2819              CMP      r0,#0x19              ;1025
000034  d3ee              BCC      |L125.20|
                  |L125.54|
;;;1031   	}
;;;1032   }
000036  b016              ADD      sp,sp,#0x58
000038  bd10              POP      {r4,pc}
;;;1033   
                          ENDP

00003a  0000              DCW      0x0000
                  |L125.60|
                          DCD      ||.constdata||+0x5c
                  |L125.64|
                          DCD      ||.bss||+0x20

                          AREA ||i.setDefaultUvpPfValue||, CODE, READONLY, ALIGN=2

                  setDefaultUvpPfValue PROC
;;;1039   
;;;1040   static void setDefaultUvpPfValue(void)
000000  4804              LDR      r0,|L126.20|
;;;1041   {
;;;1042   	SystemParemater.RomPar.UvpPf.SetValue = 1500;
000002  f24051dc          MOV      r1,#0x5dc
000006  f8a013de          STRH     r1,[r0,#0x3de]
;;;1043   	SystemParemater.RomPar.UvpPf.SetTime = 20;
00000a  2114              MOVS     r1,#0x14
00000c  f88013e0          STRB     r1,[r0,#0x3e0]
;;;1044   }
000010  4770              BX       lr
;;;1045   
                          ENDP

000012  0000              DCW      0x0000
                  |L126.20|
                          DCD      ||.bss||+0x20

                          AREA ||i.setDefaultUvpValue||, CODE, READONLY, ALIGN=2

                  setDefaultUvpValue PROC
;;;793    }
;;;794    static void setDefaultUvpValue(void)
000000  480d              LDR      r0,|L127.56|
;;;795    {
;;;796    	SystemParemater.RomPar.Uvp[0].SetValue =3000;
000002  f64031b8          MOV      r1,#0xbb8
000006  8001              STRH     r1,[r0,#0]
;;;797    	SystemParemater.RomPar.Uvp[0].SetTime = 10;
000008  210a              MOVS     r1,#0xa
00000a  7081              STRB     r1,[r0,#2]
;;;798    	SystemParemater.RomPar.Uvp[0].ReleaseValue = 2950;
00000c  f6403286          MOV      r2,#0xb86
000010  8082              STRH     r2,[r0,#4]
;;;799    	SystemParemater.RomPar.Uvp[0].ReleaseTime = 10;
000012  7181              STRB     r1,[r0,#6]
;;;800    	
;;;801    	SystemParemater.RomPar.Uvp[1].SetValue = 2700;
000014  f640228c          MOV      r2,#0xa8c
000018  8102              STRH     r2,[r0,#8]
;;;802    	SystemParemater.RomPar.Uvp[1].SetTime = 10;
00001a  7281              STRB     r1,[r0,#0xa]
;;;803    	SystemParemater.RomPar.Uvp[1].ReleaseValue = 2750;
00001c  f64022be          MOV      r2,#0xabe
000020  8182              STRH     r2,[r0,#0xc]
;;;804    	SystemParemater.RomPar.Uvp[1].ReleaseTime = 10;
000022  7381              STRB     r1,[r0,#0xe]
;;;805                       
;;;806    	SystemParemater.RomPar.Uvp[2].SetValue = 2600;
000024  f6402228          MOV      r2,#0xa28
000028  8202              STRH     r2,[r0,#0x10]
;;;807    	SystemParemater.RomPar.Uvp[2].SetTime = 10;
00002a  7481              STRB     r1,[r0,#0x12]
;;;808    	SystemParemater.RomPar.Uvp[2].ReleaseValue = 2650;
00002c  f640225a          MOV      r2,#0xa5a
000030  8282              STRH     r2,[r0,#0x14]
;;;809    	SystemParemater.RomPar.Uvp[2].ReleaseTime = 10;	
000032  7581              STRB     r1,[r0,#0x16]
;;;810    	
;;;811    }
000034  4770              BX       lr
;;;812    static void setDefaultCotpValue(void)
                          ENDP

000036  0000              DCW      0x0000
                  |L127.56|
                          DCD      ||.bss||+0x272

                          AREA ||i.setSysParRamValue||, CODE, READONLY, ALIGN=2

                  setSysParRamValue PROC
;;;1099   }
;;;1100   static void setSysParRamValue(void)
000000  b510              PUSH     {r4,lr}
;;;1101   {
;;;1102   	SystemParemater.RamPar.Cotp[0].SetAdcValue = 
000002  4c4f              LDR      r4,|L128.320|
000004  f9b40000          LDRSH    r0,[r4,#0]  ; SystemParemater
000008  f7fffffe          BL       LibTemperatureToVoltage
00000c  f8a40202          STRH     r0,[r4,#0x202]
;;;1103   				LibTemperatureToVoltage(SystemParemater.RomPar.Cotp[0].SetValue);
;;;1104   	SystemParemater.RamPar.Cotp[0].ReleaseAdcValue = 
000010  f9b40004          LDRSH    r0,[r4,#4]  ; SystemParemater
000014  f7fffffe          BL       LibTemperatureToVoltage
000018  f8a40204          STRH     r0,[r4,#0x204]
;;;1105   				LibTemperatureToVoltage(SystemParemater.RomPar.Cotp[0].ReleaseValue);
;;;1106   	SystemParemater.RamPar.Cotp[1].SetAdcValue = 
00001c  f9b40008          LDRSH    r0,[r4,#8]  ; SystemParemater
000020  f7fffffe          BL       LibTemperatureToVoltage
000024  f8a40206          STRH     r0,[r4,#0x206]
;;;1107   				LibTemperatureToVoltage(SystemParemater.RomPar.Cotp[1].SetValue);
;;;1108   	SystemParemater.RamPar.Cotp[1].ReleaseAdcValue = 
000028  f9b4000c          LDRSH    r0,[r4,#0xc]  ; SystemParemater
00002c  f7fffffe          BL       LibTemperatureToVoltage
000030  f8a40208          STRH     r0,[r4,#0x208]
;;;1109   				LibTemperatureToVoltage(SystemParemater.RomPar.Cotp[1].ReleaseValue);
;;;1110   	SystemParemater.RamPar.Cotp[2].SetAdcValue = 
000034  f9b40010          LDRSH    r0,[r4,#0x10]  ; SystemParemater
000038  f7fffffe          BL       LibTemperatureToVoltage
00003c  f8a4020a          STRH     r0,[r4,#0x20a]
;;;1111   				LibTemperatureToVoltage(SystemParemater.RomPar.Cotp[2].SetValue);
;;;1112   	SystemParemater.RamPar.Cotp[2].ReleaseAdcValue = 
000040  f9b40014          LDRSH    r0,[r4,#0x14]  ; SystemParemater
000044  f7fffffe          BL       LibTemperatureToVoltage
000048  f8a4020c          STRH     r0,[r4,#0x20c]
;;;1113   				LibTemperatureToVoltage(SystemParemater.RomPar.Cotp[2].ReleaseValue);
;;;1114   
;;;1115   	SystemParemater.RamPar.Cutp[0].SetAdcValue = 
00004c  f9b40018          LDRSH    r0,[r4,#0x18]  ; SystemParemater
000050  f7fffffe          BL       LibTemperatureToVoltage
000054  f8a4020e          STRH     r0,[r4,#0x20e]
;;;1116   				LibTemperatureToVoltage(SystemParemater.RomPar.Cutp[0].SetValue);
;;;1117   	SystemParemater.RamPar.Cutp[0].ReleaseAdcValue = 
000058  f9b4001c          LDRSH    r0,[r4,#0x1c]  ; SystemParemater
00005c  f7fffffe          BL       LibTemperatureToVoltage
000060  f8a40210          STRH     r0,[r4,#0x210]
;;;1118   				LibTemperatureToVoltage(SystemParemater.RomPar.Cutp[0].ReleaseValue);
;;;1119   	SystemParemater.RamPar.Cutp[1].SetAdcValue = 
000064  f9b40020          LDRSH    r0,[r4,#0x20]  ; SystemParemater
000068  f7fffffe          BL       LibTemperatureToVoltage
00006c  f8a40212          STRH     r0,[r4,#0x212]
;;;1120   				LibTemperatureToVoltage(SystemParemater.RomPar.Cutp[1].SetValue);
;;;1121   	SystemParemater.RamPar.Cutp[1].ReleaseAdcValue = 
000070  f9b40024          LDRSH    r0,[r4,#0x24]  ; SystemParemater
000074  f7fffffe          BL       LibTemperatureToVoltage
000078  f8a40214          STRH     r0,[r4,#0x214]
;;;1122   				LibTemperatureToVoltage(SystemParemater.RomPar.Cutp[1].ReleaseValue);
;;;1123   	SystemParemater.RamPar.Cutp[2].SetAdcValue = 
00007c  f9b40028          LDRSH    r0,[r4,#0x28]  ; SystemParemater
000080  f7fffffe          BL       LibTemperatureToVoltage
000084  f8a40216          STRH     r0,[r4,#0x216]
;;;1124   				LibTemperatureToVoltage(SystemParemater.RomPar.Cutp[2].SetValue);
;;;1125   	SystemParemater.RamPar.Cutp[2].ReleaseAdcValue = 
000088  f9b4002c          LDRSH    r0,[r4,#0x2c]  ; SystemParemater
00008c  f7fffffe          BL       LibTemperatureToVoltage
000090  f8a40218          STRH     r0,[r4,#0x218]
;;;1126   				LibTemperatureToVoltage(SystemParemater.RomPar.Cutp[2].ReleaseValue);
;;;1127   
;;;1128   	SystemParemater.RamPar.Dotp[0].SetAdcValue = 
000094  f9b40030          LDRSH    r0,[r4,#0x30]  ; SystemParemater
000098  f7fffffe          BL       LibTemperatureToVoltage
00009c  f8a4021a          STRH     r0,[r4,#0x21a]
;;;1129   				LibTemperatureToVoltage(SystemParemater.RomPar.Dotp[0].SetValue);
;;;1130   	SystemParemater.RamPar.Dotp[0].ReleaseAdcValue = 
0000a0  f9b40034          LDRSH    r0,[r4,#0x34]  ; SystemParemater
0000a4  f7fffffe          BL       LibTemperatureToVoltage
0000a8  f8a4021c          STRH     r0,[r4,#0x21c]
;;;1131   				LibTemperatureToVoltage(SystemParemater.RomPar.Dotp[0].ReleaseValue);
;;;1132   	SystemParemater.RamPar.Dotp[1].SetAdcValue = 
0000ac  f9b40038          LDRSH    r0,[r4,#0x38]  ; SystemParemater
0000b0  f7fffffe          BL       LibTemperatureToVoltage
0000b4  f8a4021e          STRH     r0,[r4,#0x21e]
;;;1133   				LibTemperatureToVoltage(SystemParemater.RomPar.Dotp[1].SetValue);
;;;1134   	SystemParemater.RamPar.Dotp[1].ReleaseAdcValue = 
0000b8  f9b4003c          LDRSH    r0,[r4,#0x3c]  ; SystemParemater
0000bc  f7fffffe          BL       LibTemperatureToVoltage
0000c0  f8a40220          STRH     r0,[r4,#0x220]
;;;1135   				LibTemperatureToVoltage(SystemParemater.RomPar.Dotp[1].ReleaseValue);
;;;1136   	SystemParemater.RamPar.Dotp[2].SetAdcValue = 
0000c4  f9b40040          LDRSH    r0,[r4,#0x40]  ; SystemParemater
0000c8  f7fffffe          BL       LibTemperatureToVoltage
0000cc  f8a40222          STRH     r0,[r4,#0x222]
;;;1137   				LibTemperatureToVoltage(SystemParemater.RomPar.Dotp[2].SetValue);
;;;1138   	SystemParemater.RamPar.Dotp[2].ReleaseAdcValue = 
0000d0  f9b40044          LDRSH    r0,[r4,#0x44]  ; SystemParemater
0000d4  f7fffffe          BL       LibTemperatureToVoltage
0000d8  f8a40224          STRH     r0,[r4,#0x224]
;;;1139   				LibTemperatureToVoltage(SystemParemater.RomPar.Dotp[2].ReleaseValue);
;;;1140   
;;;1141   	SystemParemater.RamPar.Dutp[0].SetAdcValue = 
0000dc  f9b40048          LDRSH    r0,[r4,#0x48]  ; SystemParemater
0000e0  f7fffffe          BL       LibTemperatureToVoltage
0000e4  f8a40226          STRH     r0,[r4,#0x226]
;;;1142   				LibTemperatureToVoltage(SystemParemater.RomPar.Dutp[0].SetValue);
;;;1143   	SystemParemater.RamPar.Dutp[0].ReleaseAdcValue = 
0000e8  f9b4004c          LDRSH    r0,[r4,#0x4c]  ; SystemParemater
0000ec  f7fffffe          BL       LibTemperatureToVoltage
0000f0  f8a40228          STRH     r0,[r4,#0x228]
;;;1144   				LibTemperatureToVoltage(SystemParemater.RomPar.Dutp[0].ReleaseValue);
;;;1145   	SystemParemater.RamPar.Dutp[1].SetAdcValue = 
0000f4  f9b40050          LDRSH    r0,[r4,#0x50]  ; SystemParemater
0000f8  f7fffffe          BL       LibTemperatureToVoltage
0000fc  f8a4022a          STRH     r0,[r4,#0x22a]
;;;1146   				LibTemperatureToVoltage(SystemParemater.RomPar.Dutp[1].SetValue);
;;;1147   	SystemParemater.RamPar.Dutp[1].ReleaseAdcValue = 
000100  f9b40054          LDRSH    r0,[r4,#0x54]  ; SystemParemater
000104  f7fffffe          BL       LibTemperatureToVoltage
000108  f8a4022c          STRH     r0,[r4,#0x22c]
;;;1148   				LibTemperatureToVoltage(SystemParemater.RomPar.Dutp[1].ReleaseValue);
;;;1149   	SystemParemater.RamPar.Dutp[2].SetAdcValue = 
00010c  f9b40058          LDRSH    r0,[r4,#0x58]  ; SystemParemater
000110  f7fffffe          BL       LibTemperatureToVoltage
000114  f8a4022e          STRH     r0,[r4,#0x22e]
;;;1150   				LibTemperatureToVoltage(SystemParemater.RomPar.Dutp[2].SetValue);
;;;1151   	SystemParemater.RamPar.Dutp[2].ReleaseAdcValue = 
000118  f9b4005c          LDRSH    r0,[r4,#0x5c]  ; SystemParemater
00011c  f7fffffe          BL       LibTemperatureToVoltage
000120  f8a40230          STRH     r0,[r4,#0x230]
;;;1152   				LibTemperatureToVoltage(SystemParemater.RomPar.Dutp[2].ReleaseValue);
;;;1153   
;;;1154   	SystemParemater.RamPar.Balance.TempSetAdcValue = 
000124  f894017a          LDRB     r0,[r4,#0x17a]  ; SystemParemater
000128  f7fffffe          BL       LibTemperatureToVoltage
00012c  f8a40232          STRH     r0,[r4,#0x232]
;;;1155   					LibTemperatureToVoltage(SystemParemater.RomPar.Balance.TempSet);
;;;1156   	SystemParemater.RamPar.Balance.TempReleaseAdcValue = 
000130  f894017b          LDRB     r0,[r4,#0x17b]  ; SystemParemater
000134  f7fffffe          BL       LibTemperatureToVoltage
000138  f8a40234          STRH     r0,[r4,#0x234]
;;;1157   					LibTemperatureToVoltage(SystemParemater.RomPar.Balance.TempRelease);
;;;1158   }
00013c  bd10              POP      {r4,pc}
;;;1159   
                          ENDP

00013e  0000              DCW      0x0000
                  |L128.320|
                          DCD      ||.bss||+0x28a

                          AREA ||i.sysParSetDefaultRomValue||, CODE, READONLY, ALIGN=2

                  sysParSetDefaultRomValue PROC
;;;1045   
;;;1046   static void sysParSetDefaultRomValue(void)
000000  b510              PUSH     {r4,lr}
;;;1047   {
;;;1048   	uint8_t	i;
;;;1049   	
;;;1050   	
;;;1051   	SystemParemater.RomPar.HwVersion=0x0102;
000002  4833              LDR      r0,|L129.208|
000004  f44f7181          MOV      r1,#0x102
000008  6101              STR      r1,[r0,#0x10]  ; SystemParemater
;;;1052   	SystemParemater.RomPar.ZeroCurrent = 200;
00000a  23c8              MOVS     r3,#0xc8
;;;1053   	SystemParemater.RomPar.MinChargeDischargeCurrent = 500;
;;;1054   	SystemParemater.RomPar.MinFlatVoltage = 3278;
00000c  f64041ce          MOV      r1,#0xcce
000010  8381              STRH     r1,[r0,#0x1c]
;;;1055   	SystemParemater.RomPar.MaxFlatVoltage = 3344;
000012  f44f6151          MOV      r1,#0xd10
000016  83c1              STRH     r1,[r0,#0x1e]
;;;1056   	SystemParemater.RomPar.TerminateVoltage = 3000;
000018  f64031b8          MOV      r1,#0xbb8
00001c  f8a01222          STRH     r1,[r0,#0x222]
;;;1057   	SystemParemater.RomPar.OtHwSetValue = (40+60);
000020  2264              MOVS     r2,#0x64
000022  f8a02224          STRH     r2,[r0,#0x224]
;;;1058   	SystemParemater.RomPar.UtHwSetValue = (40-10);
000026  211e              MOVS     r1,#0x1e
000028  f8a01226          STRH     r1,[r0,#0x226]
;;;1059   	SystemParemater.RomPar.OvpHwSetValue = 3800;
00002c  f64061d8          MOV      r1,#0xed8
000030  f8a01228          STRH     r1,[r0,#0x228]
;;;1060   	SystemParemater.RomPar.UvpHwSetValue = 2500;
000034  f64011c4          MOV      r1,#0x9c4
000038  f8a0122a          STRH     r1,[r0,#0x22a]
;;;1061   	SystemParemater.RomPar.FullCharge.Current = 5250;
00003c  f2414182          MOV      r1,#0x1482
000040  f8a01234          STRH     r1,[r0,#0x234]
;;;1062   	SystemParemater.RomPar.FullCharge.Voltage = 3400;
000044  f6405148          MOV      r1,#0xd48
000048  f8a01236          STRH     r1,[r0,#0x236]
;;;1063   	SystemParemater.RomPar.FullCharge.Time = 10;
00004c  210a              MOVS     r1,#0xa
00004e  f8801238          STRB     r1,[r0,#0x238]
;;;1064   	
;;;1065   	SystemParemater.RomPar.RelayOnThreshold = 100;
000052  f8a0222e          STRH     r2,[r0,#0x22e]
;;;1066   	SystemParemater.RomPar.PreDischargeTime = 20;
000056  2214              MOVS     r2,#0x14
000058  f8a0222c          STRH     r2,[r0,#0x22c]
;;;1067   
;;;1068   	SystemParemater.RomPar.InsulationResistance.ReadInterval = 10;
00005c  f8801230          STRB     r1,[r0,#0x230]
;;;1069   	SystemParemater.RomPar.InsulationResistance.SwDelay = 20;
000060  f8802231          STRB     r2,[r0,#0x231]
;;;1070   	
;;;1071   	SystemParemater.RomPar.AfeComm.L1Time = 5;
000064  2205              MOVS     r2,#5
000066  f8802232          STRB     r2,[r0,#0x232]
;;;1072   	SystemParemater.RomPar.AfeComm.L2Time = 10;
00006a  f8801233          STRB     r1,[r0,#0x233]
;;;1073   	
;;;1074   	SystemParemater.RomPar.DesignedCapacity = 280000L;
00006e  4919              LDR      r1,|L129.212|
000070  6141              STR      r1,[r0,#0x14]  ; SystemParemater
;;;1075   	//SystemParemater.Qmax = 280000L;
;;;1076   	SystemParemater.RomPar.ZeroCurrent = 200;
000072  8303              STRH     r3,[r0,#0x18]
;;;1077   	SystemParemater.RomPar.MinChargeDischargeCurrent = 300;
000074  f44f7196          MOV      r1,#0x12c
000078  8341              STRH     r1,[r0,#0x1a]
;;;1078   	SystemParemater.RomPar.BmuNumber = 2;
00007a  2102              MOVS     r1,#2
00007c  f8801220          STRB     r1,[r0,#0x220]
;;;1079   	for(i=0; i<32; i++)
000080  2100              MOVS     r1,#0
;;;1080   	{
;;;1081   		SystemParemater.RomPar.CellFlag[i] = 0xffff;
000082  f64f73ff          MOV      r3,#0xffff
                  |L129.134|
000086  eb000281          ADD      r2,r0,r1,LSL #2
00008a  6213              STR      r3,[r2,#0x20]
;;;1082   		SystemParemater.RomPar.NtcFlag[i] = 0xffff;		
00008c  f8c23120          STR      r3,[r2,#0x120]
000090  1c49              ADDS     r1,r1,#1              ;1079
000092  b2c9              UXTB     r1,r1                 ;1079
000094  2920              CMP      r1,#0x20              ;1079
000096  d3f6              BCC      |L129.134|
;;;1083   	}
;;;1084   
;;;1085   	setDefaultOvpValue();
000098  f7fffffe          BL       setDefaultOvpValue
;;;1086   	setDefaultUvpValue();
00009c  f7fffffe          BL       setDefaultUvpValue
;;;1087   	setDefaultCotpValue();
0000a0  f7fffffe          BL       setDefaultCotpValue
;;;1088       setDefaultCutpValue();
0000a4  f7fffffe          BL       setDefaultCutpValue
;;;1089   	setDefaultDotpValue();
0000a8  f7fffffe          BL       setDefaultDotpValue
;;;1090   	setDefaultDutpValue();
0000ac  f7fffffe          BL       setDefaultDutpValue
;;;1091   	setDefaultCocpValue();
0000b0  f7fffffe          BL       setDefaultCocpValue
;;;1092   	setDefaultDocpValue();
0000b4  f7fffffe          BL       setDefaultDocpValue
;;;1093   	setDefaultBalanceValue();
0000b8  f7fffffe          BL       setDefaultBalanceValue
;;;1094   	setDefaultOcvTable();
0000bc  f7fffffe          BL       setDefaultOcvTable
;;;1095   	setDefaultRaTable();	
0000c0  f7fffffe          BL       setDefaultRaTable
;;;1096   	
;;;1097   	setDefaultOvpPfValue();
0000c4  f7fffffe          BL       setDefaultOvpPfValue
;;;1098   	setDefaultUvpPfValue();
0000c8  e8bd4010          POP      {r4,lr}
0000cc  f7ffbffe          B.W      setDefaultUvpPfValue
;;;1099   }
;;;1100   static void setSysParRamValue(void)
                          ENDP

                  |L129.208|
                          DCD      ||.bss||+0x20
                  |L129.212|
                          DCD      0x000445c0

                          AREA ||i.sysParSwTimerHandler||, CODE, READONLY, ALIGN=2

                  sysParSwTimerHandler PROC
;;;728    
;;;729    static void sysParSwTimerHandler(__far void *dest, uint16_t evt, void *vDataPtr)
000000  b510              PUSH     {r4,lr}
;;;730    {
;;;731    	if(evt == LIB_SW_TIMER_EVT_SW_1MS)
;;;732    	{
;;;733    		
;;;734    	}
;;;735    	if(evt == LIB_SW_TIMER_EVT_SW_10MS_2)
000002  2902              CMP      r1,#2
000004  d110              BNE      |L130.40|
;;;736    	{
;;;737    //		GPIOD->ODR ^= GPIO_PIN_15;	
;;;738    		if(SystemParIdleCount)
000006  4909              LDR      r1,|L130.44|
000008  7848              LDRB     r0,[r1,#1]  ; SystemParIdleCount
00000a  2800              CMP      r0,#0
00000c  d00c              BEQ      |L130.40|
;;;739    		{
;;;740    			SystemParIdleCount--;
00000e  1e40              SUBS     r0,r0,#1
000010  b2c0              UXTB     r0,r0
000012  7048              STRB     r0,[r1,#1]
;;;741    			if(!SystemParIdleCount)
000014  2800              CMP      r0,#0
000016  d107              BNE      |L130.40|
;;;742    			{
;;;743    				saveSysPar();
000018  f7fffffe          BL       saveSysPar
;;;744    				LibSwTimerClose(sysParSwTimerHandler, 0);
00001c  e8bd4010          POP      {r4,lr}
000020  2100              MOVS     r1,#0
000022  4803              LDR      r0,|L130.48|
000024  f7ffbffe          B.W      LibSwTimerClose
                  |L130.40|
;;;745    			}
;;;746    		}
;;;747    	}
;;;748    }
000028  bd10              POP      {r4,pc}
;;;749    static void resetSysParIdleCount(void)
                          ENDP

00002a  0000              DCW      0x0000
                  |L130.44|
                          DCD      ||.data||
                  |L130.48|
                          DCD      sysParSwTimerHandler

                          AREA ||i.updateCellNumber||, CODE, READONLY, ALIGN=2

                  updateCellNumber PROC
;;;1159   
;;;1160   static void updateCellNumber(void)
000000  b530              PUSH     {r4,r5,lr}
;;;1161   {
;;;1162   	uint32_t	flag;
;;;1163   	uint8_t		bmuindex,b;
;;;1164   	
;;;1165   	SystemParemater.RamPar.CellNumber = 0;
000002  4b0e              LDR      r3,|L131.60|
000004  2000              MOVS     r0,#0
000006  f8a30468          STRH     r0,[r3,#0x468]
;;;1166   	for(bmuindex=0; bmuindex<SystemParemater.RomPar.BmuNumber;  bmuindex++)
00000a  2200              MOVS     r2,#0
00000c  f8935220          LDRB     r5,[r3,#0x220]
000010  e011              B        |L131.54|
                  |L131.18|
;;;1167   	{
;;;1168   		flag = SystemParemater.RomPar.CellFlag[bmuindex];
000012  eb030082          ADD      r0,r3,r2,LSL #2
000016  6a01              LDR      r1,[r0,#0x20]
;;;1169   		for(b=0; b<32; b++)
000018  2000              MOVS     r0,#0
                  |L131.26|
;;;1170   		{
;;;1171   			if(flag & 0x01)
00001a  07cc              LSLS     r4,r1,#31
00001c  d004              BEQ      |L131.40|
;;;1172   			{
;;;1173   				SystemParemater.RamPar.CellNumber++;	
00001e  f8b34468          LDRH     r4,[r3,#0x468]  ; SystemParemater
000022  1c64              ADDS     r4,r4,#1
000024  f8a34468          STRH     r4,[r3,#0x468]
                  |L131.40|
;;;1174   			}
;;;1175   			flag >>= 1;
000028  0849              LSRS     r1,r1,#1
00002a  1c40              ADDS     r0,r0,#1              ;1169
00002c  b2c0              UXTB     r0,r0                 ;1169
00002e  2820              CMP      r0,#0x20              ;1169
000030  d3f3              BCC      |L131.26|
000032  1c52              ADDS     r2,r2,#1              ;1166
000034  b2d2              UXTB     r2,r2                 ;1166
                  |L131.54|
000036  4295              CMP      r5,r2                 ;1166
000038  d8eb              BHI      |L131.18|
;;;1176   		}
;;;1177   	}	
;;;1178   }
00003a  bd30              POP      {r4,r5,pc}
;;;1179   static void updateNtcNumber(void)
                          ENDP

                  |L131.60|
                          DCD      ||.bss||+0x20

                          AREA ||i.updateNtcNumber||, CODE, READONLY, ALIGN=2

                  updateNtcNumber PROC
;;;1178   }
;;;1179   static void updateNtcNumber(void)
000000  b530              PUSH     {r4,r5,lr}
;;;1180   {
;;;1181   	uint32_t	flag;
;;;1182   	uint8_t		bmuindex,b;
;;;1183   	
;;;1184   	SystemParemater.RamPar.NtcNumber = 0;
000002  4b0f              LDR      r3,|L132.64|
000004  2000              MOVS     r0,#0
000006  f8a3046a          STRH     r0,[r3,#0x46a]
;;;1185   	for(bmuindex=0; bmuindex<SystemParemater.RomPar.BmuNumber;  bmuindex++)
00000a  2200              MOVS     r2,#0
00000c  f8935220          LDRB     r5,[r3,#0x220]
000010  e012              B        |L132.56|
                  |L132.18|
;;;1186   	{
;;;1187   		flag = SystemParemater.RomPar.NtcFlag[bmuindex];
000012  eb030082          ADD      r0,r3,r2,LSL #2
000016  f8d01120          LDR      r1,[r0,#0x120]
;;;1188   		for(b=0; b<32; b++)
00001a  2000              MOVS     r0,#0
                  |L132.28|
;;;1189   		{
;;;1190   			if(flag & 0x01)
00001c  07cc              LSLS     r4,r1,#31
00001e  d004              BEQ      |L132.42|
;;;1191   			{
;;;1192   				SystemParemater.RamPar.NtcNumber++;	
000020  f8b3446a          LDRH     r4,[r3,#0x46a]  ; SystemParemater
000024  1c64              ADDS     r4,r4,#1
000026  f8a3446a          STRH     r4,[r3,#0x46a]
                  |L132.42|
;;;1193   			}
;;;1194   			flag >>= 1;
00002a  0849              LSRS     r1,r1,#1
00002c  1c40              ADDS     r0,r0,#1              ;1188
00002e  b2c0              UXTB     r0,r0                 ;1188
000030  2820              CMP      r0,#0x20              ;1188
000032  d3f3              BCC      |L132.28|
000034  1c52              ADDS     r2,r2,#1              ;1185
000036  b2d2              UXTB     r2,r2                 ;1185
                  |L132.56|
000038  4295              CMP      r5,r2                 ;1185
00003a  d8ea              BHI      |L132.18|
;;;1195   		}
;;;1196   	}	
;;;1197   }
00003c  bd30              POP      {r4,r5,pc}
;;;1198   
                          ENDP

00003e  0000              DCW      0x0000
                  |L132.64|
                          DCD      ||.bss||+0x20

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  mBatteryInfo
                          %        32
                  SystemParemater
                          %        1184
                  SysCalPar
                          %        132
                  mScuIdInfo
                          %        24

                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

000000  0000              DCB      0x00,0x00
000002  0a92              DCW      0x0a92
000004  0200              DCB      0x02,0x00
000006  0beb              DCW      0x0beb
000008  0400              DCB      0x04,0x00
00000a  0c57              DCW      0x0c57
00000c  0500              DCB      0x05,0x00
00000e  0c7c              DCW      0x0c7c
000010  0800              DCB      0x08,0x00
000012  0c98              DCW      0x0c98
000014  0a00              DCB      0x0a,0x00
000016  0c9a              DCW      0x0c9a
000018  0f00              DCB      0x0f,0x00
00001a  0cb1              DCW      0x0cb1
00001c  1400              DCB      0x14,0x00
00001e  0cce              DCW      0x0cce
000020  1900              DCB      0x19,0x00
000022  0ce4              DCW      0x0ce4
000024  1e00              DCB      0x1e,0x00
000026  0ceb              DCW      0x0ceb
000028  2300              DCB      0x23,0x00
00002a  0cec              DCW      0x0cec
00002c  2800              DCB      0x28,0x00
00002e  0cec              DCW      0x0cec
000030  2d00              DCB      0x2d,0x00
000032  0ced              DCW      0x0ced
000034  3200              DCB      0x32,0x00
000036  0cef              DCW      0x0cef
000038  3c00              DCB      0x3c,0x00
00003a  0cf4              DCW      0x0cf4
00003c  4b00              DCB      0x4b,0x00
00003e  0d0f              DCW      0x0d0f
000040  5500              DCB      0x55,0x00
000042  0d10              DCW      0x0d10
000044  5e00              DCB      0x5e,0x00
000046  0d10              DCW      0x0d10
000048  5f00              DCB      0x5f,0x00
00004a  0d10              DCW      0x0d10
00004c  6200              DCB      0x62,0x00
00004e  0d11              DCW      0x0d11
000050  6300              DCB      0x63,0x00
000052  0d12              DCW      0x0d12
000054  6400              DCB      0x64,0x00
000056  0d20              DCW      0x0d20
000058  ff00              DCB      0xff,0x00
00005a  ffff              DCW      0xffff
00005c  0000              DCB      0x00,0x00
00005e  0077              DCW      0x0077
000060  0200              DCB      0x02,0x00
000062  0072              DCW      0x0072
000064  0400              DCB      0x04,0x00
000066  006e              DCW      0x006e
000068  0500              DCB      0x05,0x00
00006a  006c              DCW      0x006c
00006c  0800              DCB      0x08,0x00
00006e  0061              DCW      0x0061
000070  0a00              DCB      0x0a,0x00
000072  0061              DCW      0x0061
000074  0f00              DCB      0x0f,0x00
000076  0069              DCW      0x0069
000078  1400              DCB      0x14,0x00
00007a  0062              DCW      0x0062
00007c  1900              DCB      0x19,0x00
00007e  0060              DCW      0x0060
000080  1e00              DCB      0x1e,0x00
000082  005f              DCW      0x005f
000084  2300              DCB      0x23,0x00
000086  0061              DCW      0x0061
000088  2800              DCB      0x28,0x00
00008a  0066              DCW      0x0066
00008c  2d00              DCB      0x2d,0x00
00008e  006a              DCW      0x006a
000090  3c00              DCB      0x3c,0x00
000092  0066              DCW      0x0066
000094  4b00              DCB      0x4b,0x00
000096  0066              DCW      0x0066
000098  5500              DCB      0x55,0x00
00009a  0062              DCW      0x0062
00009c  5e00              DCB      0x5e,0x00
00009e  0065              DCW      0x0065
0000a0  6200              DCB      0x62,0x00
0000a2  0067              DCW      0x0067
0000a4  6300              DCB      0x63,0x00
0000a6  0067              DCW      0x0067
0000a8  6400              DCB      0x64,0x00
0000aa  0068              DCW      0x0068
0000ac  ff00              DCB      0xff,0x00
0000ae  ffff              DCW      0xffff

                          AREA ||.data||, DATA, ALIGN=0

                  BatInfoIdleCount
000000  00                DCB      0x00
                  SystemParIdleCount
000001  00                DCB      0x00

;*** Start embedded assembler ***

#line 1 "..\\..\\..\\API\\ApiSysPar.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___11_ApiSysPar_c_7e8cef53____REV16|
#line 492 "../../../Drivers/CMSIS/Include/cmsis_armcc.h"
|__asm___11_ApiSysPar_c_7e8cef53____REV16| PROC
#line 493

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___11_ApiSysPar_c_7e8cef53____REVSH|
#line 507
|__asm___11_ApiSysPar_c_7e8cef53____REVSH| PROC
#line 508

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___11_ApiSysPar_c_7e8cef53____RRX|
#line 694
|__asm___11_ApiSysPar_c_7e8cef53____RRX| PROC
#line 695

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
