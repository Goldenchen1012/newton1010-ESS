; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\obj\halbsp.o --asm_dir=.\List\ --list_dir=.\List\ --depend=.\obj\halbsp.d --cpu=Cortex-M4.fp.sp --apcs=interwork -O1 --diag_suppress=9931 -I../Inc -I../../../Drivers/CMSIS/Include -I../../../Drivers/CMSIS/Device/ST/STM32L4xx/Include -I../../../Drivers/STM32L4xx_HAL_Driver/Inc -I../../../Drivers/BSP/STM32L4xx_Nucleo_144 -I..\..\..\User -I..\..\..\HAL -I..\..\..\Lib -I..\..\..\Config_Common -I..\..\..\AppProtect -I..\..\..\APP -I..\..\..\Lib\SMP -I..\..\..\Drivers\SMP -I..\..\..\BSP -I..\..\..\Drivers\BSP\STM32L496V_Davinci -I..\..\..\API -I..\..\..\AppCommunication -I..\..\..\Drivers\W5500 -I..\..\..\RTT -I.\RTE\_HVESS_Normal -IC:\Users\88691\AppData\Local\Arm\Packs\ARM\CMSIS\5.8.0\CMSIS\Core\Include -IC:\Users\88691\AppData\Local\Arm\Packs\Keil\STM32L4xx_DFP\2.6.0\Drivers\CMSIS\Device\ST\STM32L4xx\Include -D__MICROLIB -D__UVISION_VERSION=535 -D_RTE_ -DSTM32L496xx -D_RTE_ -DSTM32L496xx -DUSE_HAL_DRIVER -DUSE_STM32L4XX_NUCLEO_144 -DBSPSMPS -DUSE_STM32L4XX_NUCLEO_144_SMPS -DUSE_ADP5301ACBZ -W ..\..\..\HAL\HalBsp.c]
                          THUMB

                          AREA ||i.HalBslK1Ctrl||, CODE, READONLY, ALIGN=2

                  HalBslK1Ctrl PROC
;;;117    }
;;;118    void HalBslK1Ctrl(uint8_t hi)
000000  f44f7100          MOV      r1,#0x200
;;;119    {
;;;120    	if(hi)
000004  2800              CMP      r0,#0
000006  d002              BEQ      |L1.14|
;;;121    		BSP_K1_HI();
000008  4803              LDR      r0,|L1.24|
00000a  6001              STR      r1,[r0,#0]
;;;122    	else
;;;123    		BSP_K1_LO();
;;;124    }
00000c  4770              BX       lr
                  |L1.14|
00000e  4802              LDR      r0,|L1.24|
000010  3010              ADDS     r0,r0,#0x10           ;123
000012  6001              STR      r1,[r0,#0]            ;123
000014  4770              BX       lr
;;;125    void HalBspK2Ctrl(uint8_t hi)
                          ENDP

000016  0000              DCW      0x0000
                  |L1.24|
                          DCD      0x48000c18

                          AREA ||i.HalBspAdcChCtrl||, CODE, READONLY, ALIGN=2

                  HalBspAdcChCtrl PROC
;;;95     
;;;96     void HalBspAdcChCtrl(uint8_t hi)
000000  2120              MOVS     r1,#0x20
;;;97     {
;;;98     	if(hi)
000002  2800              CMP      r0,#0
000004  d002              BEQ      |L2.12|
;;;99     		BSP_ADC_CH_SEL_HI();
000006  4803              LDR      r0,|L2.20|
000008  6001              STR      r1,[r0,#0]
;;;100    	else
;;;101    		BSP_ADC_CH_SEL_LO();
;;;102    }
00000a  4770              BX       lr
                  |L2.12|
00000c  4801              LDR      r0,|L2.20|
00000e  3010              ADDS     r0,r0,#0x10           ;101
000010  6001              STR      r1,[r0,#0]            ;101
000012  4770              BX       lr
;;;103    
                          ENDP

                  |L2.20|
                          DCD      0x48000818

                          AREA ||i.HalBspAdcCsAuxCtrl||, CODE, READONLY, ALIGN=2

                  HalBspAdcCsAuxCtrl PROC
;;;110    }
;;;111    void HalBspAdcCsAuxCtrl(uint8_t hi)
000000  2101              MOVS     r1,#1
;;;112    {
;;;113    	if(hi)
000002  2800              CMP      r0,#0
000004  d002              BEQ      |L3.12|
;;;114    	 	BSP_ADC_CS_AUX_HI();
000006  4803              LDR      r0,|L3.20|
000008  6001              STR      r1,[r0,#0]
;;;115    	else
;;;116    		BSP_ADC_CS_AUX_LO();
;;;117    }
00000a  4770              BX       lr
                  |L3.12|
00000c  4801              LDR      r0,|L3.20|
00000e  3010              ADDS     r0,r0,#0x10           ;116
000010  6001              STR      r1,[r0,#0]            ;116
000012  4770              BX       lr
;;;118    void HalBslK1Ctrl(uint8_t hi)
                          ENDP

                  |L3.20|
                          DCD      0x48000418

                          AREA ||i.HalBspAdcCsMainCtrl||, CODE, READONLY, ALIGN=2

                  HalBspAdcCsMainCtrl PROC
;;;103    
;;;104    void HalBspAdcCsMainCtrl(uint8_t hi)
000000  2101              MOVS     r1,#1
;;;105    {
;;;106    	if(hi)
000002  2800              CMP      r0,#0
000004  d002              BEQ      |L4.12|
;;;107    		BSP_ADC_CS_MAIN_HI();
000006  4803              LDR      r0,|L4.20|
000008  6001              STR      r1,[r0,#0]
;;;108    	else
;;;109    		BSP_ADC_CS_MAIN_LO();
;;;110    }
00000a  4770              BX       lr
                  |L4.12|
00000c  4801              LDR      r0,|L4.20|
00000e  3010              ADDS     r0,r0,#0x10           ;109
000010  6001              STR      r1,[r0,#0]            ;109
000012  4770              BX       lr
;;;111    void HalBspAdcCsAuxCtrl(uint8_t hi)
                          ENDP

                  |L4.20|
                          DCD      0x48000418

                          AREA ||i.HalBspDO1Ctrl||, CODE, READONLY, ALIGN=2

                  HalBspDO1Ctrl PROC
;;;80     
;;;81     void HalBspDO1Ctrl(uint8_t hi)
000000  2220              MOVS     r2,#0x20
;;;82     {
;;;83     	if(hi)
;;;84     		BSP_DO1_HI();
000002  4903              LDR      r1,|L5.16|
000004  2800              CMP      r0,#0                 ;83
000006  d001              BEQ      |L5.12|
000008  618a              STR      r2,[r1,#0x18]
;;;85     	else
;;;86     		BSP_DO1_LO();
;;;87     }
00000a  4770              BX       lr
                  |L5.12|
00000c  628a              STR      r2,[r1,#0x28]         ;86
00000e  4770              BX       lr
;;;88     void HalBspDO2Ctrl(uint8_t hi)
                          ENDP

                  |L5.16|
                          DCD      0x48001000

                          AREA ||i.HalBspDO2Ctrl||, CODE, READONLY, ALIGN=2

                  HalBspDO2Ctrl PROC
;;;87     }
;;;88     void HalBspDO2Ctrl(uint8_t hi)
000000  2240              MOVS     r2,#0x40
;;;89     {
;;;90     	if(hi)
;;;91     		BSP_DO2_HI();
000002  4903              LDR      r1,|L6.16|
000004  2800              CMP      r0,#0                 ;90
000006  d001              BEQ      |L6.12|
000008  618a              STR      r2,[r1,#0x18]
;;;92     	else
;;;93     		BSP_DO2_LO();
;;;94     }
00000a  4770              BX       lr
                  |L6.12|
00000c  628a              STR      r2,[r1,#0x28]         ;93
00000e  4770              BX       lr
;;;95     
                          ENDP

                  |L6.16|
                          DCD      0x48001000

                          AREA ||i.HalBspGetButtonStatus||, CODE, READONLY, ALIGN=2

                  HalBspGetButtonStatus PROC
;;;265    }
;;;266    uint8_t HalBspGetButtonStatus(void)
000000  4803              LDR      r0,|L7.16|
;;;267    {
;;;268    	if(BSP_BUTTON_READ())
000002  6900              LDR      r0,[r0,#0x10]
000004  0440              LSLS     r0,r0,#17
000006  d501              BPL      |L7.12|
;;;269    		return 1;
000008  2001              MOVS     r0,#1
;;;270    	else
;;;271    		return 0;
;;;272    }
00000a  4770              BX       lr
                  |L7.12|
00000c  2000              MOVS     r0,#0                 ;271
00000e  4770              BX       lr
;;;273    
                          ENDP

                  |L7.16|
                          DCD      0x48001000

                          AREA ||i.HalBspGetCocpLatchStatus||, CODE, READONLY, ALIGN=2

                  HalBspGetCocpLatchStatus PROC
;;;315    
;;;316    uint8_t HalBspGetCocpLatchStatus(void)
000000  4803              LDR      r0,|L8.16|
;;;317    {
;;;318    	if(BSP_COCP_LATCH_READ())
000002  6800              LDR      r0,[r0,#0]
000004  05c0              LSLS     r0,r0,#23
000006  d501              BPL      |L8.12|
;;;319    		return 1;
000008  2001              MOVS     r0,#1
;;;320    	else
;;;321    		return 0;
;;;322    }
00000a  4770              BX       lr
                  |L8.12|
00000c  2000              MOVS     r0,#0                 ;321
00000e  4770              BX       lr
;;;323    
                          ENDP

                  |L8.16|
                          DCD      0x48000810

                          AREA ||i.HalBspGetDi1Status||, CODE, READONLY, ALIGN=2

                  HalBspGetDi1Status PROC
;;;213    //	Input
;;;214    uint8_t HalBspGetDi1Status(void)
000000  4803              LDR      r0,|L9.16|
;;;215    {
;;;216    	if(BSP_DI1_READ())
000002  6900              LDR      r0,[r0,#0x10]
000004  0740              LSLS     r0,r0,#29
000006  d501              BPL      |L9.12|
;;;217    		return 1;
000008  2001              MOVS     r0,#1
;;;218    	else
;;;219    		return 0;
;;;220    }
00000a  4770              BX       lr
                  |L9.12|
00000c  2000              MOVS     r0,#0                 ;219
00000e  4770              BX       lr
;;;221    uint8_t HalBspGetDi2Status(void)
                          ENDP

                  |L9.16|
                          DCD      0x48001000

                          AREA ||i.HalBspGetDi2Status||, CODE, READONLY, ALIGN=2

                  HalBspGetDi2Status PROC
;;;220    }
;;;221    uint8_t HalBspGetDi2Status(void)
000000  4803              LDR      r0,|L10.16|
;;;222    {
;;;223    	if(BSP_DI2_READ())
000002  6900              LDR      r0,[r0,#0x10]
000004  0700              LSLS     r0,r0,#28
000006  d501              BPL      |L10.12|
;;;224    		return 1;
000008  2001              MOVS     r0,#1
;;;225    	else
;;;226    		return 0;
;;;227    }
00000a  4770              BX       lr
                  |L10.12|
00000c  2000              MOVS     r0,#0                 ;226
00000e  4770              BX       lr
;;;228    
                          ENDP

                  |L10.16|
                          DCD      0x48001000

                          AREA ||i.HalBspGetDocpLatchStatus||, CODE, READONLY, ALIGN=2

                  HalBspGetDocpLatchStatus PROC
;;;307    
;;;308    uint8_t HalBspGetDocpLatchStatus(void)
000000  4803              LDR      r0,|L11.16|
;;;309    {
;;;310    	if(BSP_DOCP_LATCH_READ())
000002  6800              LDR      r0,[r0,#0]
000004  0600              LSLS     r0,r0,#24
000006  d501              BPL      |L11.12|
;;;311    		return 1;
000008  2001              MOVS     r0,#1
;;;312    	else
;;;313    		return 0;
;;;314    }
00000a  4770              BX       lr
                  |L11.12|
00000c  2000              MOVS     r0,#0                 ;313
00000e  4770              BX       lr
;;;315    
                          ENDP

                  |L11.16|
                          DCD      0x48000810

                          AREA ||i.HalBspGetEpoStatus||, CODE, READONLY, ALIGN=2

                  HalBspGetEpoStatus PROC
;;;228    
;;;229    uint8_t HalBspGetEpoStatus(void)
000000  4803              LDR      r0,|L12.16|
;;;230    {
;;;231    	if(BSP_EPO_READ())
000002  6800              LDR      r0,[r0,#0]
000004  07c0              LSLS     r0,r0,#31
000006  d001              BEQ      |L12.12|
;;;232    		return 1;
000008  2001              MOVS     r0,#1
;;;233    	else
;;;234    		return 0;
;;;235    }
00000a  4770              BX       lr
                  |L12.12|
00000c  2000              MOVS     r0,#0                 ;234
00000e  4770              BX       lr
;;;236    
                          ENDP

                  |L12.16|
                          DCD      0x48000810

                          AREA ||i.HalBspGetK1Status||, CODE, READONLY, ALIGN=2

                  HalBspGetK1Status PROC
;;;275    
;;;276    uint8_t HalBspGetK1Status(void)
000000  4803              LDR      r0,|L13.16|
;;;277    {
;;;278    	if(BSP_K1_FB_READ())
000002  6800              LDR      r0,[r0,#0]
000004  0480              LSLS     r0,r0,#18
000006  d501              BPL      |L13.12|
;;;279    		return 1;
000008  2001              MOVS     r0,#1
;;;280    	else
;;;281    		return 0;
;;;282    }
00000a  4770              BX       lr
                  |L13.12|
00000c  2000              MOVS     r0,#0                 ;281
00000e  4770              BX       lr
;;;283    
                          ENDP

                  |L13.16|
                          DCD      0x48000c10

                          AREA ||i.HalBspGetK2Status||, CODE, READONLY, ALIGN=2

                  HalBspGetK2Status PROC
;;;283    
;;;284    uint8_t HalBspGetK2Status(void)
000000  4803              LDR      r0,|L14.16|
;;;285    {
;;;286    	if(BSP_K2_FB_READ())
000002  6800              LDR      r0,[r0,#0]
000004  0440              LSLS     r0,r0,#17
000006  d501              BPL      |L14.12|
;;;287    		return 1;
000008  2001              MOVS     r0,#1
;;;288    	else
;;;289    		return 0;
;;;290    }
00000a  4770              BX       lr
                  |L14.12|
00000c  2000              MOVS     r0,#0                 ;289
00000e  4770              BX       lr
;;;291    
                          ENDP

                  |L14.16|
                          DCD      0x48000c10

                          AREA ||i.HalBspGetK3Status||, CODE, READONLY, ALIGN=2

                  HalBspGetK3Status PROC
;;;291    
;;;292    uint8_t HalBspGetK3Status(void)
000000  4803              LDR      r0,|L15.16|
;;;293    {
;;;294    	if(BSP_K3_FB_READ())
000002  6800              LDR      r0,[r0,#0]
000004  0400              LSLS     r0,r0,#16
000006  d501              BPL      |L15.12|
;;;295    		return 1;
000008  2001              MOVS     r0,#1
;;;296    	else
;;;297    		return 0;
;;;298    }
00000a  4770              BX       lr
                  |L15.12|
00000c  2000              MOVS     r0,#0                 ;297
00000e  4770              BX       lr
;;;299    
                          ENDP

                  |L15.16|
                          DCD      0x48000c10

                          AREA ||i.HalBspGetK4Status||, CODE, READONLY, ALIGN=2

                  HalBspGetK4Status PROC
;;;299    
;;;300    uint8_t HalBspGetK4Status(void)
000000  4803              LDR      r0,|L16.16|
;;;301    {
;;;302    	if(BSP_K4_FB_READ())
000002  6800              LDR      r0,[r0,#0]
000004  0640              LSLS     r0,r0,#25
000006  d501              BPL      |L16.12|
;;;303    		return 1;
000008  2001              MOVS     r0,#1
;;;304    	else
;;;305    		return 0;
;;;306    }
00000a  4770              BX       lr
                  |L16.12|
00000c  2000              MOVS     r0,#0                 ;305
00000e  4770              BX       lr
;;;307    
                          ENDP

                  |L16.16|
                          DCD      0x48000810

                          AREA ||i.HalBspGetOdInStatus||, CODE, READONLY, ALIGN=2

                  HalBspGetOdInStatus PROC
;;;323    
;;;324    uint8_t HalBspGetOdInStatus(void)
000000  4803              LDR      r0,|L17.16|
;;;325    {
;;;326    	if(BSP_OD_IN_READ())
000002  6800              LDR      r0,[r0,#0]
000004  0700              LSLS     r0,r0,#28
000006  d501              BPL      |L17.12|
;;;327    		return 1;
000008  2001              MOVS     r0,#1
;;;328    	else
;;;329    		return 0;
;;;330    }
00000a  4770              BX       lr
                  |L17.12|
00000c  2000              MOVS     r0,#0                 ;329
00000e  4770              BX       lr
;;;331    
                          ENDP

                  |L17.16|
                          DCD      0x48000410

                          AREA ||i.HalBspGetPs1Status||, CODE, READONLY, ALIGN=2

                  HalBspGetPs1Status PROC
;;;244    
;;;245    uint8_t HalBspGetPs1Status(void)
000000  4803              LDR      r0,|L18.16|
;;;246    {
;;;247    	if(BSP_PS1_OK_READ())
000002  6900              LDR      r0,[r0,#0x10]
000004  0600              LSLS     r0,r0,#24
000006  d501              BPL      |L18.12|
;;;248    		return 1;
000008  2001              MOVS     r0,#1
;;;249    	else
;;;250    		return 0;
;;;251    }
00000a  4770              BX       lr
                  |L18.12|
00000c  2000              MOVS     r0,#0                 ;250
00000e  4770              BX       lr
;;;252    uint8_t HalBspGetPs2Status(void)
                          ENDP

                  |L18.16|
                          DCD      0x48001000

                          AREA ||i.HalBspGetPs2Status||, CODE, READONLY, ALIGN=2

                  HalBspGetPs2Status PROC
;;;251    }
;;;252    uint8_t HalBspGetPs2Status(void)
000000  4803              LDR      r0,|L19.16|
;;;253    {
;;;254    	if(BSP_PS2_OK_READ())
000002  6900              LDR      r0,[r0,#0x10]
000004  05c0              LSLS     r0,r0,#23
000006  d501              BPL      |L19.12|
;;;255    		return 1;
000008  2001              MOVS     r0,#1
;;;256    	else
;;;257    		return 0;
;;;258    }
00000a  4770              BX       lr
                  |L19.12|
00000c  2000              MOVS     r0,#0                 ;257
00000e  4770              BX       lr
;;;259    uint8_t HalBspGetPs3Status(void)
                          ENDP

                  |L19.16|
                          DCD      0x48001000

                          AREA ||i.HalBspGetPs3Status||, CODE, READONLY, ALIGN=2

                  HalBspGetPs3Status PROC
;;;258    }
;;;259    uint8_t HalBspGetPs3Status(void)
000000  4803              LDR      r0,|L20.16|
;;;260    {
;;;261    	if(BSP_PS3_OK_READ())
000002  6900              LDR      r0,[r0,#0x10]
000004  0580              LSLS     r0,r0,#22
000006  d501              BPL      |L20.12|
;;;262    		return 1;
000008  2001              MOVS     r0,#1
;;;263    	else
;;;264    		return 0;
;;;265    }
00000a  4770              BX       lr
                  |L20.12|
00000c  2000              MOVS     r0,#0                 ;264
00000e  4770              BX       lr
;;;266    uint8_t HalBspGetButtonStatus(void)
                          ENDP

                  |L20.16|
                          DCD      0x48001000

                          AREA ||i.HalBspGetSpStatus||, CODE, READONLY, ALIGN=2

                  HalBspGetSpStatus PROC
;;;236    
;;;237    uint8_t HalBspGetSpStatus(void)
000000  4803              LDR      r0,|L21.16|
;;;238    {
;;;239    	if(BSP_SP_FB_READ())
000002  6800              LDR      r0,[r0,#0]
000004  0780              LSLS     r0,r0,#30
000006  d501              BPL      |L21.12|
;;;240    		return 1;
000008  2001              MOVS     r0,#1
;;;241    	else
;;;242    		return 0;
;;;243    }
00000a  4770              BX       lr
                  |L21.12|
00000c  2000              MOVS     r0,#0                 ;242
00000e  4770              BX       lr
;;;244    
                          ENDP

                  |L21.16|
                          DCD      0x48000810

                          AREA ||i.HalBspInit||, CODE, READONLY, ALIGN=2

                  HalBspInit PROC
;;;32     
;;;33     void HalBspInit(void)
000000  e92d4ff8          PUSH     {r3-r11,lr}
;;;34     {
;;;35     	__HAL_RCC_GPIOA_CLK_ENABLE();
000004  4876              LDR      r0,|L22.480|
000006  6cc1              LDR      r1,[r0,#0x4c]
000008  f0410101          ORR      r1,r1,#1
00000c  64c1              STR      r1,[r0,#0x4c]
00000e  6cc1              LDR      r1,[r0,#0x4c]
000010  f0010101          AND      r1,r1,#1
000014  9100              STR      r1,[sp,#0]
;;;36     	__HAL_RCC_GPIOB_CLK_ENABLE();
000016  6cc1              LDR      r1,[r0,#0x4c]
000018  f0410102          ORR      r1,r1,#2
00001c  64c1              STR      r1,[r0,#0x4c]
00001e  6cc1              LDR      r1,[r0,#0x4c]
000020  f0010102          AND      r1,r1,#2
000024  9100              STR      r1,[sp,#0]
;;;37     	__HAL_RCC_GPIOC_CLK_ENABLE();
000026  6cc1              LDR      r1,[r0,#0x4c]
000028  f0410104          ORR      r1,r1,#4
00002c  64c1              STR      r1,[r0,#0x4c]
00002e  6cc1              LDR      r1,[r0,#0x4c]
000030  f0010104          AND      r1,r1,#4
000034  9100              STR      r1,[sp,#0]
;;;38     	__HAL_RCC_GPIOD_CLK_ENABLE();
000036  6cc1              LDR      r1,[r0,#0x4c]
000038  f0410108          ORR      r1,r1,#8
00003c  64c1              STR      r1,[r0,#0x4c]
00003e  6cc1              LDR      r1,[r0,#0x4c]
000040  f0010108          AND      r1,r1,#8
000044  9100              STR      r1,[sp,#0]
;;;39     	__HAL_RCC_GPIOE_CLK_ENABLE();
000046  6cc1              LDR      r1,[r0,#0x4c]
000048  f0410110          ORR      r1,r1,#0x10
00004c  64c1              STR      r1,[r0,#0x4c]
00004e  6cc0              LDR      r0,[r0,#0x4c]
000050  f0000010          AND      r0,r0,#0x10
000054  9000              STR      r0,[sp,#0]
;;;40     
;;;41     	BSP_DO1_OPEN();
000056  4d63              LDR      r5,|L22.484|
000058  2402              MOVS     r4,#2
00005a  2301              MOVS     r3,#1
00005c  461a              MOV      r2,r3
00005e  2120              MOVS     r1,#0x20
000060  4628              MOV      r0,r5
000062  9400              STR      r4,[sp,#0]
000064  f7fffffe          BL       HalBspSetGpio
;;;42     	BSP_DO2_OPEN();
000068  2301              MOVS     r3,#1
00006a  461a              MOV      r2,r3
00006c  2140              MOVS     r1,#0x40
00006e  4628              MOV      r0,r5
000070  9400              STR      r4,[sp,#0]
000072  f7fffffe          BL       HalBspSetGpio
;;;43     	
;;;44     	BSP_ADC_CH_SEL_OPEN();
000076  4e5c              LDR      r6,|L22.488|
000078  2301              MOVS     r3,#1
00007a  461a              MOV      r2,r3
00007c  2120              MOVS     r1,#0x20
00007e  4630              MOV      r0,r6
000080  9400              STR      r4,[sp,#0]
000082  f7fffffe          BL       HalBspSetGpio
;;;45     	BSP_ADC_CS_MAIN_OPEN();
000086  2301              MOVS     r3,#1
000088  4f58              LDR      r7,|L22.492|
00008a  461a              MOV      r2,r3
00008c  4619              MOV      r1,r3
00008e  4638              MOV      r0,r7
000090  9400              STR      r4,[sp,#0]
000092  f7fffffe          BL       HalBspSetGpio
;;;46     	BSP_ADC_CS_AUX_OPEN();
000096  2301              MOVS     r3,#1
000098  461a              MOV      r2,r3
00009a  4619              MOV      r1,r3
00009c  4638              MOV      r0,r7
00009e  9400              STR      r4,[sp,#0]
0000a0  f7fffffe          BL       HalBspSetGpio
;;;47     
;;;48     	BSP_K1_OPEN();
0000a4  f8df9148          LDR      r9,|L22.496|
0000a8  2301              MOVS     r3,#1
0000aa  f44f7800          MOV      r8,#0x200
0000ae  461a              MOV      r2,r3
0000b0  4641              MOV      r1,r8
0000b2  4648              MOV      r0,r9
0000b4  9400              STR      r4,[sp,#0]
0000b6  f7fffffe          BL       HalBspSetGpio
;;;49     	BSP_K2_OPEN();
0000ba  2301              MOVS     r3,#1
0000bc  461a              MOV      r2,r3
0000be  0299              LSLS     r1,r3,#10
0000c0  4648              MOV      r0,r9
0000c2  9400              STR      r4,[sp,#0]
0000c4  f7fffffe          BL       HalBspSetGpio
;;;50     	BSP_K3_OPEN();
0000c8  2301              MOVS     r3,#1
0000ca  461a              MOV      r2,r3
0000cc  02d9              LSLS     r1,r3,#11
0000ce  4648              MOV      r0,r9
0000d0  9400              STR      r4,[sp,#0]
0000d2  f7fffffe          BL       HalBspSetGpio
;;;51     	BSP_K4_OPEN();
0000d6  2301              MOVS     r3,#1
0000d8  f44f5a80          MOV      r10,#0x1000
0000dc  461a              MOV      r2,r3
0000de  4651              MOV      r1,r10
0000e0  4648              MOV      r0,r9
0000e2  9400              STR      r4,[sp,#0]
0000e4  f7fffffe          BL       HalBspSetGpio
;;;52     	BSP_RELAY_PS_OPEN();
0000e8  2301              MOVS     r3,#1
0000ea  461a              MOV      r2,r3
0000ec  4651              MOV      r1,r10
0000ee  f04f4090          MOV      r0,#0x48000000
0000f2  9400              STR      r4,[sp,#0]
0000f4  f7fffffe          BL       HalBspSetGpio
;;;53     	BSP_TOWER_LIGHT_RED_OPEN();
0000f8  2301              MOVS     r3,#1
0000fa  461a              MOV      r2,r3
0000fc  4619              MOV      r1,r3
0000fe  4648              MOV      r0,r9
000100  9400              STR      r4,[sp,#0]
000102  f7fffffe          BL       HalBspSetGpio
;;;54     	BSP_TOWER_LIGHT_ORANGE_OPEN();
000106  2301              MOVS     r3,#1
000108  461a              MOV      r2,r3
00010a  2102              MOVS     r1,#2
00010c  4648              MOV      r0,r9
00010e  9400              STR      r4,[sp,#0]
000110  f7fffffe          BL       HalBspSetGpio
;;;55     	BSP_TOWER_LIGHT_GREEN_OPEN();
000114  2301              MOVS     r3,#1
000116  461a              MOV      r2,r3
000118  2104              MOVS     r1,#4
00011a  4648              MOV      r0,r9
00011c  9400              STR      r4,[sp,#0]
00011e  f7fffffe          BL       HalBspSetGpio
;;;56     	BSP_OCP_RELEASE_OPEN();
000122  2301              MOVS     r3,#1
000124  461a              MOV      r2,r3
000126  2108              MOVS     r1,#8
000128  4648              MOV      r0,r9
00012a  9400              STR      r4,[sp,#0]
00012c  f7fffffe          BL       HalBspSetGpio
;;;57     	BSP_OD_OUT_OPEN();
000130  2301              MOVS     r3,#1
000132  461a              MOV      r2,r3
000134  2110              MOVS     r1,#0x10
000136  4638              MOV      r0,r7
000138  9400              STR      r4,[sp,#0]
00013a  f7fffffe          BL       HalBspSetGpio
;;;58     	
;;;59     	BSP_DI1_OPEN();
00013e  2301              MOVS     r3,#1
000140  2200              MOVS     r2,#0
000142  2104              MOVS     r1,#4
000144  4628              MOV      r0,r5
000146  9400              STR      r4,[sp,#0]
000148  f7fffffe          BL       HalBspSetGpio
;;;60     	BSP_DI2_OPEN();
00014c  2301              MOVS     r3,#1
00014e  2200              MOVS     r2,#0
000150  2108              MOVS     r1,#8
000152  4628              MOV      r0,r5
000154  9400              STR      r4,[sp,#0]
000156  f7fffffe          BL       HalBspSetGpio
;;;61     	BSP_EPO_OPEN();
00015a  2302              MOVS     r3,#2
00015c  2200              MOVS     r2,#0
00015e  2101              MOVS     r1,#1
000160  4630              MOV      r0,r6
000162  9400              STR      r4,[sp,#0]
000164  f7fffffe          BL       HalBspSetGpio
;;;62     	BSP_SP_FB_OPEN();
000168  2301              MOVS     r3,#1
00016a  2200              MOVS     r2,#0
00016c  2102              MOVS     r1,#2
00016e  4630              MOV      r0,r6
000170  9400              STR      r4,[sp,#0]
000172  f7fffffe          BL       HalBspSetGpio
;;;63     	BSP_PS1_OK_OPEN();
000176  2301              MOVS     r3,#1
000178  2200              MOVS     r2,#0
00017a  2180              MOVS     r1,#0x80
00017c  4628              MOV      r0,r5
00017e  9400              STR      r4,[sp,#0]
000180  f7fffffe          BL       HalBspSetGpio
;;;64     	BSP_PS2_OK_OPEN();
000184  f44f7980          MOV      r9,#0x100
000188  2301              MOVS     r3,#1
00018a  2200              MOVS     r2,#0
00018c  4649              MOV      r1,r9
00018e  4628              MOV      r0,r5
000190  9400              STR      r4,[sp,#0]
000192  f7fffffe          BL       HalBspSetGpio
;;;65     	BSP_PS3_OK_OPEN();
000196  2301              MOVS     r3,#1
000198  2200              MOVS     r2,#0
00019a  4641              MOV      r1,r8
00019c  4628              MOV      r0,r5
00019e  9400              STR      r4,[sp,#0]
0001a0  f7fffffe          BL       HalBspSetGpio
;;;66     	BSP_BUTTON_OPEN();
0001a4  2301              MOVS     r3,#1
0001a6  2200              MOVS     r2,#0
0001a8  0399              LSLS     r1,r3,#14
0001aa  4628              MOV      r0,r5
0001ac  9400              STR      r4,[sp,#0]
0001ae  f7fffffe          BL       HalBspSetGpio
;;;67     	
;;;68     //	BSP_K1_FB_OPEN();
;;;69     //	BSP_K1_FB_READ();
;;;70     //	BSP_K2_FB_OPEN();
;;;71     //	BSP_K3_FB_OPEN();
;;;72     //	BSP_K4_FB_OPEN();
;;;73     
;;;74     	BSP_DOCP_LATCH_OPEN();
0001b2  2301              MOVS     r3,#1
0001b4  2200              MOVS     r2,#0
0001b6  2180              MOVS     r1,#0x80
0001b8  4630              MOV      r0,r6
0001ba  9400              STR      r4,[sp,#0]
0001bc  f7fffffe          BL       HalBspSetGpio
;;;75     	BSP_COCP_LATCH_OPEN();
0001c0  2301              MOVS     r3,#1
0001c2  2200              MOVS     r2,#0
0001c4  4649              MOV      r1,r9
0001c6  4630              MOV      r0,r6
0001c8  9400              STR      r4,[sp,#0]
0001ca  f7fffffe          BL       HalBspSetGpio
;;;76     	BSP_OD_IN_OPEN();
0001ce  2300              MOVS     r3,#0
0001d0  461a              MOV      r2,r3
0001d2  2108              MOVS     r1,#8
0001d4  4638              MOV      r0,r7
0001d6  9400              STR      r4,[sp,#0]
0001d8  f7fffffe          BL       HalBspSetGpio
;;;77     	
;;;78     //	HalBspRelayPsCtrl(1);
;;;79     }
0001dc  e8bd8ff8          POP      {r3-r11,pc}
;;;80     
                          ENDP

                  |L22.480|
                          DCD      0x40021000
                  |L22.484|
                          DCD      0x48001000
                  |L22.488|
                          DCD      0x48000800
                  |L22.492|
                          DCD      0x48000400
                  |L22.496|
                          DCD      0x48000c00

                          AREA ||i.HalBspK2Ctrl||, CODE, READONLY, ALIGN=2

                  HalBspK2Ctrl PROC
;;;124    }
;;;125    void HalBspK2Ctrl(uint8_t hi)
000000  f44f6180          MOV      r1,#0x400
;;;126    {
;;;127    	if(hi)
000004  2800              CMP      r0,#0
000006  d002              BEQ      |L23.14|
;;;128    		BSP_K2_HI();
000008  4803              LDR      r0,|L23.24|
00000a  6001              STR      r1,[r0,#0]
;;;129    	else
;;;130    		BSP_K2_LO();
;;;131    }
00000c  4770              BX       lr
                  |L23.14|
00000e  4802              LDR      r0,|L23.24|
000010  3010              ADDS     r0,r0,#0x10           ;130
000012  6001              STR      r1,[r0,#0]            ;130
000014  4770              BX       lr
;;;132    void halBspFanRelayOn(void)
                          ENDP

000016  0000              DCW      0x0000
                  |L23.24|
                          DCD      0x48000c18

                          AREA ||i.HalBspOdOutCtrl||, CODE, READONLY, ALIGN=2

                  HalBspOdOutCtrl PROC
;;;203    }
;;;204    void HalBspOdOutCtrl(uint8_t hi)
000000  2110              MOVS     r1,#0x10
;;;205    {
;;;206    	if(hi)
000002  2800              CMP      r0,#0
000004  d002              BEQ      |L24.12|
;;;207    		BSP_OD_OUT_HI();
000006  4803              LDR      r0,|L24.20|
000008  6001              STR      r1,[r0,#0]
;;;208    	else
;;;209    		BSP_OD_OUT_LO();
;;;210    }
00000a  4770              BX       lr
                  |L24.12|
00000c  4801              LDR      r0,|L24.20|
00000e  3010              ADDS     r0,r0,#0x10           ;209
000010  6001              STR      r1,[r0,#0]            ;209
000012  4770              BX       lr
;;;211    
                          ENDP

                  |L24.20|
                          DCD      0x48000418

                          AREA ||i.HalBspRelayPsCtrl||, CODE, READONLY, ALIGN=1

                  HalBspRelayPsCtrl PROC
;;;167    
;;;168    void HalBspRelayPsCtrl(uint8_t hi)
000000  f44f5280          MOV      r2,#0x1000
;;;169    {
;;;170    	if(hi)
;;;171    		BSP_RELAY_PS_HI();
000004  f04f4190          MOV      r1,#0x48000000
000008  2800              CMP      r0,#0                 ;170
00000a  d001              BEQ      |L25.16|
00000c  618a              STR      r2,[r1,#0x18]
;;;172    	else
;;;173    		BSP_RELAY_PS_LO();
;;;174    }
00000e  4770              BX       lr
                  |L25.16|
000010  628a              STR      r2,[r1,#0x28]         ;173
000012  4770              BX       lr
;;;175    void HalBspTowerLightRedCtrl(uint8_t hi)
                          ENDP


                          AREA ||i.HalBspReleaseCtrl||, CODE, READONLY, ALIGN=2

                  HalBspReleaseCtrl PROC
;;;196    }
;;;197    void HalBspReleaseCtrl(uint8_t hi)
000000  2108              MOVS     r1,#8
;;;198    {
;;;199    	if(hi)
000002  2800              CMP      r0,#0
000004  d002              BEQ      |L26.12|
;;;200    		BSP_OCP_RELEASE_HI();
000006  4803              LDR      r0,|L26.20|
000008  6001              STR      r1,[r0,#0]
;;;201    	else
;;;202    		BSP_OCP_RELEASE_LO();
;;;203    }
00000a  4770              BX       lr
                  |L26.12|
00000c  4801              LDR      r0,|L26.20|
00000e  3010              ADDS     r0,r0,#0x10           ;202
000010  6001              STR      r1,[r0,#0]            ;202
000012  4770              BX       lr
;;;204    void HalBspOdOutCtrl(uint8_t hi)
                          ENDP

                  |L26.20|
                          DCD      0x48000c18

                          AREA ||i.HalBspTowerLightGreenCtrl||, CODE, READONLY, ALIGN=2

                  HalBspTowerLightGreenCtrl PROC
;;;189    }
;;;190    void HalBspTowerLightGreenCtrl(uint8_t hi)
000000  2104              MOVS     r1,#4
;;;191    {
;;;192    	if(hi)
000002  2800              CMP      r0,#0
000004  d002              BEQ      |L27.12|
;;;193    		BSP_TOWER_LIGHT_GREEN_HI();
000006  4803              LDR      r0,|L27.20|
000008  6001              STR      r1,[r0,#0]
;;;194    	else
;;;195    		BSP_TOWER_LIGHT_GREEN_LO();
;;;196    }
00000a  4770              BX       lr
                  |L27.12|
00000c  4801              LDR      r0,|L27.20|
00000e  3010              ADDS     r0,r0,#0x10           ;195
000010  6001              STR      r1,[r0,#0]            ;195
000012  4770              BX       lr
;;;197    void HalBspReleaseCtrl(uint8_t hi)
                          ENDP

                  |L27.20|
                          DCD      0x48000c18

                          AREA ||i.HalBspTowerLightOrangeCtrl||, CODE, READONLY, ALIGN=2

                  HalBspTowerLightOrangeCtrl PROC
;;;182    
;;;183    void HalBspTowerLightOrangeCtrl(uint8_t hi)
000000  2102              MOVS     r1,#2
;;;184    {
;;;185    	if(hi)
000002  2800              CMP      r0,#0
000004  d002              BEQ      |L28.12|
;;;186    		BSP_TOWER_LIGHT_ORANGE_HI();
000006  4803              LDR      r0,|L28.20|
000008  6001              STR      r1,[r0,#0]
;;;187    	else
;;;188    		BSP_TOWER_LIGHT_ORANGE_LO();
;;;189    }
00000a  4770              BX       lr
                  |L28.12|
00000c  4801              LDR      r0,|L28.20|
00000e  3010              ADDS     r0,r0,#0x10           ;188
000010  6001              STR      r1,[r0,#0]            ;188
000012  4770              BX       lr
;;;190    void HalBspTowerLightGreenCtrl(uint8_t hi)
                          ENDP

                  |L28.20|
                          DCD      0x48000c18

                          AREA ||i.HalBspTowerLightRedCtrl||, CODE, READONLY, ALIGN=2

                  HalBspTowerLightRedCtrl PROC
;;;174    }
;;;175    void HalBspTowerLightRedCtrl(uint8_t hi)
000000  2101              MOVS     r1,#1
;;;176    {
;;;177    	if(hi)
000002  2800              CMP      r0,#0
000004  d002              BEQ      |L29.12|
;;;178    		BSP_TOWER_LIGHT_RED_HI();
000006  4803              LDR      r0,|L29.20|
000008  6001              STR      r1,[r0,#0]
;;;179    	else
;;;180    		BSP_TOWER_LIGHT_RED_LO();
;;;181    }
00000a  4770              BX       lr
                  |L29.12|
00000c  4801              LDR      r0,|L29.20|
00000e  3010              ADDS     r0,r0,#0x10           ;180
000010  6001              STR      r1,[r0,#0]            ;180
000012  4770              BX       lr
;;;182    
                          ENDP

                  |L29.20|
                          DCD      0x48000c18

                          AREA ||i.halBspFanRelayOff||, CODE, READONLY, ALIGN=2

                  halBspFanRelayOff PROC
;;;135    }
;;;136    void halBspFanRelayOff(void)
000000  4902              LDR      r1,|L30.12|
;;;137    {
;;;138    	BSP_K1_LO();
000002  f44f7000          MOV      r0,#0x200
000006  6008              STR      r0,[r1,#0]
;;;139    }
000008  4770              BX       lr
;;;140    
                          ENDP

00000a  0000              DCW      0x0000
                  |L30.12|
                          DCD      0x48000c28

                          AREA ||i.halBspFanRelayOn||, CODE, READONLY, ALIGN=2

                  halBspFanRelayOn PROC
;;;131    }
;;;132    void halBspFanRelayOn(void)
000000  4902              LDR      r1,|L31.12|
;;;133    {
;;;134    	BSP_K1_HI();
000002  f44f7000          MOV      r0,#0x200
000006  6008              STR      r0,[r1,#0]
;;;135    }
000008  4770              BX       lr
;;;136    void halBspFanRelayOff(void)
                          ENDP

00000a  0000              DCW      0x0000
                  |L31.12|
                          DCD      0x48000c18

                          AREA ||i.halBspNegtiveRelayOff||, CODE, READONLY, ALIGN=2

                  halBspNegtiveRelayOff PROC
;;;162    }
;;;163    void halBspNegtiveRelayOff(void)
000000  4902              LDR      r1,|L32.12|
;;;164    {
;;;165    	BSP_K4_LO();
000002  f44f5080          MOV      r0,#0x1000
000006  6008              STR      r0,[r1,#0]
;;;166    }
000008  4770              BX       lr
;;;167    
                          ENDP

00000a  0000              DCW      0x0000
                  |L32.12|
                          DCD      0x48000c28

                          AREA ||i.halBspNegtiveRelayOn||, CODE, READONLY, ALIGN=2

                  halBspNegtiveRelayOn PROC
;;;158    }
;;;159    void halBspNegtiveRelayOn(void)
000000  4902              LDR      r1,|L33.12|
;;;160    {
;;;161    	BSP_K4_HI();
000002  f44f5080          MOV      r0,#0x1000
000006  6008              STR      r0,[r1,#0]
;;;162    }
000008  4770              BX       lr
;;;163    void halBspNegtiveRelayOff(void)
                          ENDP

00000a  0000              DCW      0x0000
                  |L33.12|
                          DCD      0x48000c18

                          AREA ||i.halBspPostiveRelayOff||, CODE, READONLY, ALIGN=2

                  halBspPostiveRelayOff PROC
;;;154    
;;;155    void halBspPostiveRelayOff(void)
000000  4902              LDR      r1,|L34.12|
;;;156    {
;;;157    	BSP_K3_LO();
000002  f44f6000          MOV      r0,#0x800
000006  6008              STR      r0,[r1,#0]
;;;158    }
000008  4770              BX       lr
;;;159    void halBspNegtiveRelayOn(void)
                          ENDP

00000a  0000              DCW      0x0000
                  |L34.12|
                          DCD      0x48000c28

                          AREA ||i.halBspPostiveRelayOn||, CODE, READONLY, ALIGN=2

                  halBspPostiveRelayOn PROC
;;;149    
;;;150    void halBspPostiveRelayOn(void)
000000  4902              LDR      r1,|L35.12|
;;;151    {
;;;152    	BSP_K3_HI();
000002  f44f6000          MOV      r0,#0x800
000006  6008              STR      r0,[r1,#0]
;;;153    }
000008  4770              BX       lr
;;;154    
                          ENDP

00000a  0000              DCW      0x0000
                  |L35.12|
                          DCD      0x48000c18

                          AREA ||i.halBspPreDischargeRelayOff||, CODE, READONLY, ALIGN=2

                  halBspPreDischargeRelayOff PROC
;;;144    }
;;;145    void halBspPreDischargeRelayOff(void)
000000  4902              LDR      r1,|L36.12|
;;;146    {
;;;147    	BSP_K2_LO();
000002  f44f6080          MOV      r0,#0x400
000006  6008              STR      r0,[r1,#0]
;;;148    }
000008  4770              BX       lr
;;;149    
                          ENDP

00000a  0000              DCW      0x0000
                  |L36.12|
                          DCD      0x48000c28

                          AREA ||i.halBspPreDischargeRelayOn||, CODE, READONLY, ALIGN=2

                  halBspPreDischargeRelayOn PROC
;;;140    
;;;141    void halBspPreDischargeRelayOn(void)
000000  4902              LDR      r1,|L37.12|
;;;142    {
;;;143    	BSP_K2_HI();
000002  f44f6080          MOV      r0,#0x400
000006  6008              STR      r0,[r1,#0]
;;;144    }
000008  4770              BX       lr
;;;145    void halBspPreDischargeRelayOff(void)
                          ENDP

00000a  0000              DCW      0x0000
                  |L37.12|
                          DCD      0x48000c18

;*** Start embedded assembler ***

#line 1 "..\\..\\..\\HAL\\HalBsp.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___8_HalBsp_c_42496097____REV16|
#line 492 "../../../Drivers/CMSIS/Include/cmsis_armcc.h"
|__asm___8_HalBsp_c_42496097____REV16| PROC
#line 493

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___8_HalBsp_c_42496097____REVSH|
#line 507
|__asm___8_HalBsp_c_42496097____REVSH| PROC
#line 508

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___8_HalBsp_c_42496097____RRX|
#line 694
|__asm___8_HalBsp_c_42496097____RRX| PROC
#line 695

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
