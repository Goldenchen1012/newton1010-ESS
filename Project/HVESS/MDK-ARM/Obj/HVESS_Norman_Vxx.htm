<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Obj\HVESS_Norman_Vxx.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Obj\HVESS_Norman_Vxx.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060960: Last Updated: Thu Jan 06 08:41:46 2022
<BR><P>
<H3>Maximum Stack Usage =       2812 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; appProjectOpen &rArr; apiSysParOpen &rArr; loadSysPar &rArr; appSerialCanDavinciSendTextMessage &rArr; appSerialCanDavinciPutPkgToCanFifo &rArr; smp_can_put &rArr; HAL_CAN_AddTxMessage
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[d]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[d]">NMI_Handler</a><BR>
 <LI><a href="#[e]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[e]">HardFault_Handler</a><BR>
 <LI><a href="#[f]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[f]">MemManage_Handler</a><BR>
 <LI><a href="#[10]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[10]">BusFault_Handler</a><BR>
 <LI><a href="#[11]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[11]">UsageFault_Handler</a><BR>
 <LI><a href="#[12]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[12]">SVC_Handler</a><BR>
 <LI><a href="#[13]">DebugMon_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[13]">DebugMon_Handler</a><BR>
 <LI><a href="#[14]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[14]">PendSV_Handler</a><BR>
 <LI><a href="#[28]">ADC1_2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[28]">ADC1_2_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[28]">ADC1_2_IRQHandler</a> from startup_stm32l496xx.o(.text) referenced from startup_stm32l496xx.o(RESET)
 <LI><a href="#[45]">ADC3_IRQHandler</a> from startup_stm32l496xx.o(.text) referenced from startup_stm32l496xx.o(RESET)
 <LI><a href="#[74]">ADC_DMAConvCplt</a> from stm32l4xx_hal_adc.o(i.ADC_DMAConvCplt) referenced from stm32l4xx_hal_adc.o(i.HAL_ADC_Start_DMA)
 <LI><a href="#[76]">ADC_DMAError</a> from stm32l4xx_hal_adc.o(i.ADC_DMAError) referenced from stm32l4xx_hal_adc.o(i.HAL_ADC_Start_DMA)
 <LI><a href="#[75]">ADC_DMAHalfConvCplt</a> from stm32l4xx_hal_adc.o(i.ADC_DMAHalfConvCplt) referenced from stm32l4xx_hal_adc.o(i.HAL_ADC_Start_DMA)
 <LI><a href="#[c2]">ADS7946_SPI_0_event_handler</a> from smp_ads7946_driver.o(i.ADS7946_SPI_0_event_handler) referenced from smp_ads7946_driver.o(i.smp_ADS7946_init)
 <LI><a href="#[10]">BusFault_Handler</a> from startup_stm32l496xx.o(.text) referenced from startup_stm32l496xx.o(RESET)
 <LI><a href="#[2a]">CAN1_RX0_IRQHandler</a> from smp_can.o(i.CAN1_RX0_IRQHandler) referenced from startup_stm32l496xx.o(RESET)
 <LI><a href="#[2b]">CAN1_RX1_IRQHandler</a> from startup_stm32l496xx.o(.text) referenced from startup_stm32l496xx.o(RESET)
 <LI><a href="#[2c]">CAN1_SCE_IRQHandler</a> from startup_stm32l496xx.o(.text) referenced from startup_stm32l496xx.o(RESET)
 <LI><a href="#[29]">CAN1_TX_IRQHandler</a> from smp_can.o(i.CAN1_TX_IRQHandler) referenced from startup_stm32l496xx.o(RESET)
 <LI><a href="#[6c]">CAN2_RX0_IRQHandler</a> from smp_can.o(i.CAN2_RX0_IRQHandler) referenced from startup_stm32l496xx.o(RESET)
 <LI><a href="#[6d]">CAN2_RX1_IRQHandler</a> from startup_stm32l496xx.o(.text) referenced from startup_stm32l496xx.o(RESET)
 <LI><a href="#[6e]">CAN2_SCE_IRQHandler</a> from startup_stm32l496xx.o(.text) referenced from startup_stm32l496xx.o(RESET)
 <LI><a href="#[6b]">CAN2_TX_IRQHandler</a> from smp_can.o(i.CAN2_TX_IRQHandler) referenced from startup_stm32l496xx.o(RESET)
 <LI><a href="#[56]">COMP_IRQHandler</a> from startup_stm32l496xx.o(.text) referenced from startup_stm32l496xx.o(RESET)
 <LI><a href="#[67]">CRS_IRQHandler</a> from startup_stm32l496xx.o(.text) referenced from startup_stm32l496xx.o(RESET)
 <LI><a href="#[6a]">DCMI_IRQHandler</a> from startup_stm32l496xx.o(.text) referenced from startup_stm32l496xx.o(RESET)
 <LI><a href="#[53]">DFSDM1_FLT0_IRQHandler</a> from startup_stm32l496xx.o(.text) referenced from startup_stm32l496xx.o(RESET)
 <LI><a href="#[54]">DFSDM1_FLT1_IRQHandler</a> from startup_stm32l496xx.o(.text) referenced from startup_stm32l496xx.o(RESET)
 <LI><a href="#[55]">DFSDM1_FLT2_IRQHandler</a> from startup_stm32l496xx.o(.text) referenced from startup_stm32l496xx.o(RESET)
 <LI><a href="#[40]">DFSDM1_FLT3_IRQHandler</a> from startup_stm32l496xx.o(.text) referenced from startup_stm32l496xx.o(RESET)
 <LI><a href="#[21]">DMA1_Channel1_IRQHandler</a> from smp_adc.o(i.DMA1_Channel1_IRQHandler) referenced from startup_stm32l496xx.o(RESET)
 <LI><a href="#[22]">DMA1_Channel2_IRQHandler</a> from smp_spi_dma.o(i.DMA1_Channel2_IRQHandler) referenced from startup_stm32l496xx.o(RESET)
 <LI><a href="#[23]">DMA1_Channel3_IRQHandler</a> from smp_spi_dma.o(i.DMA1_Channel3_IRQHandler) referenced from startup_stm32l496xx.o(RESET)
 <LI><a href="#[24]">DMA1_Channel4_IRQHandler</a> from smp_spi_dma.o(i.DMA1_Channel4_IRQHandler) referenced from startup_stm32l496xx.o(RESET)
 <LI><a href="#[25]">DMA1_Channel5_IRQHandler</a> from smp_spi_dma.o(i.DMA1_Channel5_IRQHandler) referenced from startup_stm32l496xx.o(RESET)
 <LI><a href="#[26]">DMA1_Channel6_IRQHandler</a> from startup_stm32l496xx.o(.text) referenced from startup_stm32l496xx.o(RESET)
 <LI><a href="#[27]">DMA1_Channel7_IRQHandler</a> from startup_stm32l496xx.o(.text) referenced from startup_stm32l496xx.o(RESET)
 <LI><a href="#[6f]">DMA2D_IRQHandler</a> from startup_stm32l496xx.o(.text) referenced from startup_stm32l496xx.o(RESET)
 <LI><a href="#[4e]">DMA2_Channel1_IRQHandler</a> from smp_spi_dma.o(i.DMA2_Channel1_IRQHandler) referenced from startup_stm32l496xx.o(RESET)
 <LI><a href="#[4f]">DMA2_Channel2_IRQHandler</a> from smp_spi_dma.o(i.DMA2_Channel2_IRQHandler) referenced from startup_stm32l496xx.o(RESET)
 <LI><a href="#[50]">DMA2_Channel3_IRQHandler</a> from smp_uart.o(i.DMA2_Channel3_IRQHandler) referenced from startup_stm32l496xx.o(RESET)
 <LI><a href="#[51]">DMA2_Channel4_IRQHandler</a> from startup_stm32l496xx.o(.text) referenced from startup_stm32l496xx.o(RESET)
 <LI><a href="#[52]">DMA2_Channel5_IRQHandler</a> from smp_uart.o(i.DMA2_Channel5_IRQHandler) referenced from startup_stm32l496xx.o(RESET)
 <LI><a href="#[5a]">DMA2_Channel6_IRQHandler</a> from startup_stm32l496xx.o(.text) referenced from startup_stm32l496xx.o(RESET)
 <LI><a href="#[5b]">DMA2_Channel7_IRQHandler</a> from startup_stm32l496xx.o(.text) referenced from startup_stm32l496xx.o(RESET)
 <LI><a href="#[126]">DavinciCanDebugCellVSimu</a> from appserialcandavincidebug.o(i.DavinciCanDebugCellVSimu) referenced from appserialcandavincidebug.o(.constdata)
 <LI><a href="#[124]">DavinciCanDebugCurrentAdc</a> from appserialcandavincidebug.o(i.DavinciCanDebugCurrentAdc) referenced from appserialcandavincidebug.o(.constdata)
 <LI><a href="#[12a]">DavinciCanDebugCurrentSimu</a> from appserialcandavincidebug.o(i.DavinciCanDebugCurrentSimu) referenced from appserialcandavincidebug.o(.constdata)
 <LI><a href="#[129]">DavinciCanDebugGpio</a> from appserialcandavincidebug.o(i.DavinciCanDebugGpio) referenced from appserialcandavincidebug.o(.constdata)
 <LI><a href="#[123]">DavinciCanDebugModeChange</a> from appserialcandavincidebug.o(i.DavinciCanDebugModeChange) referenced from appserialcandavincidebug.o(.constdata)
 <LI><a href="#[128]">DavinciCanDebugNtcTSimu</a> from appserialcandavincidebug.o(i.DavinciCanDebugNtcTSimu) referenced from appserialcandavincidebug.o(.constdata)
 <LI><a href="#[127]">DavinciCanDebugNtcVSimu</a> from appserialcandavincidebug.o(i.DavinciCanDebugNtcVSimu) referenced from appserialcandavincidebug.o(.constdata)
 <LI><a href="#[12c]">DavinciCanDebugRelayControl</a> from appserialcandavincidebug.o(i.DavinciCanDebugRelayControl) referenced from appserialcandavincidebug.o(.constdata)
 <LI><a href="#[12b]">DavinciCanDebugVBatSimu</a> from appserialcandavincidebug.o(i.DavinciCanDebugVBatSimu) referenced from appserialcandavincidebug.o(.constdata)
 <LI><a href="#[125]">DavinciCanDebugVbatAdc</a> from appserialcandavincidebug.o(i.DavinciCanDebugVbatAdc) referenced from appserialcandavincidebug.o(.constdata)
 <LI><a href="#[e1]">DavinciCanFunBaseRxTx</a> from appserialcandavincibasecmd.o(i.DavinciCanFunBaseRxTx) referenced 2 times from appserialcandavinci.o(.constdata)
 <LI><a href="#[e2]">DavinciCanFunCmdRx</a> from appserialcandavincicmd.o(i.DavinciCanFunCmdRx) referenced from appserialcandavinci.o(.constdata)
 <LI><a href="#[e4]">DavinciCanFunCommonRx</a> from appserialcandavincicommon.o(i.DavinciCanFunCommonRx) referenced 2 times from appserialcandavinci.o(.constdata)
 <LI><a href="#[e3]">DavinciCanFunDebugRx</a> from appserialcandavincidebug.o(i.DavinciCanFunDebugRx) referenced from appserialcandavinci.o(.constdata)
 <LI><a href="#[e5]">DavinciCanFunFuRx</a> from appserialcandavincifirmwareupgrade.o(i.DavinciCanFunFuRx) referenced from appserialcandavinci.o(.constdata)
 <LI><a href="#[105]">DavinciCanParameterAfeCommunication</a> from appserialcandavinciparameter.o(i.DavinciCanParameterAfeCommunication) referenced from appserialcandavinciparameter.o(.constdata)
 <LI><a href="#[119]">DavinciCanParameterBalanceChg</a> from appserialcandavinciparameter.o(i.DavinciCanParameterBalanceChg) referenced from appserialcandavinciparameter.o(.constdata)
 <LI><a href="#[11a]">DavinciCanParameterBalanceDhg</a> from appserialcandavinciparameter.o(i.DavinciCanParameterBalanceDhg) referenced from appserialcandavinciparameter.o(.constdata)
 <LI><a href="#[118]">DavinciCanParameterBalanceDuty</a> from appserialcandavinciparameter.o(i.DavinciCanParameterBalanceDuty) referenced 2 times from appserialcandavinciparameter.o(.constdata)
 <LI><a href="#[11b]">DavinciCanParameterBalanceRlx</a> from appserialcandavinciparameter.o(i.DavinciCanParameterBalanceRlx) referenced from appserialcandavinciparameter.o(.constdata)
 <LI><a href="#[115]">DavinciCanParameterCocp</a> from appserialcandavinciparameter.o(i.DavinciCanParameterCocp) referenced from appserialcandavinciparameter.o(.constdata)
 <LI><a href="#[110]">DavinciCanParameterCotp</a> from appserialcandavinciparameter.o(i.DavinciCanParameterCotp) referenced from appserialcandavinciparameter.o(.constdata)
 <LI><a href="#[11c]">DavinciCanParameterCurrentCalibration</a> from appserialcandavinciparameter.o(i.DavinciCanParameterCurrentCalibration) referenced from appserialcandavinciparameter.o(.constdata)
 <LI><a href="#[111]">DavinciCanParameterCutp</a> from appserialcandavinciparameter.o(i.DavinciCanParameterCutp) referenced from appserialcandavinciparameter.o(.constdata)
 <LI><a href="#[101]">DavinciCanParameterDesignedCapacity</a> from appserialcandavinciparameter.o(i.DavinciCanParameterDesignedCapacity) referenced from appserialcandavinciparameter.o(.constdata)
 <LI><a href="#[116]">DavinciCanParameterDocp</a> from appserialcandavinciparameter.o(i.DavinciCanParameterDocp) referenced from appserialcandavinciparameter.o(.constdata)
 <LI><a href="#[112]">DavinciCanParameterDotp</a> from appserialcandavinciparameter.o(i.DavinciCanParameterDotp) referenced from appserialcandavinciparameter.o(.constdata)
 <LI><a href="#[114]">DavinciCanParameterDtp</a> from appserialcandavinciparameter.o(i.DavinciCanParameterDtp) referenced from appserialcandavinciparameter.o(.constdata)
 <LI><a href="#[113]">DavinciCanParameterDutp</a> from appserialcandavinciparameter.o(i.DavinciCanParameterDutp) referenced from appserialcandavinciparameter.o(.constdata)
 <LI><a href="#[103]">DavinciCanParameterFlatVoltage</a> from appserialcandavinciparameter.o(i.DavinciCanParameterFlatVoltage) referenced from appserialcandavinciparameter.o(.constdata)
 <LI><a href="#[102]">DavinciCanParameterFullChargeCondition</a> from appserialcandavinciparameter.o(i.DavinciCanParameterFullChargeCondition) referenced from appserialcandavinciparameter.o(.constdata)
 <LI><a href="#[fd]">DavinciCanParameterFwBuildDateTime</a> from appserialcandavinciparameter.o(i.DavinciCanParameterFwBuildDateTime) referenced from appserialcandavinciparameter.o(.constdata)
 <LI><a href="#[fc]">DavinciCanParameterFwVersion</a> from appserialcandavinciparameter.o(i.DavinciCanParameterFwVersion) referenced from appserialcandavinciparameter.o(.constdata)
 <LI><a href="#[fb]">DavinciCanParameterHwVersion</a> from appserialcandavinciparameter.o(i.DavinciCanParameterHwVersion) referenced from appserialcandavinciparameter.o(.constdata)
 <LI><a href="#[106]">DavinciCanParameterInsulationResistance</a> from appserialcandavinciparameter.o(i.DavinciCanParameterInsulationResistance) referenced from appserialcandavinciparameter.o(.constdata)
 <LI><a href="#[109]">DavinciCanParameterNoteMessage</a> from appserialcandavinciparameter.o(i.DavinciCanParameterNoteMessage) referenced from appserialcandavinciparameter.o(.constdata)
 <LI><a href="#[10c]">DavinciCanParameterOcvTable</a> from appserialcandavinciparameter.o(i.DavinciCanParameterOcvTable) referenced from appserialcandavinciparameter.o(.constdata)
 <LI><a href="#[10e]">DavinciCanParameterOvp</a> from appserialcandavinciparameter.o(i.DavinciCanParameterOvp) referenced from appserialcandavinciparameter.o(.constdata)
 <LI><a href="#[117]">DavinciCanParameterPF</a> from appserialcandavinciparameter.o(i.DavinciCanParameterPF) referenced 2 times from appserialcandavinciparameter.o(.constdata)
 <LI><a href="#[ff]">DavinciCanParameterPreDischargeTime</a> from appserialcandavinciparameter.o(i.DavinciCanParameterPreDischargeTime) referenced from appserialcandavinciparameter.o(.constdata)
 <LI><a href="#[107]">DavinciCanParameterQmax</a> from appserialcandavinciparameter.o(i.DavinciCanParameterQmax) referenced from appserialcandavinciparameter.o(.constdata)
 <LI><a href="#[108]">DavinciCanParameterRM</a> from appserialcandavinciparameter.o(i.DavinciCanParameterRM) referenced from appserialcandavinciparameter.o(.constdata)
 <LI><a href="#[10d]">DavinciCanParameterRaTable</a> from appserialcandavinciparameter.o(i.DavinciCanParameterRaTable) referenced from appserialcandavinciparameter.o(.constdata)
 <LI><a href="#[f1]">DavinciCanParameterRdWrite</a> from appserialcandavinciparameter.o(i.DavinciCanParameterRdWrite) referenced 2 times from appserialcandavincicmd.o(.constdata)
 <LI><a href="#[100]">DavinciCanParameterRelayOnDiffVoltage</a> from appserialcandavinciparameter.o(i.DavinciCanParameterRelayOnDiffVoltage) referenced from appserialcandavinciparameter.o(.constdata)
 <LI><a href="#[104]">DavinciCanParameterTerminateVoltage</a> from appserialcandavinciparameter.o(i.DavinciCanParameterTerminateVoltage) referenced from appserialcandavinciparameter.o(.constdata)
 <LI><a href="#[10f]">DavinciCanParameterUvp</a> from appserialcandavinciparameter.o(i.DavinciCanParameterUvp) referenced from appserialcandavinciparameter.o(.constdata)
 <LI><a href="#[11d]">DavinciCanParameterVBatCalibration</a> from appserialcandavinciparameter.o(i.DavinciCanParameterVBatCalibration) referenced from appserialcandavinciparameter.o(.constdata)
 <LI><a href="#[fe]">DavinciCanParameterZeroCurrent</a> from appserialcandavinciparameter.o(i.DavinciCanParameterZeroCurrent) referenced from appserialcandavinciparameter.o(.constdata)
 <LI><a href="#[a5]">DavinciCan_cb</a> from appserialcandavinci.o(i.DavinciCan_cb) referenced from appserialcandavinci.o(i.appSerialCanDavinciOpen)
 <LI><a href="#[11e]">DavinciCommonRequestScuId</a> from appserialcandavincicommon.o(i.DavinciCommonRequestScuId) referenced from appserialcandavincicommon.o(.constdata)
 <LI><a href="#[122]">DavinciCommonResetScuId</a> from appserialcandavincicommon.o(i.DavinciCommonResetScuId) referenced from appserialcandavincicommon.o(.constdata)
 <LI><a href="#[11f]">DavinciCommonSetScuId</a> from appserialcandavincicommon.o(i.DavinciCommonSetScuId) referenced from appserialcandavincicommon.o(.constdata)
 <LI><a href="#[120]">DavinciCommonStopScuIdAssign</a> from appserialcandavincicommon.o(i.DavinciCommonStopScuIdAssign) referenced from appserialcandavincicommon.o(.constdata)
 <LI><a href="#[121]">DavinciCommonStopScuIdRequest</a> from appserialcandavincicommon.o(i.DavinciCommonStopScuIdRequest) referenced from appserialcandavincicommon.o(.constdata)
 <LI><a href="#[10a]">DavinciParameterBmuNumber</a> from appserialcandavinciparameter.o(i.DavinciParameterBmuNumber) referenced from appserialcandavinciparameter.o(.constdata)
 <LI><a href="#[10b]">DavinciParameterCellNtcFlag</a> from appserialcandavinciparameter.o(i.DavinciParameterCellNtcFlag) referenced from appserialcandavinciparameter.o(.constdata)
 <LI><a href="#[fa]">DavinciParameterMagicCode</a> from appserialcandavinciparameter.o(i.DavinciParameterMagicCode) referenced from appserialcandavinciparameter.o(.constdata)
 <LI><a href="#[a7]">DavinciUart_cb</a> from appserialuartdavinci.o(i.DavinciUart_cb) referenced from appserialuartdavinci.o(i.appSerialUartDavinciOpen)
 <LI><a href="#[13]">DebugMon_Handler</a> from startup_stm32l496xx.o(.text) referenced from startup_stm32l496xx.o(RESET)
 <LI><a href="#[1c]">EXTI0_IRQHandler</a> from startup_stm32l496xx.o(.text) referenced from startup_stm32l496xx.o(RESET)
 <LI><a href="#[3e]">EXTI15_10_IRQHandler</a> from startup_stm32l496xx.o(.text) referenced from startup_stm32l496xx.o(RESET)
 <LI><a href="#[1d]">EXTI1_IRQHandler</a> from startup_stm32l496xx.o(.text) referenced from startup_stm32l496xx.o(RESET)
 <LI><a href="#[1e]">EXTI2_IRQHandler</a> from startup_stm32l496xx.o(.text) referenced from startup_stm32l496xx.o(RESET)
 <LI><a href="#[1f]">EXTI3_IRQHandler</a> from startup_stm32l496xx.o(.text) referenced from startup_stm32l496xx.o(RESET)
 <LI><a href="#[20]">EXTI4_IRQHandler</a> from startup_stm32l496xx.o(.text) referenced from startup_stm32l496xx.o(RESET)
 <LI><a href="#[2d]">EXTI9_5_IRQHandler</a> from smp_w5500_dma.o(i.EXTI9_5_IRQHandler) referenced from startup_stm32l496xx.o(RESET)
 <LI><a href="#[1a]">FLASH_IRQHandler</a> from startup_stm32l496xx.o(.text) referenced from startup_stm32l496xx.o(RESET)
 <LI><a href="#[46]">FMC_IRQHandler</a> from startup_stm32l496xx.o(.text) referenced from startup_stm32l496xx.o(RESET)
 <LI><a href="#[66]">FPU_IRQHandler</a> from startup_stm32l496xx.o(.text) referenced from startup_stm32l496xx.o(RESET)
 <LI><a href="#[b1]">FuCallbackFunction</a> from appserialcandavincifirmwareupgrade.o(i.FuCallbackFunction) referenced from appserialcandavincifirmwareupgrade.o(i.decodeFuInfoPackage)
 <LI><a href="#[8]">HalBspGetButtonStatus</a> from halbsp.o(i.HalBspGetButtonStatus) referenced 2 times from apisignalfeedback.o(.data)
 <LI><a href="#[a]">HalBspGetCocpLatchStatus</a> from halbsp.o(i.HalBspGetCocpLatchStatus) referenced 2 times from apisignalfeedback.o(.data)
 <LI><a href="#[1]">HalBspGetDi1Status</a> from halbsp.o(i.HalBspGetDi1Status) referenced 2 times from apisignalfeedback.o(.data)
 <LI><a href="#[2]">HalBspGetDi2Status</a> from halbsp.o(i.HalBspGetDi2Status) referenced 2 times from apisignalfeedback.o(.data)
 <LI><a href="#[9]">HalBspGetDocpLatchStatus</a> from halbsp.o(i.HalBspGetDocpLatchStatus) referenced 2 times from apisignalfeedback.o(.data)
 <LI><a href="#[3]">HalBspGetEpoStatus</a> from halbsp.o(i.HalBspGetEpoStatus) referenced 2 times from apisignalfeedback.o(.data)
 <LI><a href="#[b]">HalBspGetOdInStatus</a> from halbsp.o(i.HalBspGetOdInStatus) referenced 2 times from apisignalfeedback.o(.data)
 <LI><a href="#[5]">HalBspGetPs1Status</a> from halbsp.o(i.HalBspGetPs1Status) referenced 2 times from apisignalfeedback.o(.data)
 <LI><a href="#[6]">HalBspGetPs2Status</a> from halbsp.o(i.HalBspGetPs2Status) referenced 2 times from apisignalfeedback.o(.data)
 <LI><a href="#[7]">HalBspGetPs3Status</a> from halbsp.o(i.HalBspGetPs3Status) referenced 2 times from apisignalfeedback.o(.data)
 <LI><a href="#[4]">HalBspGetSpStatus</a> from halbsp.o(i.HalBspGetSpStatus) referenced 2 times from apisignalfeedback.o(.data)
 <LI><a href="#[e]">HardFault_Handler</a> from startup_stm32l496xx.o(.text) referenced from startup_stm32l496xx.o(RESET)
 <LI><a href="#[36]">I2C1_ER_IRQHandler</a> from startup_stm32l496xx.o(.text) referenced from startup_stm32l496xx.o(RESET)
 <LI><a href="#[35]">I2C1_EV_IRQHandler</a> from startup_stm32l496xx.o(.text) referenced from startup_stm32l496xx.o(RESET)
 <LI><a href="#[38]">I2C2_ER_IRQHandler</a> from startup_stm32l496xx.o(.text) referenced from startup_stm32l496xx.o(RESET)
 <LI><a href="#[37]">I2C2_EV_IRQHandler</a> from startup_stm32l496xx.o(.text) referenced from startup_stm32l496xx.o(RESET)
 <LI><a href="#[5f]">I2C3_ER_IRQHandler</a> from startup_stm32l496xx.o(.text) referenced from startup_stm32l496xx.o(RESET)
 <LI><a href="#[5e]">I2C3_EV_IRQHandler</a> from startup_stm32l496xx.o(.text) referenced from startup_stm32l496xx.o(RESET)
 <LI><a href="#[69]">I2C4_ER_IRQHandler</a> from startup_stm32l496xx.o(.text) referenced from startup_stm32l496xx.o(RESET)
 <LI><a href="#[68]">I2C4_EV_IRQHandler</a> from startup_stm32l496xx.o(.text) referenced from startup_stm32l496xx.o(RESET)
 <LI><a href="#[90]">IRMonitoringSwTimerHandler</a> from apiirmonitoring.o(i.IRMonitoringSwTimerHandler) referenced from apiirmonitoring.o(i.apiIRMonitoringOpen)
 <LI><a href="#[64]">LCD_IRQHandler</a> from startup_stm32l496xx.o(.text) referenced from startup_stm32l496xx.o(RESET)
 <LI><a href="#[57]">LPTIM1_IRQHandler</a> from startup_stm32l496xx.o(.text) referenced from startup_stm32l496xx.o(RESET)
 <LI><a href="#[58]">LPTIM2_IRQHandler</a> from startup_stm32l496xx.o(.text) referenced from startup_stm32l496xx.o(RESET)
 <LI><a href="#[5c]">LPUART1_IRQHandler</a> from startup_stm32l496xx.o(.text) referenced from startup_stm32l496xx.o(RESET)
 <LI><a href="#[c3]">MX25L_SPI_1_event_handler</a> from smp_mx25l_driver.o(i.MX25L_SPI_1_event_handler) referenced from smp_mx25l_driver.o(i.smp_mx25l_flash_init)
 <LI><a href="#[f]">MemManage_Handler</a> from startup_stm32l496xx.o(.text) referenced from startup_stm32l496xx.o(RESET)
 <LI><a href="#[d]">NMI_Handler</a> from startup_stm32l496xx.o(.text) referenced from startup_stm32l496xx.o(RESET)
 <LI><a href="#[59]">OTG_FS_IRQHandler</a> from startup_stm32l496xx.o(.text) referenced from startup_stm32l496xx.o(RESET)
 <LI><a href="#[17]">PVD_PVM_IRQHandler</a> from startup_stm32l496xx.o(.text) referenced from startup_stm32l496xx.o(RESET)
 <LI><a href="#[14]">PendSV_Handler</a> from startup_stm32l496xx.o(.text) referenced from startup_stm32l496xx.o(RESET)
 <LI><a href="#[5d]">QUADSPI_IRQHandler</a> from startup_stm32l496xx.o(.text) referenced from startup_stm32l496xx.o(RESET)
 <LI><a href="#[1b]">RCC_IRQHandler</a> from startup_stm32l496xx.o(.text) referenced from startup_stm32l496xx.o(RESET)
 <LI><a href="#[65]">RNG_IRQHandler</a> from startup_stm32l496xx.o(.text) referenced from startup_stm32l496xx.o(RESET)
 <LI><a href="#[3f]">RTC_Alarm_IRQHandler</a> from startup_stm32l496xx.o(.text) referenced from startup_stm32l496xx.o(RESET)
 <LI><a href="#[19]">RTC_WKUP_IRQHandler</a> from startup_stm32l496xx.o(.text) referenced from startup_stm32l496xx.o(RESET)
 <LI><a href="#[c]">Reset_Handler</a> from startup_stm32l496xx.o(.text) referenced from startup_stm32l496xx.o(RESET)
 <LI><a href="#[60]">SAI1_IRQHandler</a> from startup_stm32l496xx.o(.text) referenced from startup_stm32l496xx.o(RESET)
 <LI><a href="#[61]">SAI2_IRQHandler</a> from startup_stm32l496xx.o(.text) referenced from startup_stm32l496xx.o(RESET)
 <LI><a href="#[47]">SDMMC1_IRQHandler</a> from startup_stm32l496xx.o(.text) referenced from startup_stm32l496xx.o(RESET)
 <LI><a href="#[39]">SPI1_IRQHandler</a> from startup_stm32l496xx.o(.text) referenced from startup_stm32l496xx.o(RESET)
 <LI><a href="#[3a]">SPI2_IRQHandler</a> from startup_stm32l496xx.o(.text) referenced from startup_stm32l496xx.o(RESET)
 <LI><a href="#[49]">SPI3_IRQHandler</a> from startup_stm32l496xx.o(.text) referenced from startup_stm32l496xx.o(RESET)
 <LI><a href="#[79]">SPI_DMAError</a> from stm32l4xx_hal_spi.o(i.SPI_DMAError) referenced from stm32l4xx_hal_spi.o(i.HAL_SPI_Receive_DMA)
 <LI><a href="#[79]">SPI_DMAError</a> from stm32l4xx_hal_spi.o(i.SPI_DMAError) referenced from stm32l4xx_hal_spi.o(i.HAL_SPI_TransmitReceive_DMA)
 <LI><a href="#[79]">SPI_DMAError</a> from stm32l4xx_hal_spi.o(i.SPI_DMAError) referenced from stm32l4xx_hal_spi.o(i.HAL_SPI_Transmit_DMA)
 <LI><a href="#[77]">SPI_DMAHalfReceiveCplt</a> from stm32l4xx_hal_spi.o(i.SPI_DMAHalfReceiveCplt) referenced from stm32l4xx_hal_spi.o(i.HAL_SPI_Receive_DMA)
 <LI><a href="#[77]">SPI_DMAHalfReceiveCplt</a> from stm32l4xx_hal_spi.o(i.SPI_DMAHalfReceiveCplt) referenced from stm32l4xx_hal_spi.o(i.HAL_SPI_TransmitReceive_DMA)
 <LI><a href="#[7c]">SPI_DMAHalfTransmitCplt</a> from stm32l4xx_hal_spi.o(i.SPI_DMAHalfTransmitCplt) referenced from stm32l4xx_hal_spi.o(i.HAL_SPI_Transmit_DMA)
 <LI><a href="#[7a]">SPI_DMAHalfTransmitReceiveCplt</a> from stm32l4xx_hal_spi.o(i.SPI_DMAHalfTransmitReceiveCplt) referenced from stm32l4xx_hal_spi.o(i.HAL_SPI_TransmitReceive_DMA)
 <LI><a href="#[78]">SPI_DMAReceiveCplt</a> from stm32l4xx_hal_spi.o(i.SPI_DMAReceiveCplt) referenced from stm32l4xx_hal_spi.o(i.HAL_SPI_Receive_DMA)
 <LI><a href="#[78]">SPI_DMAReceiveCplt</a> from stm32l4xx_hal_spi.o(i.SPI_DMAReceiveCplt) referenced from stm32l4xx_hal_spi.o(i.HAL_SPI_TransmitReceive_DMA)
 <LI><a href="#[7d]">SPI_DMATransmitCplt</a> from stm32l4xx_hal_spi.o(i.SPI_DMATransmitCplt) referenced from stm32l4xx_hal_spi.o(i.HAL_SPI_Transmit_DMA)
 <LI><a href="#[7b]">SPI_DMATransmitReceiveCplt</a> from stm32l4xx_hal_spi.o(i.SPI_DMATransmitReceiveCplt) referenced from stm32l4xx_hal_spi.o(i.HAL_SPI_TransmitReceive_DMA)
 <LI><a href="#[12]">SVC_Handler</a> from startup_stm32l496xx.o(.text) referenced from startup_stm32l496xx.o(RESET)
 <LI><a href="#[62]">SWPMI1_IRQHandler</a> from startup_stm32l496xx.o(.text) referenced from startup_stm32l496xx.o(RESET)
 <LI><a href="#[15]">SysTick_Handler</a> from main.o(i.SysTick_Handler) referenced from startup_stm32l496xx.o(RESET)
 <LI><a href="#[71]">SystemInit</a> from system_stm32l4xx.o(i.SystemInit) referenced from startup_stm32l496xx.o(.text)
 <LI><a href="#[18]">TAMP_STAMP_IRQHandler</a> from startup_stm32l496xx.o(.text) referenced from startup_stm32l496xx.o(RESET)
 <LI><a href="#[2e]">TIM1_BRK_TIM15_IRQHandler</a> from startup_stm32l496xx.o(.text) referenced from startup_stm32l496xx.o(RESET)
 <LI><a href="#[31]">TIM1_CC_IRQHandler</a> from startup_stm32l496xx.o(.text) referenced from startup_stm32l496xx.o(RESET)
 <LI><a href="#[30]">TIM1_TRG_COM_TIM17_IRQHandler</a> from startup_stm32l496xx.o(.text) referenced from startup_stm32l496xx.o(RESET)
 <LI><a href="#[2f]">TIM1_UP_TIM16_IRQHandler</a> from startup_stm32l496xx.o(.text) referenced from startup_stm32l496xx.o(RESET)
 <LI><a href="#[32]">TIM2_IRQHandler</a> from startup_stm32l496xx.o(.text) referenced from startup_stm32l496xx.o(RESET)
 <LI><a href="#[33]">TIM3_IRQHandler</a> from haltimerstm32l4xx.o(i.TIM3_IRQHandler) referenced from startup_stm32l496xx.o(RESET)
 <LI><a href="#[34]">TIM4_IRQHandler</a> from startup_stm32l496xx.o(.text) referenced from startup_stm32l496xx.o(RESET)
 <LI><a href="#[48]">TIM5_IRQHandler</a> from startup_stm32l496xx.o(.text) referenced from startup_stm32l496xx.o(RESET)
 <LI><a href="#[4c]">TIM6_DAC_IRQHandler</a> from startup_stm32l496xx.o(.text) referenced from startup_stm32l496xx.o(RESET)
 <LI><a href="#[4d]">TIM7_IRQHandler</a> from startup_stm32l496xx.o(.text) referenced from startup_stm32l496xx.o(RESET)
 <LI><a href="#[41]">TIM8_BRK_IRQHandler</a> from startup_stm32l496xx.o(.text) referenced from startup_stm32l496xx.o(RESET)
 <LI><a href="#[44]">TIM8_CC_IRQHandler</a> from startup_stm32l496xx.o(.text) referenced from startup_stm32l496xx.o(RESET)
 <LI><a href="#[43]">TIM8_TRG_COM_IRQHandler</a> from startup_stm32l496xx.o(.text) referenced from startup_stm32l496xx.o(RESET)
 <LI><a href="#[42]">TIM8_UP_IRQHandler</a> from startup_stm32l496xx.o(.text) referenced from startup_stm32l496xx.o(RESET)
 <LI><a href="#[63]">TSC_IRQHandler</a> from startup_stm32l496xx.o(.text) referenced from startup_stm32l496xx.o(RESET)
 <LI><a href="#[4a]">UART4_IRQHandler</a> from smp_uart.o(i.UART4_IRQHandler) referenced from startup_stm32l496xx.o(RESET)
 <LI><a href="#[4b]">UART5_IRQHandler</a> from startup_stm32l496xx.o(.text) referenced from startup_stm32l496xx.o(RESET)
 <LI><a href="#[7e]">UART_DMAAbortOnError</a> from stm32l4xx_hal_uart.o(i.UART_DMAAbortOnError) referenced from stm32l4xx_hal_uart.o(i.HAL_UART_IRQHandler)
 <LI><a href="#[81]">UART_DMAError</a> from stm32l4xx_hal_uart.o(i.UART_DMAError) referenced from stm32l4xx_hal_uart.o(i.HAL_UART_Transmit_DMA)
 <LI><a href="#[81]">UART_DMAError</a> from stm32l4xx_hal_uart.o(i.UART_DMAError) referenced from stm32l4xx_hal_uart.o(i.UART_Start_Receive_DMA)
 <LI><a href="#[86]">UART_DMAReceiveCplt</a> from stm32l4xx_hal_uart.o(i.UART_DMAReceiveCplt) referenced from stm32l4xx_hal_uart.o(i.UART_Start_Receive_DMA)
 <LI><a href="#[87]">UART_DMARxHalfCplt</a> from stm32l4xx_hal_uart.o(i.UART_DMARxHalfCplt) referenced from stm32l4xx_hal_uart.o(i.UART_Start_Receive_DMA)
 <LI><a href="#[7f]">UART_DMATransmitCplt</a> from stm32l4xx_hal_uart.o(i.UART_DMATransmitCplt) referenced from stm32l4xx_hal_uart.o(i.HAL_UART_Transmit_DMA)
 <LI><a href="#[80]">UART_DMATxHalfCplt</a> from stm32l4xx_hal_uart.o(i.UART_DMATxHalfCplt) referenced from stm32l4xx_hal_uart.o(i.HAL_UART_Transmit_DMA)
 <LI><a href="#[89]">UART_RxISR_16BIT</a> from stm32l4xx_hal_uart.o(i.UART_RxISR_16BIT) referenced from stm32l4xx_hal_uart.o(i.UART_Start_Receive_IT)
 <LI><a href="#[88]">UART_RxISR_8BIT</a> from stm32l4xx_hal_uart.o(i.UART_RxISR_8BIT) referenced from stm32l4xx_hal_uart.o(i.UART_Start_Receive_IT)
 <LI><a href="#[83]">UART_TxISR_16BIT</a> from stm32l4xx_hal_uart.o(i.UART_TxISR_16BIT) referenced from stm32l4xx_hal_uart.o(i.HAL_UART_Transmit_IT)
 <LI><a href="#[82]">UART_TxISR_8BIT</a> from stm32l4xx_hal_uart.o(i.UART_TxISR_8BIT) referenced from stm32l4xx_hal_uart.o(i.HAL_UART_Transmit_IT)
 <LI><a href="#[3b]">USART1_IRQHandler</a> from startup_stm32l496xx.o(.text) referenced from startup_stm32l496xx.o(RESET)
 <LI><a href="#[3c]">USART2_IRQHandler</a> from startup_stm32l496xx.o(.text) referenced from startup_stm32l496xx.o(RESET)
 <LI><a href="#[3d]">USART3_IRQHandler</a> from smp_uart.o(i.USART3_IRQHandler) referenced from startup_stm32l496xx.o(RESET)
 <LI><a href="#[11]">UsageFault_Handler</a> from startup_stm32l496xx.o(.text) referenced from startup_stm32l496xx.o(RESET)
 <LI><a href="#[84]">W5500SwTimerHandler</a> from smp_w5500_dma.o(i.W5500SwTimerHandler) referenced from smp_w5500_dma.o(i.Hal_W5500_Open)
 <LI><a href="#[16]">WWDG_IRQHandler</a> from startup_stm32l496xx.o(.text) referenced from startup_stm32l496xx.o(RESET)
 <LI><a href="#[72]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_stm32l496xx.o(.text)
 <LI><a href="#[8b]">_sputc</a> from printfa.o(i._sputc) referenced from printfa.o(i.__0sprintf)
 <LI><a href="#[af]">ads7946_callBack</a> from halafeads7946.o(i.ads7946_callBack) referenced from halafeads7946.o(i.currentSwTimerHandler)
 <LI><a href="#[97]">appBalanceCheck</a> from appbalance.o(i.appBalanceCheck) referenced from appbalance.o(i.appBalanceSwTimerHandler)
 <LI><a href="#[bf]">appBalanceCheckEvent</a> from appbalance.o(i.appBalanceCheckEvent) referenced from appbalance.o(i.nextBalanceCheckProcess)
 <LI><a href="#[96]">appBalanceSwTimerHandler</a> from appbalance.o(i.appBalanceSwTimerHandler) referenced from appbalance.o(i.appBalanceOpen)
 <LI><a href="#[a1]">appProjectDavinciBalanceEventHandler</a> from appprojecthvess.o(i.appProjectDavinciBalanceEventHandler) referenced from appprojecthvess.o(i.appProjectOpen)
 <LI><a href="#[9e]">appProjectHwTimerHandler</a> from appprojecthvess.o(i.appProjectHwTimerHandler) referenced from appprojecthvess.o(i.appProjectOpen)
 <LI><a href="#[a2]">appProjectSwTimerHandler</a> from appprojecthvess.o(i.appProjectSwTimerHandler) referenced from appprojecthvess.o(i.appProjectOpen)
 <LI><a href="#[da]">appProtectCocp_L1</a> from appprotect.o(i.appProtectCocp_L1) referenced from appprotect.o(.constdata)
 <LI><a href="#[db]">appProtectCocp_L2</a> from appprotect.o(i.appProtectCocp_L2) referenced from appprotect.o(.constdata)
 <LI><a href="#[dc]">appProtectCocp_L3</a> from appprotect.o(i.appProtectCocp_L3) referenced from appprotect.o(.constdata)
 <LI><a href="#[ce]">appProtectCotp_L1</a> from appprotect.o(i.appProtectCotp_L1) referenced from appprotect.o(.constdata)
 <LI><a href="#[cf]">appProtectCotp_L2</a> from appprotect.o(i.appProtectCotp_L2) referenced from appprotect.o(.constdata)
 <LI><a href="#[d0]">appProtectCotp_L3</a> from appprotect.o(i.appProtectCotp_L3) referenced from appprotect.o(.constdata)
 <LI><a href="#[d1]">appProtectCutp_L1</a> from appprotect.o(i.appProtectCutp_L1) referenced from appprotect.o(.constdata)
 <LI><a href="#[d2]">appProtectCutp_L2</a> from appprotect.o(i.appProtectCutp_L2) referenced from appprotect.o(.constdata)
 <LI><a href="#[d3]">appProtectCutp_L3</a> from appprotect.o(i.appProtectCutp_L3) referenced from appprotect.o(.constdata)
 <LI><a href="#[dd]">appProtectDocp_L1</a> from appprotect.o(i.appProtectDocp_L1) referenced from appprotect.o(.constdata)
 <LI><a href="#[de]">appProtectDocp_L2</a> from appprotect.o(i.appProtectDocp_L2) referenced from appprotect.o(.constdata)
 <LI><a href="#[df]">appProtectDocp_L3</a> from appprotect.o(i.appProtectDocp_L3) referenced from appprotect.o(.constdata)
 <LI><a href="#[d4]">appProtectDotp_L1</a> from appprotect.o(i.appProtectDotp_L1) referenced from appprotect.o(.constdata)
 <LI><a href="#[d5]">appProtectDotp_L2</a> from appprotect.o(i.appProtectDotp_L2) referenced from appprotect.o(.constdata)
 <LI><a href="#[d6]">appProtectDotp_L3</a> from appprotect.o(i.appProtectDotp_L3) referenced from appprotect.o(.constdata)
 <LI><a href="#[d7]">appProtectDutp_L1</a> from appprotect.o(i.appProtectDutp_L1) referenced from appprotect.o(.constdata)
 <LI><a href="#[d8]">appProtectDutp_L2</a> from appprotect.o(i.appProtectDutp_L2) referenced from appprotect.o(.constdata)
 <LI><a href="#[d9]">appProtectDutp_L3</a> from appprotect.o(i.appProtectDutp_L3) referenced from appprotect.o(.constdata)
 <LI><a href="#[e0]">appProtectEnd</a> from appprotect.o(i.appProtectEnd) referenced from appprotect.o(.constdata)
 <LI><a href="#[c5]">appProtectNone</a> from appprotect.o(i.appProtectNone) referenced from appprotect.o(.constdata)
 <LI><a href="#[c9]">appProtectOvPf</a> from appprotect.o(i.appProtectOvPf) referenced from appprotect.o(.constdata)
 <LI><a href="#[c6]">appProtectOvp_L1</a> from appprotect.o(i.appProtectOvp_L1) referenced from appprotect.o(.constdata)
 <LI><a href="#[c7]">appProtectOvp_L2</a> from appprotect.o(i.appProtectOvp_L2) referenced from appprotect.o(.constdata)
 <LI><a href="#[c8]">appProtectOvp_L3</a> from appprotect.o(i.appProtectOvp_L3) referenced from appprotect.o(.constdata)
 <LI><a href="#[a4]">appProtectSwTimerHandler</a> from appprotect.o(i.appProtectSwTimerHandler) referenced from appprotect.o(i.appProtectOpen)
 <LI><a href="#[cd]">appProtectUvpPf</a> from appprotect.o(i.appProtectUvpPf) referenced from appprotect.o(.constdata)
 <LI><a href="#[ca]">appProtectUvp_L1</a> from appprotect.o(i.appProtectUvp_L1) referenced from appprotect.o(.constdata)
 <LI><a href="#[cb]">appProtectUvp_L2</a> from appprotect.o(i.appProtectUvp_L2) referenced from appprotect.o(.constdata)
 <LI><a href="#[cc]">appProtectUvp_L3</a> from appprotect.o(i.appProtectUvp_L3) referenced from appprotect.o(.constdata)
 <LI><a href="#[e8]">appSerialCanDavinciNotificationCellVoltage</a> from appserialcandavincinotification.o(i.appSerialCanDavinciNotificationCellVoltage) referenced from appserialcandavincinotification.o(.constdata)
 <LI><a href="#[ec]">appSerialCanDavinciNotificationCotpFlag</a> from appserialcandavincinotification.o(i.appSerialCanDavinciNotificationCotpFlag) referenced from appserialcandavincinotification.o(.constdata)
 <LI><a href="#[ed]">appSerialCanDavinciNotificationCutpFlag</a> from appserialcandavincinotification.o(i.appSerialCanDavinciNotificationCutpFlag) referenced from appserialcandavincinotification.o(.constdata)
 <LI><a href="#[ee]">appSerialCanDavinciNotificationDotpFlag</a> from appserialcandavincinotification.o(i.appSerialCanDavinciNotificationDotpFlag) referenced from appserialcandavincinotification.o(.constdata)
 <LI><a href="#[ef]">appSerialCanDavinciNotificationDutpFlag</a> from appserialcandavincinotification.o(i.appSerialCanDavinciNotificationDutpFlag) referenced from appserialcandavincinotification.o(.constdata)
 <LI><a href="#[f0]">appSerialCanDavinciNotificationEnd</a> from appserialcandavincinotification.o(i.appSerialCanDavinciNotificationEnd) referenced from appserialcandavincinotification.o(.constdata)
 <LI><a href="#[e9]">appSerialCanDavinciNotificationNtcVoltage</a> from appserialcandavincinotification.o(i.appSerialCanDavinciNotificationNtcVoltage) referenced from appserialcandavincinotification.o(.constdata)
 <LI><a href="#[ea]">appSerialCanDavinciNotificationOvpFlag</a> from appserialcandavincinotification.o(i.appSerialCanDavinciNotificationOvpFlag) referenced from appserialcandavincinotification.o(.constdata)
 <LI><a href="#[eb]">appSerialCanDavinciNotificationUvpFlag</a> from appserialcandavincinotification.o(i.appSerialCanDavinciNotificationUvpFlag) referenced from appserialcandavincinotification.o(.constdata)
 <LI><a href="#[a6]">appSerialCanDavinciTimerHandler</a> from appserialcandavinci.o(i.appSerialCanDavinciTimerHandler) referenced from appserialcandavinci.o(i.appSerialCanDavinciOpen)
 <LI><a href="#[a8]">appSerialUartDavinciTimerHandler</a> from appserialuartdavinci.o(i.appSerialUartDavinciTimerHandler) referenced from appserialuartdavinci.o(i.appSerialUartDavinciOpen)
 <LI><a href="#[b5]">app_afe_cb</a> from halafebq796xx.o(i.app_afe_cb) referenced from main.o(i.main)
 <LI><a href="#[a9]">app_clean_event_handler</a> from smp_log_managment.o(i.app_clean_event_handler) referenced from smp_log_managment.o(i.app_flash_log_managment_clean_fix_memory)
 <LI><a href="#[a9]">app_clean_event_handler</a> from smp_log_managment.o(i.app_clean_event_handler) referenced from smp_log_managment.o(i.app_flash_log_managment_clean_head)
 <LI><a href="#[a9]">app_clean_event_handler</a> from smp_log_managment.o(i.app_clean_event_handler) referenced from smp_log_managment.o(i.app_flash_log_managment_clean_reflash_memory)
 <LI><a href="#[be]">app_flash_log_event_handler</a> from main.o(i.app_flash_log_event_handler) referenced from main.o(i.main)
 <LI><a href="#[ab]">app_imr_ads7946_callBack</a> from main.o(i.app_imr_ads7946_callBack) referenced from main.o(i.app_irm_trigger_voltage_data_cb)
 <LI><a href="#[ba]">app_irm_get_device_init_cb</a> from main.o(i.app_irm_get_device_init_cb) referenced from main.o(i.main)
 <LI><a href="#[bc]">app_irm_rxdata_cb</a> from main.o(i.app_irm_rxdata_cb) referenced from main.o(i.main)
 <LI><a href="#[b7]">app_irm_sw1_gpio</a> from main.o(i.app_irm_sw1_gpio) referenced from main.o(i.main)
 <LI><a href="#[b8]">app_irm_sw2_gpio</a> from main.o(i.app_irm_sw2_gpio) referenced from main.o(i.main)
 <LI><a href="#[b9]">app_irm_sw3_gpio</a> from main.o(i.app_irm_sw3_gpio) referenced from main.o(i.main)
 <LI><a href="#[b6]">app_irm_sw_gpio_init_cb</a> from main.o(i.app_irm_sw_gpio_init_cb) referenced from main.o(i.main)
 <LI><a href="#[bb]">app_irm_trigger_voltage_data_cb</a> from main.o(i.app_irm_trigger_voltage_data_cb) referenced from main.o(i.main)
 <LI><a href="#[aa]">app_sector_header_event_handler</a> from smp_log_managment.o(i.app_sector_header_event_handler) referenced from smp_log_managment.o(i.app_flash_sector_header_load)
 <LI><a href="#[aa]">app_sector_header_event_handler</a> from smp_log_managment.o(i.app_sector_header_event_handler) referenced from smp_log_managment.o(i.app_sector_header_event_handler)
 <LI><a href="#[ac]">batteryInfoSwTimerHandler</a> from apisyspar.o(i.batteryInfoSwTimerHandler) referenced from apisyspar.o(i.batteryInfoSwTimerHandler)
 <LI><a href="#[ac]">batteryInfoSwTimerHandler</a> from apisyspar.o(i.batteryInfoSwTimerHandler) referenced from apisyspar.o(i.resetBatteryInfoIdleCount)
 <LI><a href="#[a3]">buttonEventHandler</a> from appprojecthvess.o(i.buttonEventHandler) referenced from appprojecthvess.o(i.appProjectOpen)
 <LI><a href="#[9b]">buttonSwTimerHandler</a> from appbutton.o(i.buttonSwTimerHandler) referenced from appbutton.o(i.appButtonOpen)
 <LI><a href="#[144]">checkCOCP_DOCP_Flag</a> from apisystemflag.o(i.checkCOCP_DOCP_Flag) referenced from apisystemflag.o(.constdata)
 <LI><a href="#[138]">checkCOTP_L1</a> from apisystemflag.o(i.checkCOTP_L1) referenced from apisystemflag.o(.constdata)
 <LI><a href="#[139]">checkCOTP_L2</a> from apisystemflag.o(i.checkCOTP_L2) referenced from apisystemflag.o(.constdata)
 <LI><a href="#[13a]">checkCOTP_L3</a> from apisystemflag.o(i.checkCOTP_L3) referenced from apisystemflag.o(.constdata)
 <LI><a href="#[13b]">checkCUTP_L1</a> from apisystemflag.o(i.checkCUTP_L1) referenced from apisystemflag.o(.constdata)
 <LI><a href="#[13c]">checkCUTP_L2</a> from apisystemflag.o(i.checkCUTP_L2) referenced from apisystemflag.o(.constdata)
 <LI><a href="#[13d]">checkCUTP_L3</a> from apisystemflag.o(i.checkCUTP_L3) referenced from apisystemflag.o(.constdata)
 <LI><a href="#[13e]">checkDOTP_L1</a> from apisystemflag.o(i.checkDOTP_L1) referenced from apisystemflag.o(.constdata)
 <LI><a href="#[13f]">checkDOTP_L2</a> from apisystemflag.o(i.checkDOTP_L2) referenced from apisystemflag.o(.constdata)
 <LI><a href="#[140]">checkDOTP_L3</a> from apisystemflag.o(i.checkDOTP_L3) referenced from apisystemflag.o(.constdata)
 <LI><a href="#[141]">checkDUTP_L1</a> from apisystemflag.o(i.checkDUTP_L1) referenced from apisystemflag.o(.constdata)
 <LI><a href="#[142]">checkDUTP_L2</a> from apisystemflag.o(i.checkDUTP_L2) referenced from apisystemflag.o(.constdata)
 <LI><a href="#[143]">checkDUTP_L3</a> from apisystemflag.o(i.checkDUTP_L3) referenced from apisystemflag.o(.constdata)
 <LI><a href="#[145]">checkFbSignal</a> from apisystemflag.o(i.checkFbSignal) referenced from apisystemflag.o(.constdata)
 <LI><a href="#[131]">checkFlagNone</a> from apisystemflag.o(i.checkFlagNone) referenced from apisystemflag.o(.constdata)
 <LI><a href="#[ad]">checkFuCodeDataSwTimerHandler</a> from apifuflashrom.o(i.checkFuCodeDataSwTimerHandler) referenced from apifuflashrom.o(i.checkFuCodeDataSwTimerHandler)
 <LI><a href="#[ad]">checkFuCodeDataSwTimerHandler</a> from apifuflashrom.o(i.checkFuCodeDataSwTimerHandler) referenced from apifuflashrom.o(i.checkRcvFuCodeData)
 <LI><a href="#[147]">checkMinMaxCellVoltage</a> from apisystemflag.o(i.checkMinMaxCellVoltage) referenced from apisystemflag.o(.constdata)
 <LI><a href="#[148]">checkMinMaxNtcTempVoltage</a> from apisystemflag.o(i.checkMinMaxNtcTempVoltage) referenced from apisystemflag.o(.constdata)
 <LI><a href="#[132]">checkOVP_L1</a> from apisystemflag.o(i.checkOVP_L1) referenced from apisystemflag.o(.constdata)
 <LI><a href="#[133]">checkOVP_L2</a> from apisystemflag.o(i.checkOVP_L2) referenced from apisystemflag.o(.constdata)
 <LI><a href="#[134]">checkOVP_L3</a> from apisystemflag.o(i.checkOVP_L3) referenced from apisystemflag.o(.constdata)
 <LI><a href="#[9a]">checkOdInSwTimerHandler</a> from appbms.o(i.checkOdInSwTimerHandler) referenced from appbms.o(i.appBmsOpen)
 <LI><a href="#[146]">checkOtherFlag</a> from apisystemflag.o(i.checkOtherFlag) referenced from apisystemflag.o(.constdata)
 <LI><a href="#[135]">checkUVP_L1</a> from apisystemflag.o(i.checkUVP_L1) referenced from apisystemflag.o(.constdata)
 <LI><a href="#[136]">checkUVP_L2</a> from apisystemflag.o(i.checkUVP_L2) referenced from apisystemflag.o(.constdata)
 <LI><a href="#[137]">checkUVP_L3</a> from apisystemflag.o(i.checkUVP_L3) referenced from apisystemflag.o(.constdata)
 <LI><a href="#[b4]">currentSwTimerHandler</a> from halafeads7946.o(i.currentSwTimerHandler) referenced from halafeads7946.o(i.halAfeCurrentOpen)
 <LI><a href="#[f3]">davinciCanAdc</a> from appserialcandavincicmd.o(i.davinciCanAdc) referenced from appserialcandavincicmd.o(.constdata)
 <LI><a href="#[f5]">davinciCanChecksumn</a> from appserialcandavincicmd.o(i.davinciCanChecksumn) referenced from appserialcandavincicmd.o(.constdata)
 <LI><a href="#[f7]">davinciCanCleanData</a> from appserialcandavincicmd.o(i.davinciCanCleanData) referenced from appserialcandavincicmd.o(.constdata)
 <LI><a href="#[f8]">davinciCanFaultLog</a> from appserialcandavincicmd.o(i.davinciCanFaultLog) referenced from appserialcandavincicmd.o(.constdata)
 <LI><a href="#[f6]">davinciCanPfFlag</a> from appserialcandavincicmd.o(i.davinciCanPfFlag) referenced from appserialcandavincicmd.o(.constdata)
 <LI><a href="#[f4]">davinciCanRelayOn</a> from appserialcandavincicmd.o(i.davinciCanRelayOn) referenced from appserialcandavincicmd.o(.constdata)
 <LI><a href="#[f2]">davinciCanRtc</a> from appserialcandavincicmd.o(i.davinciCanRtc) referenced from appserialcandavincicmd.o(.constdata)
 <LI><a href="#[f9]">davinciCanSoc</a> from appserialcandavincicmd.o(i.davinciCanSoc) referenced from appserialcandavincicmd.o(.constdata)
 <LI><a href="#[b2]">drv_bq796xx_HwTimerHanlder</a> from smp_drv_bq796xx.o(i.drv_bq796xx_HwTimerHanlder) referenced from smp_drv_bq796xx.o(i.drv_bq796xx_init)
 <LI><a href="#[b3]">drv_bq796xx_uart_event_handler</a> from smp_drv_bq796xx.o(i.drv_bq796xx_uart_event_handler) referenced from smp_drv_bq796xx.o(i.drv_bq796xx_switch_rx_pin_type_setting)
 <LI><a href="#[b0]">faultLog1DataCallBack</a> from appserialcandavincicmd.o(i.faultLog1DataCallBack) referenced from appserialcandavincicmd.o(i.davinciCanFaultLog)
 <LI><a href="#[8a]">fputc</a> from fputc.o(i.fputc) referenced from printfa.o(i.__0printf)
 <LI><a href="#[a0]">gaugeEventHandler</a> from appprojecthvess.o(i.gaugeEventHandler) referenced from appprojecthvess.o(i.appProjectOpen)
 <LI><a href="#[9d]">gaugeHwTimerHandler</a> from appgauge.o(i.gaugeHwTimerHandler) referenced from appgauge.o(i.appGaugeOpen)
 <LI><a href="#[9c]">gaugeSwTimerHandler</a> from appgauge.o(i.gaugeSwTimerHandler) referenced from appgauge.o(i.appGaugeOpen)
 <LI><a href="#[85]">getIRMonitoringVoValue_cb</a> from apiirmonitoring.o(i.getIRMonitoringVoValue_cb) referenced from apiirmonitoring.o(i.IRMonitoring_Init)
 <LI><a href="#[bd]">irm_data_ready_cb</a> from main.o(i.irm_data_ready_cb) referenced from main.o(i.main)
 <LI><a href="#[73]">magicCodeIdleSwTimerHandler</a> from appserialcandavinciparameter.o(i.magicCodeIdleSwTimerHandler) referenced from appserialcandavinciparameter.o(i.DavinciParameterMagicCode)
 <LI><a href="#[73]">magicCodeIdleSwTimerHandler</a> from appserialcandavinciparameter.o(i.magicCodeIdleSwTimerHandler) referenced from appserialcandavinciparameter.o(i.magicCodeIdleSwTimerHandler)
 <LI><a href="#[70]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
 <LI><a href="#[99]">masterSwTimerHandler</a> from appbms.o(i.masterSwTimerHandler) referenced from appbms.o(i.appBmsOpen)
 <LI><a href="#[99]">masterSwTimerHandler</a> from appbms.o(i.masterSwTimerHandler) referenced from appbms.o(i.appBmsResetScuId)
 <LI><a href="#[99]">masterSwTimerHandler</a> from appbms.o(i.masterSwTimerHandler) referenced from appbms.o(i.checkOdInSwTimerHandler)
 <LI><a href="#[e7]">notifyBaseInfoPackage</a> from appserialcandavincinotification.o(i.notifyBaseInfoPackage) referenced from appserialcandavincinotification.o(.constdata)
 <LI><a href="#[e6]">notifyFunNone</a> from appserialcandavincinotification.o(i.notifyFunNone) referenced from appserialcandavincinotification.o(.constdata)
 <LI><a href="#[c0]">ocpReleaseSwTimer</a> from appprojecthvess.o(i.ocpReleaseSwTimer) referenced from appprojecthvess.o(i.ocpReleaseSwTimer)
 <LI><a href="#[c0]">ocpReleaseSwTimer</a> from appprojecthvess.o(i.ocpReleaseSwTimer) referenced from appprojecthvess.o(i.releaseOCP)
 <LI><a href="#[98]">outputNextScuCanRequestIdSignal</a> from appbms.o(i.outputNextScuCanRequestIdSignal) referenced from appbms.o(i.appBmsEnterScuIdAssignMode)
 <LI><a href="#[9f]">protectEventHandler</a> from appprojecthvess.o(i.protectEventHandler) referenced from appprojecthvess.o(i.appProjectOpen)
 <LI><a href="#[91]">relayControlSwTimerHandler</a> from apirelaycontrol.o(i.relayControlSwTimerHandler) referenced from apirelaycontrol.o(i.apiRelayControlOpen)
 <LI><a href="#[8d]">resetAndUpdateSwTimerHandler</a> from apifu.o(i.resetAndUpdateSwTimerHandler) referenced from apifu.o(i.apiFuResetAndUpdate)
 <LI><a href="#[8e]">resetAppSwTimerHandler</a> from apifu.o(i.resetAppSwTimerHandler) referenced from apifu.o(i.apiFuResetApp)
 <LI><a href="#[12f]">scuCurrent</a> from appserialcandavincibasecmd.o(i.scuCurrent) referenced from appserialcandavincibasecmd.o(.constdata)
 <LI><a href="#[12d]">scuIdBrocast</a> from appserialcandavincibasecmd.o(i.scuIdBrocast) referenced from appserialcandavincibasecmd.o(.constdata)
 <LI><a href="#[12e]">scuSystemFlag</a> from appserialcandavincibasecmd.o(i.scuSystemFlag) referenced from appserialcandavincibasecmd.o(.constdata)
 <LI><a href="#[92]">scuTempSwTimerHandler</a> from apiscutemp.o(i.scuTempSwTimerHandler) referenced from apiscutemp.o(i.apiScuTempOpen)
 <LI><a href="#[130]">scuVbat</a> from appserialcandavincibasecmd.o(i.scuVbat) referenced from appserialcandavincibasecmd.o(.constdata)
 <LI><a href="#[8c]">searchLastLogAddressSwTimerHandler</a> from apieventflashrom.o(i.searchLastLogAddressSwTimerHandler) referenced from apieventflashrom.o(i.apiEventLogOpen)
 <LI><a href="#[8c]">searchLastLogAddressSwTimerHandler</a> from apieventflashrom.o(i.searchLastLogAddressSwTimerHandler) referenced from apieventflashrom.o(i.searchLastLogAddressSwTimerHandler)
 <LI><a href="#[95]">setupPhysicalBalancePosition</a> from appbalance.o(i.setupPhysicalBalancePosition) referenced from appbalance.o(i.appBalanceCheckEvent)
 <LI><a href="#[93]">signalFeedbackSwTimerHandler</a> from apisignalfeedback.o(i.signalFeedbackSwTimerHandler) referenced from apisignalfeedback.o(i.apiSignalFeedbackOpen)
 <LI><a href="#[c4]">spi_master_w5500_event_handler</a> from smp_w5500_dma.o(i.spi_master_w5500_event_handler) referenced from smp_w5500_dma.o(i.smp_w5500_spi_config)
 <LI><a href="#[c1]">sysParSwTimerHandler</a> from apisyspar.o(i.sysParSwTimerHandler) referenced from apisyspar.o(i.resetSysParIdleCount)
 <LI><a href="#[c1]">sysParSwTimerHandler</a> from apisyspar.o(i.sysParSwTimerHandler) referenced from apisyspar.o(i.sysParSwTimerHandler)
 <LI><a href="#[149]">systemFlagCheckFinish</a> from apisystemflag.o(i.systemFlagCheckFinish) referenced from apisystemflag.o(.constdata)
 <LI><a href="#[94]">systemFlagSwTimerHandler</a> from apisystemflag.o(i.systemFlagSwTimerHandler) referenced from apisystemflag.o(i.apiSystemFlagOpen)
 <LI><a href="#[ae]">turnOnRelayProcess</a> from apirelaycontrol.o(i.turnOnRelayProcess) referenced from apirelaycontrol.o(i.checkRelayOn)
 <LI><a href="#[8f]">updatFwSwTimerHandler</a> from apifu.o(i.updatFwSwTimerHandler) referenced from apifu.o(i.apiFuUpdateFw)
 <LI><a href="#[8f]">updatFwSwTimerHandler</a> from apifu.o(i.updatFwSwTimerHandler) referenced from apifu.o(i.updatFwSwTimerHandler)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[72]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l496xx.o(.text)
</UL>
<P><STRONG><a name="[44d]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[14a]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[162]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[44e]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[44f]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[450]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[451]"></a>__rt_lib_shutdown_fini</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry12b.o(.ARM.Collect$$$$0000000E))

<P><STRONG><a name="[452]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[453]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$00000011))

<P><STRONG><a name="[c]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32l496xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l496xx.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32l496xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l496xx.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32l496xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l496xx.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32l496xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l496xx.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32l496xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l496xx.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32l496xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l496xx.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32l496xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l496xx.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32l496xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l496xx.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32l496xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l496xx.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>ADC1_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l496xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l496xx.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>ADC3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l496xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l496xx.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>CAN1_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l496xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l496xx.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>CAN1_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l496xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l496xx.o(RESET)
</UL>
<P><STRONG><a name="[6d]"></a>CAN2_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l496xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l496xx.o(RESET)
</UL>
<P><STRONG><a name="[6e]"></a>CAN2_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l496xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l496xx.o(RESET)
</UL>
<P><STRONG><a name="[56]"></a>COMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l496xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l496xx.o(RESET)
</UL>
<P><STRONG><a name="[67]"></a>CRS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l496xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l496xx.o(RESET)
</UL>
<P><STRONG><a name="[6a]"></a>DCMI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l496xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l496xx.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>DFSDM1_FLT0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l496xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l496xx.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>DFSDM1_FLT1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l496xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l496xx.o(RESET)
</UL>
<P><STRONG><a name="[55]"></a>DFSDM1_FLT2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l496xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l496xx.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>DFSDM1_FLT3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l496xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l496xx.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>DMA1_Channel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l496xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l496xx.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>DMA1_Channel7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l496xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l496xx.o(RESET)
</UL>
<P><STRONG><a name="[6f]"></a>DMA2D_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l496xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l496xx.o(RESET)
</UL>
<P><STRONG><a name="[51]"></a>DMA2_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l496xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l496xx.o(RESET)
</UL>
<P><STRONG><a name="[5a]"></a>DMA2_Channel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l496xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l496xx.o(RESET)
</UL>
<P><STRONG><a name="[5b]"></a>DMA2_Channel7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l496xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l496xx.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l496xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l496xx.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l496xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l496xx.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l496xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l496xx.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l496xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l496xx.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l496xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l496xx.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l496xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l496xx.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l496xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l496xx.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>FMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l496xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l496xx.o(RESET)
</UL>
<P><STRONG><a name="[66]"></a>FPU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l496xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l496xx.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l496xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l496xx.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l496xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l496xx.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l496xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l496xx.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l496xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l496xx.o(RESET)
</UL>
<P><STRONG><a name="[5f]"></a>I2C3_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l496xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l496xx.o(RESET)
</UL>
<P><STRONG><a name="[5e]"></a>I2C3_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l496xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l496xx.o(RESET)
</UL>
<P><STRONG><a name="[69]"></a>I2C4_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l496xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l496xx.o(RESET)
</UL>
<P><STRONG><a name="[68]"></a>I2C4_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l496xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l496xx.o(RESET)
</UL>
<P><STRONG><a name="[64]"></a>LCD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l496xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l496xx.o(RESET)
</UL>
<P><STRONG><a name="[57]"></a>LPTIM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l496xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l496xx.o(RESET)
</UL>
<P><STRONG><a name="[58]"></a>LPTIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l496xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l496xx.o(RESET)
</UL>
<P><STRONG><a name="[5c]"></a>LPUART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l496xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l496xx.o(RESET)
</UL>
<P><STRONG><a name="[59]"></a>OTG_FS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l496xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l496xx.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>PVD_PVM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l496xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l496xx.o(RESET)
</UL>
<P><STRONG><a name="[5d]"></a>QUADSPI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l496xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l496xx.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l496xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l496xx.o(RESET)
</UL>
<P><STRONG><a name="[65]"></a>RNG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l496xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l496xx.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>RTC_Alarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l496xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l496xx.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>RTC_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l496xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l496xx.o(RESET)
</UL>
<P><STRONG><a name="[60]"></a>SAI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l496xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l496xx.o(RESET)
</UL>
<P><STRONG><a name="[61]"></a>SAI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l496xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l496xx.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>SDMMC1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l496xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l496xx.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l496xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l496xx.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l496xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l496xx.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>SPI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l496xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l496xx.o(RESET)
</UL>
<P><STRONG><a name="[62]"></a>SWPMI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l496xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l496xx.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>TAMP_STAMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l496xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l496xx.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>TIM1_BRK_TIM15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l496xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l496xx.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l496xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l496xx.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>TIM1_TRG_COM_TIM17_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l496xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l496xx.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>TIM1_UP_TIM16_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l496xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l496xx.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l496xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l496xx.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>TIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l496xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l496xx.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>TIM5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l496xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l496xx.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>TIM6_DAC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l496xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l496xx.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>TIM7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l496xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l496xx.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>TIM8_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l496xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l496xx.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>TIM8_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l496xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l496xx.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>TIM8_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l496xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l496xx.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>TIM8_UP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l496xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l496xx.o(RESET)
</UL>
<P><STRONG><a name="[63]"></a>TSC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l496xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l496xx.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>UART5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l496xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l496xx.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l496xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l496xx.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l496xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l496xx.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l496xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l496xx.o(RESET)
</UL>
<P><STRONG><a name="[14c]"></a>__aeabi_uldivmod</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, uldiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appScuGaugeUpdateQmax
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appScuGaugeCvtRmTomAh
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;saveTotalDischargeCountToRam
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gaugeSetRmAndFcc
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ldivmod
</UL>

<P><STRONG><a name="[14f]"></a>__aeabi_ldivmod</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, ldiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = __aeabi_ldivmod &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CvtRaPassChargeTomAh
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CvtQmaxPassChargeTomAh
</UL>

<P><STRONG><a name="[21f]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciSendTextMessage
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sector_header_event_handler
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_RxFifo0MsgPendingCallback
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteNoCheck
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteBlocking
</UL>

<P><STRONG><a name="[171]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_init_default_load
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiIRMonitoringOpen
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX25L_SPI_send_command
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckTerminateSocUseRa
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setDefaultRaTable
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setDefaultOcvTable
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loadSysPar
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loadScuIdPar
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loadCalPar
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loadBatteryInfoPar
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRMonitoringMeasure_Steps
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_fifo_flash_read
<LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_fifo_flash_push
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_fifo_flash_pop
<LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_spi_master_send_recv_blocking
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_spi_master_send_recv
</UL>

<P><STRONG><a name="[454]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[151]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_flash_log_managment_init
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_flash_log_managment_clean_reflash_memory
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_flash_log_managment_clean_fix_memory
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[455]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[456]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[150]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[206]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_adc_adc_para_init
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config_HSE_80MHz
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setupPhysicalBalancePosition
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appBalanceClearAllFlag
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appBmsOpen
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiFuStartUp
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_fifo_flash_clean
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_MspInit
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_MspInit
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_w5500_spi_config
</UL>

<P><STRONG><a name="[457]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[152]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[3e3]"></a>strcat</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, strcat.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dump_danpackage
</UL>

<P><STRONG><a name="[1c5]"></a>strlen</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, strlen.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialUartSendMessage
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciSendTextMessage
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterNoteMessage
</UL>

<P><STRONG><a name="[183]"></a>memcmp</STRONG> (Thumb, 26 bytes, Stack size 12 bytes, memcmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanDebugModeChange
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCommonStopScuIdRequest
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCommonStopScuIdAssign
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCommonSetScuId
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCommonResetScuId
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCommonRequestScuId
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciParameterMagicCode
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;davinciCanSoc
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;davinciCanRelayOn
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loadSysPar
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loadScuIdPar
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loadCalPar
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loadBatteryInfoPar
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decodeFuInfoPackage
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isCorrectFwCodeHead2
<LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isCorrectFwCodeHead1
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W5500_Init_Step
</UL>

<P><STRONG><a name="[2ce]"></a>strcpy</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, strcpy.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DoInit
</UL>

<P><STRONG><a name="[153]"></a>__aeabi_dadd</STRONG> (Thumb, 322 bytes, Stack size 48 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gaugeCalAvgCurrent
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LibTemperatureToVoltage
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LibNtcRToTemperature
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_log
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_exp
</UL>

<P><STRONG><a name="[157]"></a>__aeabi_dsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LibNtcVoltageToTemperature
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calCoef
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_log
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_exp
</UL>

<P><STRONG><a name="[158]"></a>__aeabi_drsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calCoef
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_log
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_exp
</UL>

<P><STRONG><a name="[159]"></a>__aeabi_dmul</STRONG> (Thumb, 228 bytes, Stack size 48 bytes, dmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appScuGaugeUpdateRm
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gaugeCalCellRValue
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gaugeCalAvgCurrent
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LibTemperatureToVoltage
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LibNtcVoltageToTemperature
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calCoef
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CvtNtcAdcToMv
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CvtCellAdcToMv
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LibNtcRToTemperature
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_overflow
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_log
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_exp
</UL>

<P><STRONG><a name="[15a]"></a>__aeabi_ddiv</STRONG> (Thumb, 222 bytes, Stack size 32 bytes, ddiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appScuGaugeUpdateRm
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gaugeCalCellRValue
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gaugeCalAvgCurrent
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LibTemperatureToVoltage
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LibNtcVoltageToTemperature
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRMonitoringMeasure_Steps
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calCoef
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LibNtcRToTemperature
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_divzero
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_log
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_exp
</UL>

<P><STRONG><a name="[15b]"></a>__aeabi_i2d</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, dflti.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __aeabi_i2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appScuGaugeUpdateRm
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gaugeCalCellRValue
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gaugeCalAvgCurrent
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LibTemperatureToVoltage
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calCoef
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_log
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_exp
</UL>

<P><STRONG><a name="[15c]"></a>__aeabi_ui2d</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, dfltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __aeabi_ui2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LibNtcVoltageToTemperature
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CvtNtcAdcToMv
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CvtCellAdcToMv
</UL>

<P><STRONG><a name="[15d]"></a>__aeabi_d2iz</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, dfixi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_d2iz
</UL>
<BR>[Calls]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calCoef
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_exp
</UL>

<P><STRONG><a name="[15e]"></a>__aeabi_d2uiz</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, dfixui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_d2uiz
</UL>
<BR>[Calls]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appScuGaugeUpdateRm
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gaugeCalAvgCurrent
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LibTemperatureToVoltage
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CvtNtcAdcToMv
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CvtCellAdcToMv
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LibNtcRToTemperature
</UL>

<P><STRONG><a name="[28a]"></a>__aeabi_f2d</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, f2d.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRMonitoringMeasure_Steps
</UL>

<P><STRONG><a name="[2dc]"></a>__aeabi_cdcmpeq</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, cdcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_log
</UL>

<P><STRONG><a name="[28c]"></a>__aeabi_cdcmple</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, cdcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LibNtcVoltageToTemperature
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRMonitoringMeasure_Steps
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LibNtcRToTemperature
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_exp
</UL>

<P><STRONG><a name="[296]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, cdrcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gaugeCalCellRValue
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LibNtcVoltageToTemperature
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LibNtcRToTemperature
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_exp
</UL>

<P><STRONG><a name="[15f]"></a>__aeabi_d2f</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, d2f.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_d2f
</UL>
<BR>[Calls]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_vprintf
</UL>

<P><STRONG><a name="[458]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[2e0]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[14e]"></a>__aeabi_llsl</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, llshl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[459]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[14d]"></a>__aeabi_llsr</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, llushr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[45a]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[154]"></a>__aeabi_lasr</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, llsshr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[45b]"></a>_ll_sshift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llsshr.o(.text), UNUSED)

<P><STRONG><a name="[45c]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[160]"></a>_float_round</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, fepilogue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>

<P><STRONG><a name="[45d]"></a>_float_epilogue</STRONG> (Thumb, 92 bytes, Stack size 4 bytes, fepilogue.o(.text), UNUSED)

<P><STRONG><a name="[156]"></a>_double_round</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[155]"></a>_double_epilogue</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
</UL>

<P><STRONG><a name="[161]"></a>__aeabi_d2ulz</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, dfixul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[14b]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[45e]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[45f]"></a>__I$use$semihosting$fputc</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, iusesemip.o(.text), UNUSED)

<P><STRONG><a name="[460]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[461]"></a>__decompress1</STRONG> (Thumb, 86 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[462]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, semi.o(.text), UNUSED)

<P><STRONG><a name="[74]"></a>ADC_DMAConvCplt</STRONG> (Thumb, 126 bytes, Stack size 8 bytes, stm32l4xx_hal_adc.o(i.ADC_DMAConvCplt))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ADC_DMAConvCplt
</UL>
<BR>[Calls]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_ErrorCallback
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_ADC_REG_IsTriggerSourceSWStart
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_ConvCpltCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32l4xx_hal_adc.o(i.HAL_ADC_Start_DMA)
</UL>
<P><STRONG><a name="[76]"></a>ADC_DMAError</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, stm32l4xx_hal_adc.o(i.ADC_DMAError))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ADC_DMAError
</UL>
<BR>[Calls]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_ErrorCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32l4xx_hal_adc.o(i.HAL_ADC_Start_DMA)
</UL>
<P><STRONG><a name="[75]"></a>ADC_DMAHalfConvCplt</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, stm32l4xx_hal_adc.o(i.ADC_DMAHalfConvCplt))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ADC_DMAHalfConvCplt
</UL>
<BR>[Calls]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_ConvHalfCpltCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32l4xx_hal_adc.o(i.HAL_ADC_Start_DMA)
</UL>
<P><STRONG><a name="[167]"></a>ADC_Disable</STRONG> (Thumb, 128 bytes, Stack size 16 bytes, stm32l4xx_hal_adc.o(i.ADC_Disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ADC_Disable
</UL>
<BR>[Calls]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_ADC_IsEnabled
</UL>
<BR>[Called By]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADCEx_Calibration_Start
</UL>

<P><STRONG><a name="[16a]"></a>ADC_Enable</STRONG> (Thumb, 134 bytes, Stack size 16 bytes, stm32l4xx_hal_adc.o(i.ADC_Enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ADC_Enable
</UL>
<BR>[Calls]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_ADC_IsEnabled
</UL>
<BR>[Called By]<UL><LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_Start_DMA
</UL>

<P><STRONG><a name="[c2]"></a>ADS7946_SPI_0_event_handler</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, smp_ads7946_driver.o(i.ADS7946_SPI_0_event_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ADS7946_SPI_0_event_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> smp_ads7946_driver.o(i.smp_ADS7946_init)
</UL>
<P><STRONG><a name="[16b]"></a>BSP_LED_Init</STRONG> (Thumb, 96 bytes, Stack size 40 bytes, stm32l4xx_nucleo_144.o(i.BSP_LED_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = BSP_LED_Init &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_Callback
</UL>

<P><STRONG><a name="[16e]"></a>BSP_LED_On</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32l4xx_nucleo_144.o(i.BSP_LED_On))
<BR><BR>[Calls]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_Callback
</UL>

<P><STRONG><a name="[2a]"></a>CAN1_RX0_IRQHandler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, smp_can.o(i.CAN1_RX0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = CAN1_RX0_IRQHandler &rArr; HAL_CAN_IRQHandler &rArr; HAL_CAN_TxMailbox2CompleteCallback &rArr; PutCanDataToMailBox &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l496xx.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>CAN1_TX_IRQHandler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, smp_can.o(i.CAN1_TX_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = CAN1_TX_IRQHandler &rArr; HAL_CAN_IRQHandler &rArr; HAL_CAN_TxMailbox2CompleteCallback &rArr; PutCanDataToMailBox &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l496xx.o(RESET)
</UL>
<P><STRONG><a name="[6c]"></a>CAN2_RX0_IRQHandler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, smp_can.o(i.CAN2_RX0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = CAN2_RX0_IRQHandler &rArr; HAL_CAN_IRQHandler &rArr; HAL_CAN_TxMailbox2CompleteCallback &rArr; PutCanDataToMailBox &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l496xx.o(RESET)
</UL>
<P><STRONG><a name="[6b]"></a>CAN2_TX_IRQHandler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, smp_can.o(i.CAN2_TX_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = CAN2_TX_IRQHandler &rArr; HAL_CAN_IRQHandler &rArr; HAL_CAN_TxMailbox2CompleteCallback &rArr; PutCanDataToMailBox &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l496xx.o(RESET)
</UL>
<P><STRONG><a name="[170]"></a>CheckTerminateSocUseRa</STRONG> (Thumb, 176 bytes, Stack size 56 bytes, appgauge.o(i.CheckTerminateSocUseRa))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = CheckTerminateSocUseRa &rArr; GetRaFromSoc
</UL>
<BR>[Calls]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appGaugeGetCurrentValue
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRaFromSoc
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetOcvVoltage
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getTerminateSocFromOcvTable
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appScuGaugeUpdateRm
</UL>

<P><STRONG><a name="[176]"></a>CvtCellAdcToMv</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, halafebq796xx.o(i.CvtCellAdcToMv))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = CvtCellAdcToMv &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DecodeCellVoltageByCellFlag
</UL>

<P><STRONG><a name="[177]"></a>CvtNtcAdcToMv</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, halafebq796xx.o(i.CvtNtcAdcToMv))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = CvtNtcAdcToMv &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DecodeNtcVoltageByNtcFlag
</UL>

<P><STRONG><a name="[178]"></a>CvtQmaxPassChargeTomAh</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, appgauge.o(i.CvtQmaxPassChargeTomAh))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = CvtQmaxPassChargeTomAh &rArr; __aeabi_ldivmod &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appGaugeGetQPassCharge
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gaugeReleaseMode
</UL>

<P><STRONG><a name="[179]"></a>CvtRaPassChargeTomAh</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, appgauge.o(i.CvtRaPassChargeTomAh))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = CvtRaPassChargeTomAh &rArr; __aeabi_ldivmod &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appScuGaugeSetFcc
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appGaugeGetRPassCharge
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scuGaugeUnReleasedMode
</UL>

<P><STRONG><a name="[21]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, smp_adc.o(i.DMA1_Channel1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = DMA1_Channel1_IRQHandler &rArr; HAL_DMA_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l496xx.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>DMA1_Channel2_IRQHandler</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, smp_spi_dma.o(i.DMA1_Channel2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = DMA1_Channel2_IRQHandler &rArr; smp_spi_master_cs_set &rArr; smp_gpio_set_state
</UL>
<BR>[Calls]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_IRQHandler
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_spi_master_cs_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l496xx.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>DMA1_Channel3_IRQHandler</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, smp_spi_dma.o(i.DMA1_Channel3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = DMA1_Channel3_IRQHandler &rArr; HAL_SPI_Receive_DMA &rArr; HAL_SPI_TransmitReceive_DMA &rArr; HAL_DMA_Start_IT &rArr; DMA_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_IRQHandler
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Receive_DMA
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_spi_master_cs_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l496xx.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>DMA1_Channel4_IRQHandler</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, smp_spi_dma.o(i.DMA1_Channel4_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = DMA1_Channel4_IRQHandler &rArr; smp_spi_master_cs_set &rArr; smp_gpio_set_state
</UL>
<BR>[Calls]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_IRQHandler
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_spi_master_cs_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l496xx.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>DMA1_Channel5_IRQHandler</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, smp_spi_dma.o(i.DMA1_Channel5_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = DMA1_Channel5_IRQHandler &rArr; HAL_SPI_Receive_DMA &rArr; HAL_SPI_TransmitReceive_DMA &rArr; HAL_DMA_Start_IT &rArr; DMA_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_IRQHandler
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Receive_DMA
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_spi_master_cs_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l496xx.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>DMA2_Channel1_IRQHandler</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, smp_spi_dma.o(i.DMA2_Channel1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = DMA2_Channel1_IRQHandler &rArr; smp_spi_master_cs_set &rArr; smp_gpio_set_state
</UL>
<BR>[Calls]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_IRQHandler
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_spi_master_cs_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l496xx.o(RESET)
</UL>
<P><STRONG><a name="[4f]"></a>DMA2_Channel2_IRQHandler</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, smp_spi_dma.o(i.DMA2_Channel2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = DMA2_Channel2_IRQHandler &rArr; HAL_SPI_Receive_DMA &rArr; HAL_SPI_TransmitReceive_DMA &rArr; HAL_DMA_Start_IT &rArr; DMA_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_IRQHandler
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Receive_DMA
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_spi_master_cs_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l496xx.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>DMA2_Channel3_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, smp_uart.o(i.DMA2_Channel3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = DMA2_Channel3_IRQHandler &rArr; HAL_DMA_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l496xx.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>DMA2_Channel5_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, smp_uart.o(i.DMA2_Channel5_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = DMA2_Channel5_IRQHandler &rArr; HAL_DMA_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l496xx.o(RESET)
</UL>
<P><STRONG><a name="[e1]"></a>DavinciCanFunBaseRxTx</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, appserialcandavincibasecmd.o(i.DavinciCanFunBaseRxTx))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DavinciCanFunBaseRxTx
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appserialcandavinci.o(.constdata)
</UL>
<P><STRONG><a name="[e2]"></a>DavinciCanFunCmdRx</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, appserialcandavincicmd.o(i.DavinciCanFunCmdRx))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = DavinciCanFunCmdRx &rArr; appSerialCanDavinciIsCorrectScuId
</UL>
<BR>[Calls]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciIsCorrectScuId
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appserialcandavinci.o(.constdata)
</UL>
<P><STRONG><a name="[e4]"></a>DavinciCanFunCommonRx</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, appserialcandavincicommon.o(i.DavinciCanFunCommonRx))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DavinciCanFunCommonRx
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appserialcandavinci.o(.constdata)
</UL>
<P><STRONG><a name="[e3]"></a>DavinciCanFunDebugRx</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, appserialcandavincidebug.o(i.DavinciCanFunDebugRx))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = DavinciCanFunDebugRx &rArr; appSerialCanDavinciIsCorrectScuId
</UL>
<BR>[Calls]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciIsCorrectScuId
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appserialcandavinci.o(.constdata)
</UL>
<P><STRONG><a name="[e5]"></a>DavinciCanFunFuRx</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, appserialcandavincifirmwareupgrade.o(i.DavinciCanFunFuRx))
<BR><BR>[Stack]<UL><LI>Max Depth = 452<LI>Call Chain = DavinciCanFunFuRx &rArr; decodeFuDataPackage &rArr; apiFuSetUpgradeData &rArr; checkRcvFuCodeData &rArr; appSerialCanDavinciSendTextMessage &rArr; appSerialCanDavinciPutPkgToCanFifo &rArr; smp_can_put &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isValidScuId
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decodeFuInfoPackage
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decodeFuDataPackage
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appserialcandavinci.o(.constdata)
</UL>
<P><STRONG><a name="[f1]"></a>DavinciCanParameterRdWrite</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, appserialcandavinciparameter.o(i.DavinciCanParameterRdWrite))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = DavinciCanParameterRdWrite &rArr; appSerialCanDavinciIsCorrectScuId
</UL>
<BR>[Calls]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciIsCorrectScuId
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appserialcandavincicmd.o(.constdata)
</UL>
<P><STRONG><a name="[a5]"></a>DavinciCan_cb</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, appserialcandavinci.o(i.DavinciCan_cb))
<BR>[Address Reference Count : 1]<UL><LI> appserialcandavinci.o(i.appSerialCanDavinciOpen)
</UL>
<P><STRONG><a name="[a7]"></a>DavinciUart_cb</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, appserialuartdavinci.o(i.DavinciUart_cb))
<BR>[Address Reference Count : 1]<UL><LI> appserialuartdavinci.o(i.appSerialUartDavinciOpen)
</UL>
<P><STRONG><a name="[2d]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, smp_w5500_dma.o(i.EXTI9_5_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = EXTI9_5_IRQHandler &rArr; HAL_GPIO_EXTI_IRQHandler &rArr; HAL_GPIO_EXTI_Callback &rArr; BSP_LED_Init &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l496xx.o(RESET)
</UL>
<P><STRONG><a name="[433]"></a>Enable_DMA_Control_Clock</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, smp_adc.o(i.Enable_DMA_Control_Clock))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Enable_DMA_Control_Clock
</UL>
<BR>[Called By]<UL><LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_adc_adc_para_init
</UL>

<P><STRONG><a name="[208]"></a>Error_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, main.o(i.Error_Handler))
<BR><BR>[Called By]<UL><LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config_HSE_80MHz
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_MspInit
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_MspInit
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_MspInit
</UL>

<P><STRONG><a name="[228]"></a>FLASH_FlushCaches</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, stm32l4xx_hal_flash_ex.o(i.FLASH_FlushCaches))
<BR><BR>[Called By]<UL><LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASH_Program
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASHEx_Erase
</UL>

<P><STRONG><a name="[227]"></a>FLASH_PageErase</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, stm32l4xx_hal_flash_ex.o(i.FLASH_PageErase))
<BR><BR>[Called By]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASHEx_Erase
</UL>

<P><STRONG><a name="[1f7]"></a>FLASH_WaitForLastOperation</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, stm32l4xx_hal_flash.o(i.FLASH_WaitForLastOperation))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASH_Program
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASHEx_Erase
</UL>

<P><STRONG><a name="[b1]"></a>FuCallbackFunction</STRONG> (Thumb, 180 bytes, Stack size 40 bytes, appserialcandavincifirmwareupgrade.o(i.FuCallbackFunction))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = FuCallbackFunction &rArr; appSerialCanDavinciPutPkgToCanFifo &rArr; smp_can_put &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProjectGetScuId
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciPutPkgToCanFifo
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appserialcandavincifirmwareupgrade.o(i.decodeFuInfoPackage)
</UL>
<P><STRONG><a name="[3da]"></a>Func_Cal_ModbusCRC16</STRONG> (Thumb, 50 bytes, Stack size 12 bytes, smp_drv_bq796xx.o(i.Func_Cal_ModbusCRC16))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Func_Cal_ModbusCRC16
</UL>
<BR>[Called By]<UL><LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_data_frame_parser
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_command_framing
</UL>

<P><STRONG><a name="[434]"></a>GetADCChParaSTM32L496</STRONG> (Thumb, 348 bytes, Stack size 32 bytes, smp_adc.o(i.GetADCChParaSTM32L496))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GetADCChParaSTM32L496
</UL>
<BR>[Called By]<UL><LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_adc_adc_para_init
</UL>

<P><STRONG><a name="[1f8]"></a>GetAverageCellVoltage</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, appgauge.o(i.GetAverageCellVoltage))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GetAverageCellVoltage
</UL>
<BR>[Calls]<UL><LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;halAfeGetCellVoltage
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParGetCellNumber
</UL>
<BR>[Called By]<UL><LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getSocTableUseAvgCellVoltage
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appScuGaugeUpdateRm
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appGaugeUpdateSoc0
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scuGaugeUnReleasedMode
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gaugeReleaseMode
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gaugeCalCellRValue
</UL>

<P><STRONG><a name="[173]"></a>GetOcvVoltage</STRONG> (Thumb, 172 bytes, Stack size 16 bytes, appgauge.o(i.GetOcvVoltage))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GetOcvVoltage
</UL>
<BR>[Called By]<UL><LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appScuGaugeUpdateRm
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckTerminateSocUseRa
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gaugeCalCellRValue
</UL>

<P><STRONG><a name="[174]"></a>GetRaFromSoc</STRONG> (Thumb, 190 bytes, Stack size 24 bytes, appgauge.o(i.GetRaFromSoc))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GetRaFromSoc
</UL>
<BR>[Called By]<UL><LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appScuGaugeUpdateRm
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckTerminateSocUseRa
</UL>

<P><STRONG><a name="[1fb]"></a>HAL_ADCEx_Calibration_Start</STRONG> (Thumb, 150 bytes, Stack size 24 bytes, stm32l4xx_hal_adc_ex.o(i.HAL_ADCEx_Calibration_Start))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_ADCEx_Calibration_Start &rArr; ADC_Disable
</UL>
<BR>[Calls]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Disable
</UL>
<BR>[Called By]<UL><LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_adc_adc_para_init
</UL>

<P><STRONG><a name="[1fc]"></a>HAL_ADCEx_MultiModeConfigChannel</STRONG> (Thumb, 246 bytes, Stack size 136 bytes, stm32l4xx_hal_adc_ex.o(i.HAL_ADCEx_MultiModeConfigChannel))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = HAL_ADCEx_MultiModeConfigChannel
</UL>
<BR>[Calls]<UL><LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_ADC_REG_IsConversionOngoing
</UL>
<BR>[Called By]<UL><LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_adc_adc_para_init
</UL>

<P><STRONG><a name="[1fe]"></a>HAL_ADC_ConfigChannel</STRONG> (Thumb, 1042 bytes, Stack size 40 bytes, stm32l4xx_hal_adc.o(i.HAL_ADC_ConfigChannel))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = HAL_ADC_ConfigChannel &rArr; LL_ADC_SetChannelSamplingTime
</UL>
<BR>[Calls]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_ADC_SetOffsetState
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_ADC_SetChannelSamplingTime
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_ADC_REG_IsConversionOngoing
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_ADC_IsEnabled
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_ADC_INJ_IsConversionOngoing
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_ADC_GetOffsetChannel
</UL>
<BR>[Called By]<UL><LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_adc_adc_para_init
</UL>

<P><STRONG><a name="[165]"></a>HAL_ADC_ConvCpltCallback</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, smp_adc.o(i.HAL_ADC_ConvCpltCallback))
<BR><BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DMAConvCplt
</UL>

<P><STRONG><a name="[166]"></a>HAL_ADC_ConvHalfCpltCallback</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, smp_adc.o(i.HAL_ADC_ConvHalfCpltCallback))
<BR><BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DMAHalfConvCplt
</UL>

<P><STRONG><a name="[163]"></a>HAL_ADC_ErrorCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l4xx_hal_adc.o(i.HAL_ADC_ErrorCallback))
<BR><BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DMAError
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DMAConvCplt
</UL>

<P><STRONG><a name="[204]"></a>HAL_ADC_Init</STRONG> (Thumb, 436 bytes, Stack size 24 bytes, stm32l4xx_hal_adc.o(i.HAL_ADC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 648<LI>Call Chain = HAL_ADC_Init &rArr; HAL_ADC_MspInit &rArr; HalBspSetGpio &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_ADC_REG_IsConversionOngoing
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_ADC_IsEnabled
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_ADC_INJ_IsConversionOngoing
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_adc_adc_para_init
</UL>

<P><STRONG><a name="[205]"></a>HAL_ADC_MspInit</STRONG> (Thumb, 260 bytes, Stack size 552 bytes, smp_adc.o(i.HAL_ADC_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 624<LI>Call Chain = HAL_ADC_MspInit &rArr; HalBspSetGpio &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalBspSetGpio
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Init
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_Init
</UL>

<P><STRONG><a name="[20b]"></a>HAL_ADC_Start_DMA</STRONG> (Thumb, 222 bytes, Stack size 24 bytes, stm32l4xx_hal_adc.o(i.HAL_ADC_Start_DMA))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = HAL_ADC_Start_DMA &rArr; HAL_DMA_Start_IT &rArr; DMA_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Start_IT
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Enable
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_ADC_REG_IsConversionOngoing
</UL>
<BR>[Called By]<UL><LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_adc_adc_para_init
</UL>

<P><STRONG><a name="[437]"></a>HAL_CAN_ActivateNotification</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, stm32l4xx_hal_can.o(i.HAL_CAN_ActivateNotification))
<BR><BR>[Called By]<UL><LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_can_init
</UL>

<P><STRONG><a name="[2a8]"></a>HAL_CAN_AddTxMessage</STRONG> (Thumb, 242 bytes, Stack size 20 bytes, stm32l4xx_hal_can.o(i.HAL_CAN_AddTxMessage))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = HAL_CAN_AddTxMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_can_put
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PutCanDataToMailBox
</UL>

<P><STRONG><a name="[435]"></a>HAL_CAN_ConfigFilter</STRONG> (Thumb, 266 bytes, Stack size 8 bytes, stm32l4xx_hal_can.o(i.HAL_CAN_ConfigFilter))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_CAN_ConfigFilter
</UL>
<BR>[Called By]<UL><LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_can_init
</UL>

<P><STRONG><a name="[219]"></a>HAL_CAN_ErrorCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l4xx_hal_can.o(i.HAL_CAN_ErrorCallback))
<BR><BR>[Called By]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_IRQHandler
</UL>

<P><STRONG><a name="[21e]"></a>HAL_CAN_GetRxMessage</STRONG> (Thumb, 262 bytes, Stack size 12 bytes, stm32l4xx_hal_can.o(i.HAL_CAN_GetRxMessage))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = HAL_CAN_GetRxMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_RxFifo0MsgPendingCallback
</UL>

<P><STRONG><a name="[2a6]"></a>HAL_CAN_GetTxMailboxesFreeLevel</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, stm32l4xx_hal_can.o(i.HAL_CAN_GetTxMailboxesFreeLevel))
<BR><BR>[Called By]<UL><LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_can_put
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PutCanDataToMailBox
</UL>

<P><STRONG><a name="[16f]"></a>HAL_CAN_IRQHandler</STRONG> (Thumb, 508 bytes, Stack size 40 bytes, stm32l4xx_hal_can.o(i.HAL_CAN_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = HAL_CAN_IRQHandler &rArr; HAL_CAN_TxMailbox2CompleteCallback &rArr; PutCanDataToMailBox &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_WakeUpFromRxMsgCallback
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_TxMailbox2AbortCallback
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_TxMailbox1AbortCallback
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_TxMailbox0AbortCallback
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_SleepCallback
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_RxFifo1MsgPendingCallback
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_RxFifo1FullCallback
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_RxFifo0FullCallback
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_ErrorCallback
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_TxMailbox2CompleteCallback
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_TxMailbox1CompleteCallback
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_TxMailbox0CompleteCallback
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_RxFifo0MsgPendingCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN2_TX_IRQHandler
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN2_RX0_IRQHandler
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN1_TX_IRQHandler
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN1_RX0_IRQHandler
</UL>

<P><STRONG><a name="[21a]"></a>HAL_CAN_Init</STRONG> (Thumb, 338 bytes, Stack size 16 bytes, stm32l4xx_hal_can.o(i.HAL_CAN_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = HAL_CAN_Init &rArr; HAL_CAN_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_can_init
</UL>

<P><STRONG><a name="[21b]"></a>HAL_CAN_MspInit</STRONG> (Thumb, 218 bytes, Stack size 48 bytes, smp_can.o(i.HAL_CAN_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = HAL_CAN_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_Init
</UL>

<P><STRONG><a name="[213]"></a>HAL_CAN_RxFifo0FullCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l4xx_hal_can.o(i.HAL_CAN_RxFifo0FullCallback))
<BR><BR>[Called By]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_IRQHandler
</UL>

<P><STRONG><a name="[214]"></a>HAL_CAN_RxFifo0MsgPendingCallback</STRONG> (Thumb, 140 bytes, Stack size 56 bytes, smp_can.o(i.HAL_CAN_RxFifo0MsgPendingCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = HAL_CAN_RxFifo0MsgPendingCallback &rArr; smp_can_fifo_push
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_can_fifo_push
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_GetRxMessage
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_IRQHandler
</UL>

<P><STRONG><a name="[215]"></a>HAL_CAN_RxFifo1FullCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l4xx_hal_can.o(i.HAL_CAN_RxFifo1FullCallback))
<BR><BR>[Called By]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_IRQHandler
</UL>

<P><STRONG><a name="[216]"></a>HAL_CAN_RxFifo1MsgPendingCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l4xx_hal_can.o(i.HAL_CAN_RxFifo1MsgPendingCallback))
<BR><BR>[Called By]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_IRQHandler
</UL>

<P><STRONG><a name="[217]"></a>HAL_CAN_SleepCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l4xx_hal_can.o(i.HAL_CAN_SleepCallback))
<BR><BR>[Called By]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_IRQHandler
</UL>

<P><STRONG><a name="[221]"></a>HAL_CAN_Start</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, stm32l4xx_hal_can.o(i.HAL_CAN_Start))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_CAN_Start
</UL>
<BR>[Calls]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_can_init
</UL>

<P><STRONG><a name="[20e]"></a>HAL_CAN_TxMailbox0AbortCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l4xx_hal_can.o(i.HAL_CAN_TxMailbox0AbortCallback))
<BR><BR>[Called By]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_IRQHandler
</UL>

<P><STRONG><a name="[20d]"></a>HAL_CAN_TxMailbox0CompleteCallback</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, smp_can.o(i.HAL_CAN_TxMailbox0CompleteCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = HAL_CAN_TxMailbox0CompleteCallback &rArr; PutCanDataToMailBox &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PutCanDataToMailBox
</UL>
<BR>[Called By]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_IRQHandler
</UL>

<P><STRONG><a name="[210]"></a>HAL_CAN_TxMailbox1AbortCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l4xx_hal_can.o(i.HAL_CAN_TxMailbox1AbortCallback))
<BR><BR>[Called By]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_IRQHandler
</UL>

<P><STRONG><a name="[20f]"></a>HAL_CAN_TxMailbox1CompleteCallback</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, smp_can.o(i.HAL_CAN_TxMailbox1CompleteCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = HAL_CAN_TxMailbox1CompleteCallback &rArr; PutCanDataToMailBox &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PutCanDataToMailBox
</UL>
<BR>[Called By]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_IRQHandler
</UL>

<P><STRONG><a name="[212]"></a>HAL_CAN_TxMailbox2AbortCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l4xx_hal_can.o(i.HAL_CAN_TxMailbox2AbortCallback))
<BR><BR>[Called By]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_IRQHandler
</UL>

<P><STRONG><a name="[211]"></a>HAL_CAN_TxMailbox2CompleteCallback</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, smp_can.o(i.HAL_CAN_TxMailbox2CompleteCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = HAL_CAN_TxMailbox2CompleteCallback &rArr; PutCanDataToMailBox &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PutCanDataToMailBox
</UL>
<BR>[Called By]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_IRQHandler
</UL>

<P><STRONG><a name="[218]"></a>HAL_CAN_WakeUpFromRxMsgCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l4xx_hal_can.o(i.HAL_CAN_WakeUpFromRxMsgCallback))
<BR><BR>[Called By]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_IRQHandler
</UL>

<P><STRONG><a name="[261]"></a>HAL_DMA_Abort</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, stm32l4xx_hal_dma.o(i.HAL_DMA_Abort))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_DMA_Abort
</UL>
<BR>[Called By]<UL><LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>

<P><STRONG><a name="[25f]"></a>HAL_DMA_Abort_IT</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, stm32l4xx_hal_dma.o(i.HAL_DMA_Abort_IT))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_DMA_Abort_IT
</UL>
<BR>[Called By]<UL><LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>

<P><STRONG><a name="[26b]"></a>HAL_DMA_DeInit</STRONG> (Thumb, 156 bytes, Stack size 12 bytes, stm32l4xx_hal_dma.o(i.HAL_DMA_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = HAL_DMA_DeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspDeInit
</UL>

<P><STRONG><a name="[17a]"></a>HAL_DMA_IRQHandler</STRONG> (Thumb, 204 bytes, Stack size 16 bytes, stm32l4xx_hal_dma.o(i.HAL_DMA_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_DMA_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_Channel2_IRQHandler
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_Channel1_IRQHandler
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel5_IRQHandler
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel4_IRQHandler
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel3_IRQHandler
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel2_IRQHandler
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel1_IRQHandler
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_Channel5_IRQHandler
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_Channel3_IRQHandler
</UL>

<P><STRONG><a name="[20a]"></a>HAL_DMA_Init</STRONG> (Thumb, 210 bytes, Stack size 16 bytes, stm32l4xx_hal_dma.o(i.HAL_DMA_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_DMA_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_MspInit
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_MspInit
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
</UL>

<P><STRONG><a name="[20c]"></a>HAL_DMA_Start_IT</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, stm32l4xx_hal_dma.o(i.HAL_DMA_Start_IT))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = HAL_DMA_Start_IT &rArr; DMA_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_Start_DMA
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Transmit_DMA
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_TransmitReceive_DMA
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Receive_DMA
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Start_Receive_DMA
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit_DMA
</UL>

<P><STRONG><a name="[224]"></a>HAL_Delay</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, stm32l4xx_hal.o(i.HAL_Delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_spi_master_send_recv_blocking
</UL>

<P><STRONG><a name="[225]"></a>HAL_FLASHEx_Erase</STRONG> (Thumb, 250 bytes, Stack size 40 bytes, stm32l4xx_hal_flash_ex.o(i.HAL_FLASHEx_Erase))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = HAL_FLASHEx_Erase &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_MassErase
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_PageErase
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_FlushCaches
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>
<BR>[Called By]<UL><LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalEePromErase
</UL>

<P><STRONG><a name="[229]"></a>HAL_FLASH_Program</STRONG> (Thumb, 172 bytes, Stack size 56 bytes, stm32l4xx_hal_flash.o(i.HAL_FLASH_Program))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = HAL_FLASH_Program &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_FlushCaches
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Program_Fast
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Program_DoubleWord
</UL>
<BR>[Called By]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalEePromWrite
</UL>

<P><STRONG><a name="[27a]"></a>HAL_FLASH_Unlock</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32l4xx_hal_flash.o(i.HAL_FLASH_Unlock))
<BR><BR>[Called By]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalEePromWrite
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalEePromErase
</UL>

<P><STRONG><a name="[26a]"></a>HAL_GPIO_DeInit</STRONG> (Thumb, 272 bytes, Stack size 36 bytes, stm32l4xx_hal_gpio.o(i.HAL_GPIO_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = HAL_GPIO_DeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspDeInit
</UL>

<P><STRONG><a name="[22c]"></a>HAL_GPIO_EXTI_Callback</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, main.o(i.HAL_GPIO_EXTI_Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = HAL_GPIO_EXTI_Callback &rArr; BSP_LED_Init &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LED_On
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LED_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_IRQHandler
</UL>

<P><STRONG><a name="[1f6]"></a>HAL_GPIO_EXTI_IRQHandler</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, stm32l4xx_hal_gpio.o(i.HAL_GPIO_EXTI_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = HAL_GPIO_EXTI_IRQHandler &rArr; HAL_GPIO_EXTI_Callback &rArr; BSP_LED_Init &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_Callback
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI9_5_IRQHandler
</UL>

<P><STRONG><a name="[16c]"></a>HAL_GPIO_Init</STRONG> (Thumb, 390 bytes, Stack size 40 bytes, stm32l4xx_hal_gpio.o(i.HAL_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LED_Init
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_irm_sw_gpio_init_cb
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalBspSetGpio
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_MspInit
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_MspInit
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_gpio_init
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_w5500_spi_config
</UL>

<P><STRONG><a name="[43f]"></a>HAL_GPIO_TogglePin</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32l4xx_hal_gpio.o(i.HAL_GPIO_TogglePin))
<BR><BR>[Called By]<UL><LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_gpio_set_state
</UL>

<P><STRONG><a name="[16d]"></a>HAL_GPIO_WritePin</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32l4xx_hal_gpio.o(i.HAL_GPIO_WritePin))
<BR><BR>[Called By]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LED_On
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LED_Init
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_gpio_set_state
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W5500_Init_Step
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W5500SwTimerHandler
</UL>

<P><STRONG><a name="[169]"></a>HAL_GetTick</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32l4xx_hal.o(i.HAL_GetTick))
<BR><BR>[Called By]<UL><LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_delay_ms
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCCEx_PLLSAI2_Config
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCCEx_PLLSAI1_Config
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_TransmitReceive
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Enable
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Disable
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_Start
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_Init
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_EnterInitMode
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_WaitForSynchro
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Transmit
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Receive
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WaitFlagStateUntilTimeout
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WaitFifoStateUntilTimeout
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_DMATransmitReceiveCplt
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_DMATransmitCplt
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_DMAReceiveCplt
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_WaitOnFlagUntilTimeout
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_CheckIdleState
</UL>

<P><STRONG><a name="[2be]"></a>HAL_IncTick</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32l4xx_hal.o(i.HAL_IncTick))
<BR><BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[22d]"></a>HAL_InitTick</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, stm32l4xx_hal.o(i.HAL_InitTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HAL_InitTick &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
</UL>

<P><STRONG><a name="[26c]"></a>HAL_NVIC_DisableIRQ</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32l4xx_hal_cortex.o(i.HAL_NVIC_DisableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspDeInit
</UL>

<P><STRONG><a name="[21d]"></a>HAL_NVIC_EnableIRQ</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32l4xx_hal_cortex.o(i.HAL_NVIC_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_MspInit
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_DMA_Init
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalTimerOpen
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_MspInit
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_MspInit
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_MspInit
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_w5500_spi_config
</UL>

<P><STRONG><a name="[21c]"></a>HAL_NVIC_SetPriority</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, stm32l4xx_hal_cortex.o(i.HAL_NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_MspInit
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_DMA_Init
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_MspInit
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_MspInit
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_MspInit
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_w5500_spi_config
</UL>

<P><STRONG><a name="[2c0]"></a>HAL_PWREx_ControlVoltageScaling</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, stm32l4xx_hal_pwr_ex.o(i.HAL_PWREx_ControlVoltageScaling))
<BR><BR>[Called By]<UL><LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config_HSE_80MHz
</UL>

<P><STRONG><a name="[43b]"></a>HAL_PWREx_EnableVddIO2</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32l4xx_hal_pwr_ex.o(i.HAL_PWREx_EnableVddIO2))
<BR><BR>[Called By]<UL><LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_gpio_init
</UL>

<P><STRONG><a name="[2a9]"></a>HAL_PWREx_GetVoltageRange</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32l4xx_hal_pwr_ex.o(i.HAL_PWREx_GetVoltageRange))
<BR><BR>[Called By]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_SetFlashLatencyFromMSIRange
</UL>

<P><STRONG><a name="[240]"></a>HAL_PWR_EnableBkUpAccess</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32l4xx_hal_pwr.o(i.HAL_PWR_EnableBkUpAccess))
<BR><BR>[Called By]<UL><LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_MspInit
</UL>

<P><STRONG><a name="[207]"></a>HAL_RCCEx_PeriphCLKConfig</STRONG> (Thumb, 962 bytes, Stack size 40 bytes, stm32l4xx_hal_rcc_ex.o(i.HAL_RCCEx_PeriphCLKConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLLSAI2_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCCEx_PLLSAI2_Config
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCCEx_PLLSAI1_Config
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_MspInit
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_MspInit
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
</UL>

<P><STRONG><a name="[232]"></a>HAL_RCC_ClockConfig</STRONG> (Thumb, 308 bytes, Stack size 32 bytes, stm32l4xx_hal_rcc.o(i.HAL_RCC_ClockConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = HAL_RCC_ClockConfig &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config_HSE_80MHz
</UL>

<P><STRONG><a name="[235]"></a>HAL_RCC_GetHCLKFreq</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32l4xx_hal_rcc.o(i.HAL_RCC_GetHCLKFreq))
<BR><BR>[Called By]<UL><LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK2Freq
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK1Freq
</UL>

<P><STRONG><a name="[234]"></a>HAL_RCC_GetPCLK1Freq</STRONG> (Thumb, 26 bytes, Stack size 4 bytes, stm32l4xx_hal_rcc.o(i.HAL_RCC_GetPCLK1Freq))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = HAL_RCC_GetPCLK1Freq
</UL>
<BR>[Calls]<UL><LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetHCLKFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
</UL>

<P><STRONG><a name="[236]"></a>HAL_RCC_GetPCLK2Freq</STRONG> (Thumb, 26 bytes, Stack size 4 bytes, stm32l4xx_hal_rcc.o(i.HAL_RCC_GetPCLK2Freq))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = HAL_RCC_GetPCLK2Freq
</UL>
<BR>[Calls]<UL><LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetHCLKFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
</UL>

<P><STRONG><a name="[233]"></a>HAL_RCC_GetSysClockFreq</STRONG> (Thumb, 150 bytes, Stack size 16 bytes, stm32l4xx_hal_rcc.o(i.HAL_RCC_GetSysClockFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_RCC_GetSysClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
</UL>

<P><STRONG><a name="[237]"></a>HAL_RCC_OscConfig</STRONG> (Thumb, 1478 bytes, Stack size 32 bytes, stm32l4xx_hal_rcc.o(i.HAL_RCC_OscConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = HAL_RCC_OscConfig &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_SetFlashLatencyFromMSIRange
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config_HSE_80MHz
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_MspInit
</UL>

<P><STRONG><a name="[314]"></a>HAL_RTCEx_BKUPRead</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32l4xx_hal_rtc_ex.o(i.HAL_RTCEx_BKUPRead))
<BR><BR>[Called By]<UL><LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiRamLoadSoc
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiRamLoadTotalDisChargeCount
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiRamLoadRtcMagicCode
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiRamLoadReleaseTime
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiRamLoadPowerOffDateTime
</UL>

<P><STRONG><a name="[31a]"></a>HAL_RTCEx_BKUPWrite</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, stm32l4xx_hal_rtc_ex.o(i.HAL_RTCEx_BKUPWrite))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_RTCEx_BKUPWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiRamSaveTotalDisChargeCount
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiRamSaveSoc
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiRamSaveLastChgDhgTime
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiRamSaveRtcMagicCode
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiRamSaveRtcDateTime
</UL>

<P><STRONG><a name="[239]"></a>HAL_RTC_GetDate</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, stm32l4xx_hal_rtc.o(i.HAL_RTC_GetDate))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_RTC_GetDate
</UL>
<BR>[Calls]<UL><LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Bcd2ToByte
</UL>
<BR>[Called By]<UL><LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalRtcGetDateTime
</UL>

<P><STRONG><a name="[23b]"></a>HAL_RTC_GetTime</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, stm32l4xx_hal_rtc.o(i.HAL_RTC_GetTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_RTC_GetTime
</UL>
<BR>[Calls]<UL><LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Bcd2ToByte
</UL>
<BR>[Called By]<UL><LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalRtcGetDateTime
</UL>

<P><STRONG><a name="[23c]"></a>HAL_RTC_Init</STRONG> (Thumb, 150 bytes, Stack size 8 bytes, stm32l4xx_hal_rtc.o(i.HAL_RTC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = HAL_RTC_Init &rArr; HAL_RTC_MspInit &rArr; HAL_RCC_OscConfig &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_MspInit
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ExitInitMode
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_EnterInitMode
</UL>
<BR>[Called By]<UL><LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalRtcOpen
</UL>

<P><STRONG><a name="[23d]"></a>HAL_RTC_MspInit</STRONG> (Thumb, 104 bytes, Stack size 224 bytes, halrtcstm32l4xx.o(i.HAL_RTC_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = HAL_RTC_MspInit &rArr; HAL_RCC_OscConfig &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWR_EnableBkUpAccess
</UL>
<BR>[Called By]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_Init
</UL>

<P><STRONG><a name="[241]"></a>HAL_RTC_SetDate</STRONG> (Thumb, 160 bytes, Stack size 16 bytes, stm32l4xx_hal_rtc.o(i.HAL_RTC_SetDate))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = HAL_RTC_SetDate &rArr; RTC_ExitInitMode &rArr; HAL_RTC_WaitForSynchro
</UL>
<BR>[Calls]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ExitInitMode
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_EnterInitMode
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ByteToBcd2
</UL>
<BR>[Called By]<UL><LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalRtcSetupDate
</UL>

<P><STRONG><a name="[243]"></a>HAL_RTC_SetTime</STRONG> (Thumb, 198 bytes, Stack size 24 bytes, stm32l4xx_hal_rtc.o(i.HAL_RTC_SetTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = HAL_RTC_SetTime &rArr; RTC_ExitInitMode &rArr; HAL_RTC_WaitForSynchro
</UL>
<BR>[Calls]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ExitInitMode
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_EnterInitMode
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ByteToBcd2
</UL>
<BR>[Called By]<UL><LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalRtcSetupTime
</UL>

<P><STRONG><a name="[244]"></a>HAL_RTC_WaitForSynchro</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, stm32l4xx_hal_rtc.o(i.HAL_RTC_WaitForSynchro))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_RTC_WaitForSynchro
</UL>
<BR>[Calls]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ExitInitMode
</UL>

<P><STRONG><a name="[2b6]"></a>HAL_SPI_ErrorCallback</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, smp_spi_dma.o(i.HAL_SPI_ErrorCallback))
<BR><BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_DMATransmitReceiveCplt
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_DMATransmitCplt
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_DMAReceiveCplt
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_DMAError
</UL>

<P><STRONG><a name="[245]"></a>HAL_SPI_Init</STRONG> (Thumb, 284 bytes, Stack size 24 bytes, stm32l4xx_hal_spi.o(i.HAL_SPI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_spi_master_init
</UL>

<P><STRONG><a name="[246]"></a>HAL_SPI_MspInit</STRONG> (Thumb, 1098 bytes, Stack size 64 bytes, smp_spi_dma.o(i.HAL_SPI_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Init
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Init
</UL>

<P><STRONG><a name="[247]"></a>HAL_SPI_Receive</STRONG> (Thumb, 612 bytes, Stack size 48 bytes, stm32l4xx_hal_spi.o(i.HAL_SPI_Receive))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = HAL_SPI_Receive &rArr; HAL_SPI_TransmitReceive &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFifoStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_TransmitReceive
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WaitFlagStateUntilTimeout
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_EndRxTransaction
</UL>
<BR>[Called By]<UL><LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_spi_master_send_recv_blocking
</UL>

<P><STRONG><a name="[17c]"></a>HAL_SPI_Receive_DMA</STRONG> (Thumb, 378 bytes, Stack size 24 bytes, stm32l4xx_hal_spi.o(i.HAL_SPI_Receive_DMA))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = HAL_SPI_Receive_DMA &rArr; HAL_SPI_TransmitReceive_DMA &rArr; HAL_DMA_Start_IT &rArr; DMA_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Start_IT
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_TransmitReceive_DMA
</UL>
<BR>[Called By]<UL><LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_spi_master_send_recv
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_Channel2_IRQHandler
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel5_IRQHandler
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel3_IRQHandler
</UL>

<P><STRONG><a name="[2ba]"></a>HAL_SPI_RxCpltCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l4xx_hal_spi.o(i.HAL_SPI_RxCpltCallback))
<BR><BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_DMAReceiveCplt
</UL>

<P><STRONG><a name="[2b7]"></a>HAL_SPI_RxHalfCpltCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l4xx_hal_spi.o(i.HAL_SPI_RxHalfCpltCallback))
<BR><BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_DMAHalfReceiveCplt
</UL>

<P><STRONG><a name="[24c]"></a>HAL_SPI_Transmit</STRONG> (Thumb, 490 bytes, Stack size 40 bytes, stm32l4xx_hal_spi.o(i.HAL_SPI_Transmit))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = HAL_SPI_Transmit &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFifoStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_EndRxTxTransaction
</UL>
<BR>[Called By]<UL><LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_spi_master_send_recv_blocking
</UL>

<P><STRONG><a name="[248]"></a>HAL_SPI_TransmitReceive</STRONG> (Thumb, 866 bytes, Stack size 64 bytes, stm32l4xx_hal_spi.o(i.HAL_SPI_TransmitReceive))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = HAL_SPI_TransmitReceive &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFifoStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WaitFlagStateUntilTimeout
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_EndRxTxTransaction
</UL>
<BR>[Called By]<UL><LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Receive
</UL>

<P><STRONG><a name="[24b]"></a>HAL_SPI_TransmitReceive_DMA</STRONG> (Thumb, 490 bytes, Stack size 24 bytes, stm32l4xx_hal_spi.o(i.HAL_SPI_TransmitReceive_DMA))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = HAL_SPI_TransmitReceive_DMA &rArr; HAL_DMA_Start_IT &rArr; DMA_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Start_IT
</UL>
<BR>[Called By]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Receive_DMA
</UL>

<P><STRONG><a name="[24e]"></a>HAL_SPI_Transmit_DMA</STRONG> (Thumb, 304 bytes, Stack size 24 bytes, stm32l4xx_hal_spi.o(i.HAL_SPI_Transmit_DMA))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = HAL_SPI_Transmit_DMA &rArr; HAL_DMA_Start_IT &rArr; DMA_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Start_IT
</UL>
<BR>[Called By]<UL><LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_spi_master_send_recv
</UL>

<P><STRONG><a name="[2bb]"></a>HAL_SPI_TxCpltCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l4xx_hal_spi.o(i.HAL_SPI_TxCpltCallback))
<BR><BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_DMATransmitCplt
</UL>

<P><STRONG><a name="[2b8]"></a>HAL_SPI_TxHalfCpltCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l4xx_hal_spi.o(i.HAL_SPI_TxHalfCpltCallback))
<BR><BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_DMAHalfTransmitCplt
</UL>

<P><STRONG><a name="[2bd]"></a>HAL_SPI_TxRxCpltCallback</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, smp_spi_dma.o(i.HAL_SPI_TxRxCpltCallback))
<BR><BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_DMATransmitReceiveCplt
</UL>

<P><STRONG><a name="[2b9]"></a>HAL_SPI_TxRxHalfCpltCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l4xx_hal_spi.o(i.HAL_SPI_TxRxHalfCpltCallback))
<BR><BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_DMAHalfTransmitReceiveCplt
</UL>

<P><STRONG><a name="[22e]"></a>HAL_SYSTICK_Config</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, stm32l4xx_hal_cortex.o(i.HAL_SYSTICK_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_SYSTICK_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[258]"></a>HAL_TIMEx_Break2Callback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l4xx_hal_tim_ex.o(i.HAL_TIMEx_Break2Callback))
<BR><BR>[Called By]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[257]"></a>HAL_TIMEx_BreakCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l4xx_hal_tim_ex.o(i.HAL_TIMEx_BreakCallback))
<BR><BR>[Called By]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[25a]"></a>HAL_TIMEx_CommutCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l4xx_hal_tim_ex.o(i.HAL_TIMEx_CommutCallback))
<BR><BR>[Called By]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[24f]"></a>HAL_TIM_Base_Init</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, stm32l4xx_hal_tim.o(i.HAL_TIM_Base_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = HAL_TIM_Base_Init &rArr; TIM_Base_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_MspInit
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Base_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalTimerOpen
</UL>

<P><STRONG><a name="[250]"></a>HAL_TIM_Base_MspInit</STRONG> (Thumb, 134 bytes, Stack size 8 bytes, stm32l4xx_hal_msp.o(i.HAL_TIM_Base_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_TIM_Base_MspInit &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Init
</UL>

<P><STRONG><a name="[284]"></a>HAL_TIM_Base_Start_IT</STRONG> (Thumb, 110 bytes, Stack size 0 bytes, stm32l4xx_hal_tim.o(i.HAL_TIM_Base_Start_IT))
<BR><BR>[Called By]<UL><LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalTimerOpen
</UL>

<P><STRONG><a name="[253]"></a>HAL_TIM_IC_CaptureCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l4xx_hal_tim.o(i.HAL_TIM_IC_CaptureCallback))
<BR><BR>[Called By]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[252]"></a>HAL_TIM_IRQHandler</STRONG> (Thumb, 396 bytes, Stack size 16 bytes, stm32l4xx_hal_tim.o(i.HAL_TIM_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_TIM_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_TriggerCallback
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PeriodElapsedCallback
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_PulseFinishedCallback
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_OC_DelayElapsedCallback
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IC_CaptureCallback
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_CommutCallback
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_BreakCallback
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_Break2Callback
</UL>
<BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_IRQHandler
</UL>

<P><STRONG><a name="[254]"></a>HAL_TIM_OC_DelayElapsedCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l4xx_hal_tim.o(i.HAL_TIM_OC_DelayElapsedCallback))
<BR><BR>[Called By]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[255]"></a>HAL_TIM_PWM_PulseFinishedCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l4xx_hal_tim.o(i.HAL_TIM_PWM_PulseFinishedCallback))
<BR><BR>[Called By]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[256]"></a>HAL_TIM_PeriodElapsedCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l4xx_hal_tim.o(i.HAL_TIM_PeriodElapsedCallback))
<BR><BR>[Called By]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[259]"></a>HAL_TIM_TriggerCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l4xx_hal_tim.o(i.HAL_TIM_TriggerCallback))
<BR><BR>[Called By]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[262]"></a>HAL_UARTEx_RxEventCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l4xx_hal_uart.o(i.HAL_UARTEx_RxEventCallback))
<BR><BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_RxISR_8BIT
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_RxISR_16BIT
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_DMARxHalfCplt
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_DMAReceiveCplt
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>

<P><STRONG><a name="[263]"></a>HAL_UARTEx_WakeupCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l4xx_hal_uart_ex.o(i.HAL_UARTEx_WakeupCallback))
<BR><BR>[Called By]<UL><LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>

<P><STRONG><a name="[25b]"></a>HAL_UART_DeInit</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, stm32l4xx_hal_uart.o(i.HAL_UART_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = HAL_UART_DeInit &rArr; HAL_UART_MspDeInit &rArr; HAL_GPIO_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspDeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_uart_init
</UL>

<P><STRONG><a name="[260]"></a>HAL_UART_ErrorCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l4xx_hal_uart.o(i.HAL_UART_ErrorCallback))
<BR><BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_DMAError
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_DMAAbortOnError
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>

<P><STRONG><a name="[25d]"></a>HAL_UART_IRQHandler</STRONG> (Thumb, 584 bytes, Stack size 24 bytes, stm32l4xx_hal_uart.o(i.HAL_UART_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = HAL_UART_IRQHandler &rArr; UART_EndTransmit_IT &rArr; HAL_UART_TxCpltCallback &rArr; HAL_UART_Transmit_DMA &rArr; HAL_DMA_Start_IT &rArr; DMA_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Abort
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Abort_IT
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_EndTransmit_IT
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_EndRxTransfer
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_ErrorCallback
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UARTEx_RxEventCallback
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UARTEx_WakeupCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_IRQHandler
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART4_IRQHandler
</UL>

<P><STRONG><a name="[265]"></a>HAL_UART_Init</STRONG> (Thumb, 108 bytes, Stack size 8 bytes, stm32l4xx_hal_uart.o(i.HAL_UART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = HAL_UART_Init &rArr; HAL_UART_MspInit &rArr; HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLLSAI2_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_CheckIdleState
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_AdvFeatureConfig
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_uart_init
</UL>

<P><STRONG><a name="[25c]"></a>HAL_UART_MspDeInit</STRONG> (Thumb, 144 bytes, Stack size 16 bytes, smp_uart.o(i.HAL_UART_MspDeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = HAL_UART_MspDeInit &rArr; HAL_GPIO_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_DisableIRQ
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_DeInit
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_DeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_DeInit
</UL>

<P><STRONG><a name="[266]"></a>HAL_UART_MspInit</STRONG> (Thumb, 450 bytes, Stack size 208 bytes, smp_uart.o(i.HAL_UART_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = HAL_UART_MspInit &rArr; HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLLSAI2_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Init
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
</UL>

<P><STRONG><a name="[26d]"></a>HAL_UART_Receive_DMA</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, stm32l4xx_hal_uart.o(i.HAL_UART_Receive_DMA))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = HAL_UART_Receive_DMA &rArr; UART_Start_Receive_DMA &rArr; HAL_DMA_Start_IT &rArr; DMA_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Start_Receive_DMA
</UL>
<BR>[Called By]<UL><LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_uart_init
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_RxCpltCallback
</UL>

<P><STRONG><a name="[26f]"></a>HAL_UART_Receive_IT</STRONG> (Thumb, 72 bytes, Stack size 4 bytes, stm32l4xx_hal_uart.o(i.HAL_UART_Receive_IT))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_UART_Receive_IT &rArr; UART_Start_Receive_IT
</UL>
<BR>[Calls]<UL><LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Start_Receive_IT
</UL>
<BR>[Called By]<UL><LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_uart_init
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_RxCpltCallback
</UL>

<P><STRONG><a name="[271]"></a>HAL_UART_RxCpltCallback</STRONG> (Thumb, 148 bytes, Stack size 16 bytes, smp_uart.o(i.HAL_UART_RxCpltCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = HAL_UART_RxCpltCallback &rArr; HAL_UART_Receive_DMA &rArr; UART_Start_Receive_DMA &rArr; HAL_DMA_Start_IT &rArr; DMA_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_fifo_push
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Receive_IT
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Receive_DMA
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_RxISR_8BIT
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_RxISR_16BIT
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_DMAReceiveCplt
</UL>

<P><STRONG><a name="[2c3]"></a>HAL_UART_RxHalfCpltCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l4xx_hal_uart.o(i.HAL_UART_RxHalfCpltCallback))
<BR><BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_DMARxHalfCplt
</UL>

<P><STRONG><a name="[273]"></a>HAL_UART_Transmit_DMA</STRONG> (Thumb, 144 bytes, Stack size 16 bytes, stm32l4xx_hal_uart.o(i.HAL_UART_Transmit_DMA))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = HAL_UART_Transmit_DMA &rArr; HAL_DMA_Start_IT &rArr; DMA_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Start_IT
</UL>
<BR>[Called By]<UL><LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_uart_put
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_TxCpltCallback
</UL>

<P><STRONG><a name="[277]"></a>HAL_UART_Transmit_IT</STRONG> (Thumb, 100 bytes, Stack size 0 bytes, stm32l4xx_hal_uart.o(i.HAL_UART_Transmit_IT))
<BR><BR>[Called By]<UL><LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_uart_put
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_TxCpltCallback
</UL>

<P><STRONG><a name="[274]"></a>HAL_UART_TxCpltCallback</STRONG> (Thumb, 178 bytes, Stack size 24 bytes, smp_uart.o(i.HAL_UART_TxCpltCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = HAL_UART_TxCpltCallback &rArr; HAL_UART_Transmit_DMA &rArr; HAL_DMA_Start_IT &rArr; DMA_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_fifo_pop
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_fifo_get_size
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit_IT
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit_DMA
</UL>
<BR>[Called By]<UL><LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_EndTransmit_IT
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_DMATransmitCplt
</UL>

<P><STRONG><a name="[2c4]"></a>HAL_UART_TxHalfCpltCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l4xx_hal_uart.o(i.HAL_UART_TxHalfCpltCallback))
<BR><BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_DMATxHalfCplt
</UL>

<P><STRONG><a name="[33a]"></a>HalAfeGetMaxNtcTempAdc</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, halafe.o(i.HalAfeGetMaxNtcTempAdc))
<BR><BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appBalanceCheck
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notifyBaseMinMaxValue
</UL>

<P><STRONG><a name="[417]"></a>HalAfeGetMinNtcTempAdc</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, halafe.o(i.HalAfeGetMinNtcTempAdc))
<BR><BR>[Called By]<UL><LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notifyBaseMinMaxValue
</UL>

<P><STRONG><a name="[2f8]"></a>HalAfeGetNtcAdc</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, halafe.o(i.HalAfeGetNtcAdc))
<BR><BR>[Called By]<UL><LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiProtectDutpHandler
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiProtectDotpHandler
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiProtectCutpHandler
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiProtectCotpHandler
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciNotificationNtcVoltage
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;halAfeUpdateMinMaxNtcTempVoltage
</UL>

<P><STRONG><a name="[182]"></a>HalAfeSetCurrentValue</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, halafe.o(i.HalAfeSetCurrentValue))
<BR><BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanDebugCurrentSimu
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialUartPackageParser
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;halAfeCurrentGetCurrentValue
</UL>

<P><STRONG><a name="[8]"></a>HalBspGetButtonStatus</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, halbsp.o(i.HalBspGetButtonStatus))
<BR>[Address Reference Count : 1]<UL><LI> apisignalfeedback.o(.data)
</UL>
<P><STRONG><a name="[a]"></a>HalBspGetCocpLatchStatus</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, halbsp.o(i.HalBspGetCocpLatchStatus))
<BR>[Address Reference Count : 1]<UL><LI> apisignalfeedback.o(.data)
</UL>
<P><STRONG><a name="[1]"></a>HalBspGetDi1Status</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, halbsp.o(i.HalBspGetDi1Status))
<BR>[Address Reference Count : 1]<UL><LI> apisignalfeedback.o(.data)
</UL>
<P><STRONG><a name="[2]"></a>HalBspGetDi2Status</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, halbsp.o(i.HalBspGetDi2Status))
<BR>[Address Reference Count : 1]<UL><LI> apisignalfeedback.o(.data)
</UL>
<P><STRONG><a name="[9]"></a>HalBspGetDocpLatchStatus</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, halbsp.o(i.HalBspGetDocpLatchStatus))
<BR>[Address Reference Count : 1]<UL><LI> apisignalfeedback.o(.data)
</UL>
<P><STRONG><a name="[3]"></a>HalBspGetEpoStatus</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, halbsp.o(i.HalBspGetEpoStatus))
<BR>[Address Reference Count : 1]<UL><LI> apisignalfeedback.o(.data)
</UL>
<P><STRONG><a name="[b]"></a>HalBspGetOdInStatus</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, halbsp.o(i.HalBspGetOdInStatus))
<BR>[Address Reference Count : 1]<UL><LI> apisignalfeedback.o(.data)
</UL>
<P><STRONG><a name="[5]"></a>HalBspGetPs1Status</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, halbsp.o(i.HalBspGetPs1Status))
<BR>[Address Reference Count : 1]<UL><LI> apisignalfeedback.o(.data)
</UL>
<P><STRONG><a name="[6]"></a>HalBspGetPs2Status</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, halbsp.o(i.HalBspGetPs2Status))
<BR>[Address Reference Count : 1]<UL><LI> apisignalfeedback.o(.data)
</UL>
<P><STRONG><a name="[7]"></a>HalBspGetPs3Status</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, halbsp.o(i.HalBspGetPs3Status))
<BR>[Address Reference Count : 1]<UL><LI> apisignalfeedback.o(.data)
</UL>
<P><STRONG><a name="[4]"></a>HalBspGetSpStatus</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, halbsp.o(i.HalBspGetSpStatus))
<BR>[Address Reference Count : 1]<UL><LI> apisignalfeedback.o(.data)
</UL>
<P><STRONG><a name="[278]"></a>HalBspInit</STRONG> (Thumb, 480 bytes, Stack size 40 bytes, halbsp.o(i.HalBspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = HalBspInit &rArr; HalBspSetGpio &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalBspSetGpio
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[349]"></a>HalBspOdOutCtrl</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, halbsp.o(i.HalBspOdOutCtrl))
<BR><BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;outputNextScuCanRequestIdSignal
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appBmsStopOutputAssignIdSignal
</UL>

<P><STRONG><a name="[18b]"></a>HalBspRelayPsCtrl</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, halbsp.o(i.HalBspRelayPsCtrl))
<BR><BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanDebugRelayControl
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkRelayOn
</UL>

<P><STRONG><a name="[41f]"></a>HalBspReleaseCtrl</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, halbsp.o(i.HalBspReleaseCtrl))
<BR><BR>[Called By]<UL><LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;releaseOCP
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ocpReleaseSwTimer
</UL>

<P><STRONG><a name="[209]"></a>HalBspSetGpio</STRONG> (Thumb, 24 bytes, Stack size 32 bytes, davincibsp_rev2.o(i.HalBspSetGpio))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = HalBspSetGpio &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalBspInit
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_MspInit
</UL>

<P><STRONG><a name="[279]"></a>HalEePromErase</STRONG> (Thumb, 126 bytes, Stack size 40 bytes, haleepromstm32l4xx.o(i.HalEePromErase))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = HalEePromErase &rArr; HAL_FLASHEx_Erase &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASH_Unlock
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASHEx_Erase
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPage
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBank
</UL>
<BR>[Called By]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiEventLogSaveLogData
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;saveScuIdPar
<LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;saveSysPar
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;saveCalPar
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;saveBatteryInfoPar
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeCodeDataToFlashRom
</UL>

<P><STRONG><a name="[2e8]"></a>HalEePromRead</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, haleepromstm32l4xx.o(i.HalEePromRead))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HalEePromRead
</UL>
<BR>[Called By]<UL><LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiEventLogReadLogData
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loadSysPar
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loadScuIdPar
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loadCalPar
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loadBatteryInfoPar
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;searchLastRecordAddress
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkFuCodeDataSwTimerHandler
</UL>

<P><STRONG><a name="[27d]"></a>HalEePromWrite</STRONG> (Thumb, 98 bytes, Stack size 32 bytes, haleepromstm32l4xx.o(i.HalEePromWrite))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = HalEePromWrite &rArr; HAL_FLASH_Program &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASH_Unlock
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASH_Program
</UL>
<BR>[Called By]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiEventLogSaveLogData
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;saveScuIdPar
<LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;saveSysPar
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;saveCalPar
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;saveBatteryInfoPar
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeCodeDataToFlashRom
</UL>

<P><STRONG><a name="[27e]"></a>HalRtcGetDateTime</STRONG> (Thumb, 70 bytes, Stack size 32 bytes, halrtcstm32l4xx.o(i.HalRtcGetDateTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HalRtcGetDateTime &rArr; HAL_RTC_GetTime
</UL>
<BR>[Calls]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_GetTime
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_GetDate
</UL>
<BR>[Called By]<UL><LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalRtcGetSmpUnixTime
</UL>

<P><STRONG><a name="[27f]"></a>HalRtcGetSmpUnixTime</STRONG> (Thumb, 208 bytes, Stack size 40 bytes, halrtcstm32l4xx.o(i.HalRtcGetSmpUnixTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = HalRtcGetSmpUnixTime &rArr; HalRtcGetDateTime &rArr; HAL_RTC_GetTime
</UL>
<BR>[Calls]<UL><LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalRtcGetDateTime
</UL>
<BR>[Called By]<UL><LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProjectOpen
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiRamSaveLastChgDhgTime
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiRamSaveRtcDateTime
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiRamLoadReleaseTime
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiEventLogSaveLogData
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;davinciCanRtc
</UL>

<P><STRONG><a name="[280]"></a>HalRtcOpen</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, halrtcstm32l4xx.o(i.HalRtcOpen))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = HalRtcOpen &rArr; HAL_RTC_Init &rArr; HAL_RTC_MspInit &rArr; HAL_RCC_OscConfig &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProjectOpen
</UL>

<P><STRONG><a name="[281]"></a>HalRtcSetupDate</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, halrtcstm32l4xx.o(i.HalRtcSetupDate))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = HalRtcSetupDate &rArr; HAL_RTC_SetDate &rArr; RTC_ExitInitMode &rArr; HAL_RTC_WaitForSynchro
</UL>
<BR>[Calls]<UL><LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetDate
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;davinciCanRtc
</UL>

<P><STRONG><a name="[282]"></a>HalRtcSetupTime</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, halrtcstm32l4xx.o(i.HalRtcSetupTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = HalRtcSetupTime &rArr; HAL_RTC_SetTime &rArr; RTC_ExitInitMode &rArr; HAL_RTC_WaitForSynchro
</UL>
<BR>[Calls]<UL><LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetTime
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;davinciCanRtc
</UL>

<P><STRONG><a name="[366]"></a>HalRtcSmpUnixTimeToDateTime</STRONG> (Thumb, 254 bytes, Stack size 32 bytes, halrtcstm32l4xx.o(i.HalRtcSmpUnixTimeToDateTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HalRtcSmpUnixTimeToDateTime
</UL>
<BR>[Called By]<UL><LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProjectOpen
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;davinciCanRtc
</UL>

<P><STRONG><a name="[283]"></a>HalTimerOpen</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, haltimerstm32l4xx.o(i.HalTimerOpen))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = HalTimerOpen &rArr; HAL_TIM_Base_Init &rArr; TIM_Base_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Start_IT
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProjectOpen
</UL>

<P><STRONG><a name="[285]"></a>Hal_W5500_Open</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, smp_w5500_dma.o(i.Hal_W5500_Open))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = Hal_W5500_Open &rArr; smp_w5500_spi_config &rArr; smp_spi_master_init &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LibSwTimerOpen
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_w5500_spi_config
</UL>
<BR>[Called By]<UL><LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProjectOpen
</UL>

<P><STRONG><a name="[290]"></a>LibHwTimerHandle</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, libhwtimer.o(i.LibHwTimerHandle))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = LibHwTimerHandle &rArr; _LibRegisterTypeHandlerExe &rArr; _LibRegisterRm
</UL>
<BR>[Calls]<UL><LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LibRegisterTypeHandlerExe
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProjectHwTimerHandler
</UL>

<P><STRONG><a name="[292]"></a>LibHwTimerOpen</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, libhwtimer.o(i.LibHwTimerOpen))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = LibHwTimerOpen &rArr; _LibRegisterAdd
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LibRegisterAdd
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LibRegisterIsMemberNull
</UL>
<BR>[Called By]<UL><LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_init
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appGaugeOpen
</UL>

<P><STRONG><a name="[295]"></a>LibNtcRToTemperature</STRONG> (Thumb, 558 bytes, Stack size 32 bytes, libntc.o(i.LibNtcRToTemperature))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = LibNtcRToTemperature &rArr; __hardfp_log &rArr; __kernel_poly &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_log
</UL>
<BR>[Called By]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LibNtcVoltageToTemperature
</UL>

<P><STRONG><a name="[298]"></a>LibNtcVoltageToTemperature</STRONG> (Thumb, 124 bytes, Stack size 32 bytes, libntc.o(i.LibNtcVoltageToTemperature))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = LibNtcVoltageToTemperature &rArr; LibNtcRToTemperature &rArr; __hardfp_log &rArr; __kernel_poly &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LibNtcRToTemperature
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appBalanceCheck
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notifyBaseMinMaxValue
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cvtMcuNtcTemp
</UL>

<P><STRONG><a name="[427]"></a>LibSetRealTemperatureToInternalValue</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, libntc.o(i.LibSetRealTemperatureToInternalValue))
<BR><BR>[Called By]<UL><LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setDefaultDutpValue
<LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setDefaultDotpValue
<LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setDefaultCutpValue
<LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setDefaultCotpValue
<LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setDefaultBalanceValue
</UL>

<P><STRONG><a name="[3f9]"></a>LibSwTimerClearCount</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, libswtimer.o(i.LibSwTimerClearCount))
<BR><BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[299]"></a>LibSwTimerClose</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, libswtimer.o(i.LibSwTimerClose))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LibSwTimerClose &rArr; _LibRegisterRm
</UL>
<BR>[Calls]<UL><LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LibRegisterRm
</UL>
<BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ocpReleaseSwTimer
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appBmsResetScuId
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;magicCodeIdleSwTimerHandler
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sysParSwTimerHandler
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batteryInfoSwTimerHandler
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updatFwSwTimerHandler
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkFuCodeDataSwTimerHandler
</UL>

<P><STRONG><a name="[29b]"></a>LibSwTimerHandle</STRONG> (Thumb, 138 bytes, Stack size 8 bytes, libswtimer.o(i.LibSwTimerHandle))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = LibSwTimerHandle &rArr; _LibRegisterTypeHandlerExe &rArr; _LibRegisterRm
</UL>
<BR>[Calls]<UL><LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LibRegisterTypeHandlerExe
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LibRegisterIsMemberNull
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[35e]"></a>LibSwTimerHwHandler</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, libswtimer.o(i.LibSwTimerHwHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LibSwTimerHwHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProjectHwTimerHandler
</UL>

<P><STRONG><a name="[1f2]"></a>LibSwTimerOpen</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, libswtimer.o(i.LibSwTimerOpen))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = LibSwTimerOpen &rArr; _LibRegisterAdd
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LibRegisterAdd
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LibRegisterIsMemberNull
</UL>
<BR>[Called By]<UL><LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;releaseOCP
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProjectOpen
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiIRMonitoringOpen
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkOdInSwTimerHandler
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;halAfeCurrentOpen
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialUartDavinciOpen
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciOpen
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProtectOpen
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appGaugeOpen
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appButtonOpen
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appBmsOpen
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appBalanceOpen
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSystemFlagOpen
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSignalFeedbackOpen
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiScuTempOpen
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiRelayControlOpen
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiEventLogOpen
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_W5500_Open
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciParameterMagicCode
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resetSysParIdleCount
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resetBatteryInfoIdleCount
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiFuUpdateFw
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiFuResetApp
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiFuResetAndUpdate
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;searchLastLogAddressSwTimerHandler
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkRcvFuCodeData
</UL>

<P><STRONG><a name="[188]"></a>LibTemperatureToVoltage</STRONG> (Thumb, 604 bytes, Stack size 24 bytes, libntc.o(i.LibTemperatureToVoltage))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = LibTemperatureToVoltage &rArr; __hardfp_exp &rArr; __kernel_poly &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_exp
</UL>
<BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanDebugNtcTSimu
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialUartPackageParser
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setSysParRamValue
</UL>

<P><STRONG><a name="[29d]"></a>MAX7219_All_Display</STRONG> (Thumb, 54 bytes, Stack size 48 bytes, smp_max7219.o(i.MAX7219_All_Display))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = MAX7219_All_Display &rArr; maxSendSequence &rArr; max7219_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxSendSequence
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[29f]"></a>MAX7219_Display_1</STRONG> (Thumb, 64 bytes, Stack size 48 bytes, smp_max7219.o(i.MAX7219_Display_1))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = MAX7219_Display_1 &rArr; maxSendSequence &rArr; max7219_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxSendSequence
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[c3]"></a>MX25L_SPI_1_event_handler</STRONG> (Thumb, 78 bytes, Stack size 280 bytes, smp_mx25l_driver.o(i.MX25L_SPI_1_event_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = MX25L_SPI_1_event_handler &rArr; smp_fifo_flash_pop
</UL>
<BR>[Calls]<UL><LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_fifo_flash_pop
</UL>
<BR>[Address Reference Count : 1]<UL><LI> smp_mx25l_driver.o(i.smp_mx25l_flash_init)
</UL>
<P><STRONG><a name="[2a1]"></a>MX25L_SPI_send_command</STRONG> (Thumb, 198 bytes, Stack size 296 bytes, smp_mx25l_driver.o(i.MX25L_SPI_send_command))
<BR><BR>[Stack]<UL><LI>Max Depth = 624<LI>Call Chain = MX25L_SPI_send_command &rArr; smp_mx25l_flash_write_enable &rArr; smp_spi_master_send_recv_blocking &rArr; HAL_SPI_Receive &rArr; HAL_SPI_TransmitReceive &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFifoStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_fifo_flash_read
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_fifo_flash_get_size
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_spi_master_send_recv
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_mx25l_flash_write_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[222]"></a>PutCanDataToMailBox</STRONG> (Thumb, 108 bytes, Stack size 48 bytes, smp_can.o(i.PutCanDataToMailBox))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = PutCanDataToMailBox &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_can_fifo_pop
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_GetTxMailboxesFreeLevel
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_AddTxMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_TxMailbox2CompleteCallback
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_TxMailbox1CompleteCallback
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_TxMailbox0CompleteCallback
</UL>

<P><STRONG><a name="[23a]"></a>RTC_Bcd2ToByte</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32l4xx_hal_rtc.o(i.RTC_Bcd2ToByte))
<BR><BR>[Called By]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_GetTime
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_GetDate
</UL>

<P><STRONG><a name="[242]"></a>RTC_ByteToBcd2</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32l4xx_hal_rtc.o(i.RTC_ByteToBcd2))
<BR><BR>[Called By]<UL><LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetTime
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetDate
</UL>

<P><STRONG><a name="[23e]"></a>RTC_EnterInitMode</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, stm32l4xx_hal_rtc.o(i.RTC_EnterInitMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = RTC_EnterInitMode
</UL>
<BR>[Calls]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetTime
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetDate
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_Init
</UL>

<P><STRONG><a name="[23f]"></a>RTC_ExitInitMode</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, stm32l4xx_hal_rtc.o(i.RTC_ExitInitMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = RTC_ExitInitMode &rArr; HAL_RTC_WaitForSynchro
</UL>
<BR>[Calls]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_WaitForSynchro
</UL>
<BR>[Called By]<UL><LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetTime
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetDate
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_Init
</UL>

<P><STRONG><a name="[2aa]"></a>SEGGER_RTT_Init</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, segger_rtt.o(i.SEGGER_RTT_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SEGGER_RTT_Init &rArr; _DoInit
</UL>
<BR>[Calls]<UL><LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DoInit
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2ac]"></a>SEGGER_RTT_Write</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, segger_rtt.o(i.SEGGER_RTT_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking
</UL>
<BR>[Calls]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_WriteNoLock
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DoInit
</UL>
<BR>[Called By]<UL><LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_vprintf
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_StoreChar
</UL>

<P><STRONG><a name="[2ad]"></a>SEGGER_RTT_WriteNoLock</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, segger_rtt.o(i.SEGGER_RTT_WriteNoLock))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking
</UL>
<BR>[Calls]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteNoCheck
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteBlocking
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetAvailWriteSpace
</UL>
<BR>[Called By]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_Write
</UL>

<P><STRONG><a name="[2b1]"></a>SEGGER_RTT_printf</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, segger_rtt_printf.o(i.SEGGER_RTT_printf))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking
</UL>
<BR>[Calls]<UL><LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_vprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_uart_rx_process
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_irm_rxdata_cb
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_flash_log_event_handler
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_switch_rx_pin_type_setting
</UL>

<P><STRONG><a name="[2b2]"></a>SEGGER_RTT_vprintf</STRONG> (Thumb, 554 bytes, Stack size 136 bytes, segger_rtt_printf.o(i.SEGGER_RTT_vprintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = SEGGER_RTT_vprintf &rArr; _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking
</UL>
<BR>[Calls]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_StoreChar
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PrintUnsigned
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PrintInt
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
</UL>

<P><STRONG><a name="[43c]"></a>SMP_GPIO_MODE</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, smp_gpio.o(i.SMP_GPIO_MODE))
<BR><BR>[Called By]<UL><LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_gpio_init
</UL>

<P><STRONG><a name="[43d]"></a>SMP_GPIO_PIN</STRONG> (Thumb, 104 bytes, Stack size 0 bytes, smp_gpio.o(i.SMP_GPIO_PIN))
<BR><BR>[Called By]<UL><LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_gpio_set_state
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_gpio_init
</UL>

<P><STRONG><a name="[43e]"></a>SMP_GPIO_PORT</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, smp_gpio.o(i.SMP_GPIO_PORT))
<BR><BR>[Called By]<UL><LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_gpio_set_state
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_gpio_init
</UL>

<P><STRONG><a name="[15]"></a>SysTick_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, main.o(i.SysTick_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_IncTick
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l496xx.o(RESET)
</UL>
<P><STRONG><a name="[2bf]"></a>SystemClock_Config_HSE_80MHz</STRONG> (Thumb, 116 bytes, Stack size 96 bytes, main.o(i.SystemClock_Config_HSE_80MHz))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = SystemClock_Config_HSE_80MHz &rArr; HAL_RCC_OscConfig &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_ControlVoltageScaling
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[71]"></a>SystemInit</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, system_stm32l4xx.o(i.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l496xx.o(.text)
</UL>
<P><STRONG><a name="[33]"></a>TIM3_IRQHandler</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, haltimerstm32l4xx.o(i.TIM3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = TIM3_IRQHandler &rArr; HAL_TIM_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l496xx.o(RESET)
</UL>
<P><STRONG><a name="[251]"></a>TIM_Base_SetConfig</STRONG> (Thumb, 160 bytes, Stack size 36 bytes, stm32l4xx_hal_tim.o(i.TIM_Base_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = TIM_Base_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Init
</UL>

<P><STRONG><a name="[4a]"></a>UART4_IRQHandler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, smp_uart.o(i.UART4_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = UART4_IRQHandler &rArr; HAL_UART_IRQHandler &rArr; UART_EndTransmit_IT &rArr; HAL_UART_TxCpltCallback &rArr; HAL_UART_Transmit_DMA &rArr; HAL_DMA_Start_IT &rArr; DMA_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l496xx.o(RESET)
</UL>
<P><STRONG><a name="[268]"></a>UART_AdvFeatureConfig</STRONG> (Thumb, 200 bytes, Stack size 0 bytes, stm32l4xx_hal_uart.o(i.UART_AdvFeatureConfig))
<BR><BR>[Called By]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
</UL>

<P><STRONG><a name="[269]"></a>UART_CheckIdleState</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, stm32l4xx_hal_uart.o(i.UART_CheckIdleState))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = UART_CheckIdleState &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
</UL>

<P><STRONG><a name="[267]"></a>UART_SetConfig</STRONG> (Thumb, 664 bytes, Stack size 24 bytes, stm32l4xx_hal_uart.o(i.UART_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = UART_SetConfig &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK2Freq
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK1Freq
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
</UL>

<P><STRONG><a name="[26e]"></a>UART_Start_Receive_DMA</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, stm32l4xx_hal_uart.o(i.UART_Start_Receive_DMA))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = UART_Start_Receive_DMA &rArr; HAL_DMA_Start_IT &rArr; DMA_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Start_IT
</UL>
<BR>[Called By]<UL><LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Receive_DMA
</UL>

<P><STRONG><a name="[270]"></a>UART_Start_Receive_IT</STRONG> (Thumb, 152 bytes, Stack size 12 bytes, stm32l4xx_hal_uart.o(i.UART_Start_Receive_IT))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = UART_Start_Receive_IT
</UL>
<BR>[Called By]<UL><LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Receive_IT
</UL>

<P><STRONG><a name="[2c1]"></a>UART_WaitOnFlagUntilTimeout</STRONG> (Thumb, 168 bytes, Stack size 32 bytes, stm32l4xx_hal_uart.o(i.UART_WaitOnFlagUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_CheckIdleState
</UL>

<P><STRONG><a name="[3d]"></a>USART3_IRQHandler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, smp_uart.o(i.USART3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = USART3_IRQHandler &rArr; HAL_UART_IRQHandler &rArr; UART_EndTransmit_IT &rArr; HAL_UART_TxCpltCallback &rArr; HAL_UART_Transmit_DMA &rArr; HAL_DMA_Start_IT &rArr; DMA_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l496xx.o(RESET)
</UL>
<P><STRONG><a name="[2c5]"></a>W5500_Init_Step</STRONG> (Thumb, 498 bytes, Stack size 40 bytes, smp_w5500_dma.o(i.W5500_Init_Step))
<BR><BR>[Stack]<UL><LI>Max Depth = 276<LI>Call Chain = W5500_Init_Step &rArr; smp_w5500_spiDMA_WriteMulti &rArr; smp_spi_master_send_recv &rArr; HAL_SPI_Receive_DMA &rArr; HAL_SPI_TransmitReceive_DMA &rArr; HAL_DMA_Start_IT &rArr; DMA_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w5500_uint8_transfer_to_phyconf
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w5500_phyconf_transfer_to_uint8
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_w5500_spiDMA_write_byte
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_w5500_spiDMA_read_byte
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_w5500_spiDMA_WriteMulti
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_w5500_spiDMA_ReadMulti
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W5500SwTimerHandler
</UL>

<P><STRONG><a name="[2c6]"></a>W5500_Server_Step</STRONG> (Thumb, 1736 bytes, Stack size 72 bytes, smp_w5500_dma.o(i.W5500_Server_Step))
<BR><BR>[Stack]<UL><LI>Max Depth = 308<LI>Call Chain = W5500_Server_Step &rArr; smp_w5500_spiDMA_WriteMulti &rArr; smp_spi_master_send_recv &rArr; HAL_SPI_Receive_DMA &rArr; HAL_SPI_TransmitReceive_DMA &rArr; HAL_DMA_Start_IT &rArr; DMA_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_w5500_spiDMA_write_byte
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_w5500_spiDMA_read_byte
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_w5500_spiDMA_WriteMulti
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_w5500_spiDMA_ReadMulti
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_w5500_getLocalIP
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W5500SwTimerHandler
</UL>

<P><STRONG><a name="[3d9]"></a>Word2u8</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, smp_drv_bq796xx.o(i.Word2u8))
<BR><BR>[Called By]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_command_framing
</UL>

<P><STRONG><a name="[294]"></a>_LibRegisterAdd</STRONG> (Thumb, 116 bytes, Stack size 32 bytes, libregister.o(i._LibRegisterAdd))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _LibRegisterAdd
</UL>
<BR>[Calls]<UL><LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;recordMalloc
</UL>
<BR>[Called By]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LibHwTimerOpen
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appButtonOpen
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LibSwTimerOpen
</UL>

<P><STRONG><a name="[293]"></a>_LibRegisterIsMemberNull</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, libregister.o(i._LibRegisterIsMemberNull))
<BR><BR>[Called By]<UL><LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LibSwTimerHandle
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LibHwTimerOpen
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LibSwTimerOpen
</UL>

<P><STRONG><a name="[29a]"></a>_LibRegisterRm</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, libregister.o(i._LibRegisterRm))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _LibRegisterRm
</UL>
<BR>[Calls]<UL><LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;recordFree
</UL>
<BR>[Called By]<UL><LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LibSwTimerClose
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LibRegisterTypeHandlerExe
</UL>

<P><STRONG><a name="[291]"></a>_LibRegisterTypeHandlerExe</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, libregister.o(i._LibRegisterTypeHandlerExe))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _LibRegisterTypeHandlerExe &rArr; _LibRegisterRm
</UL>
<BR>[Calls]<UL><LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LibRegisterRm
</UL>
<BR>[Called By]<UL><LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LibSwTimerHandle
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LibHwTimerHandle
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;buttonSwTimerHandler
</UL>

<P><STRONG><a name="[2d1]"></a>__0printf</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[463]"></a>__1printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[38c]"></a>__2printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sector_header_event_handler
</UL>

<P><STRONG><a name="[464]"></a>__c89printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[465]"></a>printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[2d3]"></a>__0sprintf</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[466]"></a>__1sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)

<P><STRONG><a name="[180]"></a>__2sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProjectDavinciBalanceEventHandler
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_afe_cb
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProjectOpen
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkWhichScuRelayOn
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkOdInSwTimerHandler
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appBalanceCheckSet
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appBalanceCheck
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParSetQmax
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getSocTableUseAvgCellVoltage
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;baseInfoIni
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciOpen
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiEventLogSaveLogData
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanDebugVbatAdc
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanDebugCurrentAdc
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterVBatCalibration
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterCurrentCalibration
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;faultLog1DataCallBack
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dump_danpackage
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialUartDavinciTimerHandler
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loadSysPar
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loadScuIdPar
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loadCalPar
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loadBatteryInfoPar
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;searchLastRecordAddress
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;searchLastLogAddressSwTimerHandler
</UL>

<P><STRONG><a name="[467]"></a>__c89sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)

<P><STRONG><a name="[468]"></a>sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)

<P><STRONG><a name="[2d9]"></a>__ARM_fpclassify</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, fpclassify.o(i.__ARM_fpclassify))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_fpclassify
</UL>
<BR>[Called By]<UL><LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_exp
</UL>

<P><STRONG><a name="[29c]"></a>__hardfp_exp</STRONG> (Thumb, 714 bytes, Stack size 72 bytes, exp.o(i.__hardfp_exp))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = __hardfp_exp &rArr; __kernel_poly &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_overflow
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
</UL>
<BR>[Called By]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LibTemperatureToVoltage
</UL>

<P><STRONG><a name="[28b]"></a>__hardfp_fabs</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, fabs.o(i.__hardfp_fabs))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __hardfp_fabs
</UL>
<BR>[Called By]<UL><LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRMonitoringMeasure_Steps
</UL>

<P><STRONG><a name="[297]"></a>__hardfp_log</STRONG> (Thumb, 872 bytes, Stack size 88 bytes, log.o(i.__hardfp_log))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = __hardfp_log &rArr; __kernel_poly &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_divzero
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
</UL>
<BR>[Called By]<UL><LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LibNtcRToTemperature
</UL>

<P><STRONG><a name="[2d8]"></a>__kernel_poly</STRONG> (Thumb, 248 bytes, Stack size 24 bytes, poly.o(i.__kernel_poly))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = __kernel_poly &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_log
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_exp
</UL>

<P><STRONG><a name="[2db]"></a>__mathlib_dbl_divzero</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, dunder.o(i.__mathlib_dbl_divzero))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = __mathlib_dbl_divzero &rArr; __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_log
</UL>

<P><STRONG><a name="[2d4]"></a>__mathlib_dbl_infnan</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, dunder.o(i.__mathlib_dbl_infnan))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = __mathlib_dbl_infnan &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_log
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_exp
</UL>

<P><STRONG><a name="[2da]"></a>__mathlib_dbl_invalid</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, dunder.o(i.__mathlib_dbl_invalid))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = __mathlib_dbl_invalid &rArr; __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_log
</UL>

<P><STRONG><a name="[2d6]"></a>__mathlib_dbl_overflow</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, dunder.o(i.__mathlib_dbl_overflow))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = __mathlib_dbl_overflow &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_exp
</UL>

<P><STRONG><a name="[2d7]"></a>__mathlib_dbl_underflow</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, dunder.o(i.__mathlib_dbl_underflow))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = __mathlib_dbl_underflow &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_exp
</UL>

<P><STRONG><a name="[469]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[46a]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[46b]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[2d5]"></a>__set_errno</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, errno.o(i.__set_errno))
<BR><BR>[Called By]<UL><LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_log
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_exp
</UL>

<P><STRONG><a name="[3b5]"></a>apiCaliParGetChecksum</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, apisyspar.o(i.apiCaliParGetChecksum))
<BR><BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;davinciCanChecksumn
</UL>

<P><STRONG><a name="[1ae]"></a>apiCaliParGetCurrentValue</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, apisyspar.o(i.apiCaliParGetCurrentValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = apiCaliParGetCurrentValue
</UL>
<BR>[Called By]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterCurrentCalibration
</UL>

<P><STRONG><a name="[1df]"></a>apiCaliParGetVbatValue</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, apisyspar.o(i.apiCaliParGetVbatValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = apiCaliParGetVbatValue
</UL>
<BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterVBatCalibration
</UL>

<P><STRONG><a name="[1ad]"></a>apiCaliParSetCurrentValue</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, apisyspar.o(i.apiCaliParSetCurrentValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 404<LI>Call Chain = apiCaliParSetCurrentValue &rArr; saveCalPar &rArr; appSerialCanDavinciSendTextMessage &rArr; appSerialCanDavinciPutPkgToCanFifo &rArr; smp_can_put &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setCalParRamValue
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;saveCalPar
</UL>
<BR>[Called By]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterCurrentCalibration
</UL>

<P><STRONG><a name="[1de]"></a>apiCaliParSetVbatValue</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, apisyspar.o(i.apiCaliParSetVbatValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 404<LI>Call Chain = apiCaliParSetVbatValue &rArr; saveCalPar &rArr; appSerialCanDavinciSendTextMessage &rArr; appSerialCanDavinciPutPkgToCanFifo &rArr; smp_can_put &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setCalParRamValue
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;saveCalPar
</UL>
<BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterVBatCalibration
</UL>

<P><STRONG><a name="[2e7]"></a>apiEventLogGetLogNumber</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, apieventflashrom.o(i.apiEventLogGetLogNumber))
<BR><BR>[Called By]<UL><LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiEventLogReadLogData
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;davinciCanFaultLog
</UL>

<P><STRONG><a name="[2e5]"></a>apiEventLogOpen</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, apieventflashrom.o(i.apiEventLogOpen))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = apiEventLogOpen &rArr; LibSwTimerOpen &rArr; _LibRegisterAdd
</UL>
<BR>[Calls]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LibSwTimerOpen
</UL>
<BR>[Called By]<UL><LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProjectOpen
</UL>

<P><STRONG><a name="[2e6]"></a>apiEventLogReadLogData</STRONG> (Thumb, 86 bytes, Stack size 32 bytes, apieventflashrom.o(i.apiEventLogReadLogData))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = apiEventLogReadLogData &rArr; HalEePromRead
</UL>
<BR>[Calls]<UL><LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalEePromRead
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiEventLogGetLogNumber
</UL>
<BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;davinciCanFaultLog
</UL>

<P><STRONG><a name="[2e9]"></a>apiEventLogSaveLogData</STRONG> (Thumb, 168 bytes, Stack size 152 bytes, apieventflashrom.o(i.apiEventLogSaveLogData))
<BR><BR>[Stack]<UL><LI>Max Depth = 516<LI>Call Chain = apiEventLogSaveLogData &rArr; appSerialCanDavinciSendTextMessage &rArr; appSerialCanDavinciPutPkgToCanFifo &rArr; smp_can_put &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciSendTextMessage
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalRtcGetSmpUnixTime
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalEePromWrite
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalEePromErase
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protectEventHandler
</UL>

<P><STRONG><a name="[3fc]"></a>apiFuCheckMagicCode</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, apifu.o(i.apiFuCheckMagicCode))
<BR><BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[44b]"></a>apiFuGetFwCheckStatus</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, apifuflashrom.o(i.apiFuGetFwCheckStatus))
<BR><BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updatFwSwTimerHandler
</UL>

<P><STRONG><a name="[3bc]"></a>apiFuJumpToBootloader</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, apifu.o(i.apiFuJumpToBootloader))
<BR><BR>[Called By]<UL><LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decodeFuInfoPackage
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updatFwSwTimerHandler
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resetAppSwTimerHandler
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resetAndUpdateSwTimerHandler
</UL>

<P><STRONG><a name="[3ba]"></a>apiFuRcvSetBaseAddr</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, apifuflashrom.o(i.apiFuRcvSetBaseAddr))
<BR><BR>[Called By]<UL><LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decodeFuInfoPackage
</UL>

<P><STRONG><a name="[3b9]"></a>apiFuRcvSetVersion</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, apifuflashrom.o(i.apiFuRcvSetVersion))
<BR><BR>[Called By]<UL><LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decodeFuInfoPackage
</UL>

<P><STRONG><a name="[2ea]"></a>apiFuResetAndUpdate</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, apifu.o(i.apiFuResetAndUpdate))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = apiFuResetAndUpdate &rArr; LibSwTimerOpen &rArr; _LibRegisterAdd
</UL>
<BR>[Calls]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LibSwTimerOpen
</UL>
<BR>[Called By]<UL><LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decodeFuInfoPackage
</UL>

<P><STRONG><a name="[2eb]"></a>apiFuResetApp</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, apifu.o(i.apiFuResetApp))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = apiFuResetApp &rArr; LibSwTimerOpen &rArr; _LibRegisterAdd
</UL>
<BR>[Calls]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LibSwTimerOpen
</UL>
<BR>[Called By]<UL><LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decodeFuInfoPackage
</UL>

<P><STRONG><a name="[3bb]"></a>apiFuSetMagicCode</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, apifu.o(i.apiFuSetMagicCode))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = apiFuSetMagicCode
</UL>
<BR>[Called By]<UL><LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decodeFuInfoPackage
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updatFwSwTimerHandler
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resetAppSwTimerHandler
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resetAndUpdateSwTimerHandler
</UL>

<P><STRONG><a name="[3b8]"></a>apiFuSetTotalPackageNum</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, apifuflashrom.o(i.apiFuSetTotalPackageNum))
<BR><BR>[Called By]<UL><LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decodeFuInfoPackage
</UL>

<P><STRONG><a name="[2ec]"></a>apiFuSetUpgradeData</STRONG> (Thumb, 314 bytes, Stack size 56 bytes, apifuflashrom.o(i.apiFuSetUpgradeData))
<BR><BR>[Stack]<UL><LI>Max Depth = 444<LI>Call Chain = apiFuSetUpgradeData &rArr; checkRcvFuCodeData &rArr; appSerialCanDavinciSendTextMessage &rArr; appSerialCanDavinciPutPkgToCanFifo &rArr; smp_can_put &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeCodeDataToFlashRom
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isValidInfoStatus
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkRcvFuCodeData
</UL>
<BR>[Called By]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decodeFuDataPackage
</UL>

<P><STRONG><a name="[2f0]"></a>apiFuStartUp</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, apifuflashrom.o(i.apiFuStartUp))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = apiFuStartUp
</UL>
<BR>[Calls]<UL><LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decodeFuInfoPackage
</UL>

<P><STRONG><a name="[2f1]"></a>apiFuUpdateFw</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, apifu.o(i.apiFuUpdateFw))
<BR><BR>[Stack]<UL><LI>Max Depth = 372<LI>Call Chain = apiFuUpdateFw &rArr; appSerialCanDavinciSendTextMessage &rArr; appSerialCanDavinciPutPkgToCanFifo &rArr; smp_can_put &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciSendTextMessage
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LibSwTimerOpen
</UL>
<BR>[Called By]<UL><LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decodeFuInfoPackage
</UL>

<P><STRONG><a name="[3fd]"></a>apiIRMonitoringGetVstack</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, apiirmonitoring.o(i.apiIRMonitoringGetVstack))
<BR><BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2f2]"></a>apiIRMonitoringOpen</STRONG> (Thumb, 52 bytes, Stack size 56 bytes, apiirmonitoring.o(i.apiIRMonitoringOpen))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = apiIRMonitoringOpen &rArr; LibSwTimerOpen &rArr; _LibRegisterAdd
</UL>
<BR>[Calls]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LibSwTimerOpen
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRMonitoring_Init
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[397]"></a>apiProtectCocpGetFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, apiprotectcocp.o(i.apiProtectCocpGetFlag))
<BR><BR>[Called By]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkCOCP_DOCP_Flag
</UL>

<P><STRONG><a name="[2f3]"></a>apiProtectCocpHandler</STRONG> (Thumb, 322 bytes, Stack size 56 bytes, apiprotectcocp.o(i.apiProtectCocpHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = apiProtectCocpHandler &rArr; appProtectGetLevelMask
</UL>
<BR>[Calls]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appGaugeGetCurrentValue
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appGaugeGetCurrentMode
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParGetCocpPar
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProtectGetLevelMask
</UL>
<BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProtectCocp_L3
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProtectCocp_L2
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProtectCocp_L1
</UL>

<P><STRONG><a name="[368]"></a>apiProtectCocpOpen</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, apiprotectcocp.o(i.apiProtectCocpOpen))
<BR><BR>[Called By]<UL><LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProtectOpen
</UL>

<P><STRONG><a name="[370]"></a>apiProtectCotpGetFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, apiprotectcotp.o(i.apiProtectCotpGetFlag))
<BR><BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciNotificationCotpFlag
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkCOTP_L3
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkCOTP_L2
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkCOTP_L1
</UL>

<P><STRONG><a name="[2f6]"></a>apiProtectCotpHandler</STRONG> (Thumb, 414 bytes, Stack size 64 bytes, apiprotectcotp.o(i.apiProtectCotpHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = apiProtectCotpHandler &rArr; appProtectGetLevelMask
</UL>
<BR>[Calls]<UL><LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParGetNtcNumber
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParGetCotpProtectPar
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalAfeGetNtcAdc
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProtectIsUnderTemperter
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProtectIsOverTemperter
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProtectGetLevelMask
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProtectCotp_L3
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProtectCotp_L2
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProtectCotp_L1
</UL>

<P><STRONG><a name="[2fc]"></a>apiProtectCotpOpen</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, apiprotectcotp.o(i.apiProtectCotpOpen))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = apiProtectCotpOpen
</UL>
<BR>[Calls]<UL><LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cotpProtectIni
</UL>
<BR>[Called By]<UL><LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProtectOpen
</UL>

<P><STRONG><a name="[371]"></a>apiProtectCutpGetFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, apiprotectcutp.o(i.apiProtectCutpGetFlag))
<BR><BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciNotificationCutpFlag
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkCUTP_L3
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkCUTP_L2
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkCUTP_L1
</UL>

<P><STRONG><a name="[2fe]"></a>apiProtectCutpHandler</STRONG> (Thumb, 414 bytes, Stack size 64 bytes, apiprotectcutp.o(i.apiProtectCutpHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = apiProtectCutpHandler &rArr; appProtectGetLevelMask
</UL>
<BR>[Calls]<UL><LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParGetCutpProtectPar
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParGetNtcNumber
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalAfeGetNtcAdc
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProtectIsUnderTemperter
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProtectIsOverTemperter
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProtectGetLevelMask
</UL>
<BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProtectCutp_L3
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProtectCutp_L2
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProtectCutp_L1
</UL>

<P><STRONG><a name="[300]"></a>apiProtectCutpOpen</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, apiprotectcutp.o(i.apiProtectCutpOpen))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = apiProtectCutpOpen
</UL>
<BR>[Calls]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cutpProtectIni
</UL>
<BR>[Called By]<UL><LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProtectOpen
</UL>

<P><STRONG><a name="[398]"></a>apiProtectDocpGetFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, apiprotectdocp.o(i.apiProtectDocpGetFlag))
<BR><BR>[Called By]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkCOCP_DOCP_Flag
</UL>

<P><STRONG><a name="[302]"></a>apiProtectDocpHandler</STRONG> (Thumb, 322 bytes, Stack size 56 bytes, apiprotectdocp.o(i.apiProtectDocpHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = apiProtectDocpHandler &rArr; appProtectGetLevelMask
</UL>
<BR>[Calls]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appGaugeGetCurrentValue
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appGaugeGetCurrentMode
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParGetDocpPar
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProtectGetLevelMask
</UL>
<BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProtectDocp_L3
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProtectDocp_L2
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProtectDocp_L1
</UL>

<P><STRONG><a name="[369]"></a>apiProtectDocpOpen</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, apiprotectdocp.o(i.apiProtectDocpOpen))
<BR><BR>[Called By]<UL><LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProtectOpen
</UL>

<P><STRONG><a name="[372]"></a>apiProtectDotpGetFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, apiprotectdotp.o(i.apiProtectDotpGetFlag))
<BR><BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciNotificationDotpFlag
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkDOTP_L3
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkDOTP_L2
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkDOTP_L1
</UL>

<P><STRONG><a name="[303]"></a>apiProtectDotpHandler</STRONG> (Thumb, 414 bytes, Stack size 64 bytes, apiprotectdotp.o(i.apiProtectDotpHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = apiProtectDotpHandler &rArr; appProtectGetLevelMask
</UL>
<BR>[Calls]<UL><LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParGetDotpProtectPar
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParGetNtcNumber
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalAfeGetNtcAdc
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProtectIsUnderTemperter
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProtectIsOverTemperter
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProtectGetLevelMask
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProtectDotp_L3
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProtectDotp_L2
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProtectDotp_L1
</UL>

<P><STRONG><a name="[305]"></a>apiProtectDotpOpen</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, apiprotectdotp.o(i.apiProtectDotpOpen))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = apiProtectDotpOpen
</UL>
<BR>[Calls]<UL><LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dotpProtectIni
</UL>
<BR>[Called By]<UL><LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProtectOpen
</UL>

<P><STRONG><a name="[373]"></a>apiProtectDutpGetFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, apiprotectdutp.o(i.apiProtectDutpGetFlag))
<BR><BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciNotificationDutpFlag
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkDUTP_L3
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkDUTP_L2
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkDUTP_L1
</UL>

<P><STRONG><a name="[307]"></a>apiProtectDutpHandler</STRONG> (Thumb, 414 bytes, Stack size 64 bytes, apiprotectdutp.o(i.apiProtectDutpHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = apiProtectDutpHandler &rArr; appProtectGetLevelMask
</UL>
<BR>[Calls]<UL><LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParGetNtcNumber
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalAfeGetNtcAdc
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProtectIsUnderTemperter
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProtectIsOverTemperter
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProtectGetLevelMask
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParGetDutpProtectPar
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProtectDutp_L3
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProtectDutp_L2
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProtectDutp_L1
</UL>

<P><STRONG><a name="[376]"></a>apiProtectOvpGetFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, apiprotectovp.o(i.apiProtectOvpGetFlag))
<BR><BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciNotificationOvpFlag
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkOVP_L3
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkOVP_L2
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkOVP_L1
</UL>

<P><STRONG><a name="[309]"></a>apiProtectOvpHandler</STRONG> (Thumb, 398 bytes, Stack size 64 bytes, apiprotectovp.o(i.apiProtectOvpHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = apiProtectOvpHandler &rArr; appProtectGetLevelMask
</UL>
<BR>[Calls]<UL><LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;halAfeGetCellVoltage
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParGetCellNumber
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParGetOvpPar
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProtectGetLevelMask
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProtectOvp_L3
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProtectOvp_L2
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProtectOvp_L1
</UL>

<P><STRONG><a name="[30a]"></a>apiProtectOvpOpen</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, apiprotectovp.o(i.apiProtectOvpOpen))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = apiProtectOvpOpen &rArr; ovpProtectIni
</UL>
<BR>[Calls]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ovpProtectIni
</UL>
<BR>[Called By]<UL><LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProtectOpen
</UL>

<P><STRONG><a name="[3b6]"></a>apiProtectOvpPfClean</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, apiprotectovp.o(i.apiProtectOvpPfClean))
<BR><BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;davinciCanPfFlag
</UL>

<P><STRONG><a name="[3a7]"></a>apiProtectOvpPfGetFlag</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, apiprotectovp.o(i.apiProtectOvpPfGetFlag))
<BR><BR>[Called By]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkOtherFlag
</UL>

<P><STRONG><a name="[30c]"></a>apiProtectOvpPfHandler</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, apiprotectovp.o(i.apiProtectOvpPfHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = apiProtectOvpPfHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;halAfeGetMaxCellVoltage
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParGetOvpPfPar
</UL>
<BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProtectOvPf
</UL>

<P><STRONG><a name="[378]"></a>apiProtectUvpGetFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, apiprotectuvp.o(i.apiProtectUvpGetFlag))
<BR><BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciNotificationUvpFlag
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkUVP_L3
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkUVP_L2
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkUVP_L1
</UL>

<P><STRONG><a name="[30e]"></a>apiProtectUvpHandler</STRONG> (Thumb, 402 bytes, Stack size 64 bytes, apiprotectuvp.o(i.apiProtectUvpHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = apiProtectUvpHandler &rArr; appProtectGetLevelMask
</UL>
<BR>[Calls]<UL><LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;halAfeGetCellVoltage
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParGetCellNumber
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParGetUvpPar
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProtectGetLevelMask
</UL>
<BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProtectUvp_L3
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProtectUvp_L2
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProtectUvp_L1
</UL>

<P><STRONG><a name="[30f]"></a>apiProtectUvpOpen</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, apiprotectuvp.o(i.apiProtectUvpOpen))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = apiProtectUvpOpen &rArr; uvpProtectIni
</UL>
<BR>[Calls]<UL><LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uvpProtectIni
</UL>
<BR>[Called By]<UL><LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProtectOpen
</UL>

<P><STRONG><a name="[3b7]"></a>apiProtectUvpPfClean</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, apiprotectuvp.o(i.apiProtectUvpPfClean))
<BR><BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;davinciCanPfFlag
</UL>

<P><STRONG><a name="[3a8]"></a>apiProtectUvpPfGetFlag</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, apiprotectuvp.o(i.apiProtectUvpPfGetFlag))
<BR><BR>[Called By]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkOtherFlag
</UL>

<P><STRONG><a name="[311]"></a>apiProtectUvpPfHandler</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, apiprotectuvp.o(i.apiProtectUvpPfHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = apiProtectUvpPfHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;halAfeGetMinCellVoltage
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParGetUvpPfPar
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProtectUvpPf
</UL>

<P><STRONG><a name="[313]"></a>apiRamLoadPowerOffDateTime</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, apiramdata.o(i.apiRamLoadPowerOffDateTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = apiRamLoadPowerOffDateTime
</UL>
<BR>[Calls]<UL><LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTCEx_BKUPRead
</UL>
<BR>[Called By]<UL><LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProjectOpen
</UL>

<P><STRONG><a name="[315]"></a>apiRamLoadReleaseTime</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, apiramdata.o(i.apiRamLoadReleaseTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = apiRamLoadReleaseTime &rArr; HalRtcGetSmpUnixTime &rArr; HalRtcGetDateTime &rArr; HAL_RTC_GetTime
</UL>
<BR>[Calls]<UL><LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalRtcGetSmpUnixTime
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTCEx_BKUPRead
</UL>
<BR>[Called By]<UL><LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProjectOpen
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setupIdleTime
</UL>

<P><STRONG><a name="[316]"></a>apiRamLoadRtcMagicCode</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, apiramdata.o(i.apiRamLoadRtcMagicCode))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = apiRamLoadRtcMagicCode
</UL>
<BR>[Calls]<UL><LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTCEx_BKUPRead
</UL>
<BR>[Called By]<UL><LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProjectOpen
</UL>

<P><STRONG><a name="[317]"></a>apiRamLoadSoc</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, apiramdata.o(i.apiRamLoadSoc))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = apiRamLoadSoc
</UL>
<BR>[Calls]<UL><LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTCEx_BKUPRead
</UL>
<BR>[Called By]<UL><LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;baseInfoIni
</UL>

<P><STRONG><a name="[318]"></a>apiRamLoadTotalDisChargeCount</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, apiramdata.o(i.apiRamLoadTotalDisChargeCount))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = apiRamLoadTotalDisChargeCount
</UL>
<BR>[Calls]<UL><LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTCEx_BKUPRead
</UL>
<BR>[Called By]<UL><LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProjectOpen
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loadTotalDischargeCountFromRam
</UL>

<P><STRONG><a name="[360]"></a>apiRamOpen</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, apiramdata.o(i.apiRamOpen))
<BR><BR>[Called By]<UL><LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProjectOpen
</UL>

<P><STRONG><a name="[319]"></a>apiRamSaveLastChgDhgTime</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, apiramdata.o(i.apiRamSaveLastChgDhgTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = apiRamSaveLastChgDhgTime &rArr; HalRtcGetSmpUnixTime &rArr; HalRtcGetDateTime &rArr; HAL_RTC_GetTime
</UL>
<BR>[Calls]<UL><LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalRtcGetSmpUnixTime
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTCEx_BKUPWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scuGaugeUnReleasedMode
</UL>

<P><STRONG><a name="[31b]"></a>apiRamSaveRtcDateTime</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, apiramdata.o(i.apiRamSaveRtcDateTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = apiRamSaveRtcDateTime &rArr; HalRtcGetSmpUnixTime &rArr; HalRtcGetDateTime &rArr; HAL_RTC_GetTime
</UL>
<BR>[Calls]<UL><LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalRtcGetSmpUnixTime
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTCEx_BKUPWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProjectSwTimerHandler
</UL>

<P><STRONG><a name="[31c]"></a>apiRamSaveRtcMagicCode</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, apiramdata.o(i.apiRamSaveRtcMagicCode))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = apiRamSaveRtcMagicCode &rArr; HAL_RTCEx_BKUPWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTCEx_BKUPWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProjectOpen
</UL>

<P><STRONG><a name="[31d]"></a>apiRamSaveSoc</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, apiramdata.o(i.apiRamSaveSoc))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = apiRamSaveSoc &rArr; HAL_RTCEx_BKUPWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTCEx_BKUPWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gaugeSwTimerHandler
</UL>

<P><STRONG><a name="[31e]"></a>apiRamSaveTotalDisChargeCount</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, apiramdata.o(i.apiRamSaveTotalDisChargeCount))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = apiRamSaveTotalDisChargeCount &rArr; HAL_RTCEx_BKUPWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTCEx_BKUPWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appGaugeCleanCycleCount
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;saveTotalDischargeCountToRam
</UL>

<P><STRONG><a name="[31f]"></a>apiRelayControlMainRelayOff</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, apirelaycontrol.o(i.apiRelayControlMainRelayOff))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = apiRelayControlMainRelayOff
</UL>
<BR>[Calls]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;halBspPreDischargeRelayOff
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;halBspPostiveRelayOff
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;halBspNegtiveRelayOff
</UL>
<BR>[Called By]<UL><LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;relayOff
</UL>

<P><STRONG><a name="[320]"></a>apiRelayControlOpen</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, apirelaycontrol.o(i.apiRelayControlOpen))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = apiRelayControlOpen &rArr; LibSwTimerOpen &rArr; _LibRegisterAdd
</UL>
<BR>[Calls]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LibSwTimerOpen
</UL>
<BR>[Called By]<UL><LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProjectOpen
</UL>

<P><STRONG><a name="[3b0]"></a>apiRelayControlSetMasterTurnOnFlag</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, apirelaycontrol.o(i.apiRelayControlSetMasterTurnOnFlag))
<BR><BR>[Called By]<UL><LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkWhichScuRelayOn
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;davinciCanRelayOn
</UL>

<P><STRONG><a name="[321]"></a>apiScuTempGetTemperature</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, apiscutemp.o(i.apiScuTempGetTemperature))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = apiScuTempGetTemperature &rArr; cvtMcuNtcTemp &rArr; LibNtcVoltageToTemperature &rArr; LibNtcRToTemperature &rArr; __hardfp_log &rArr; __kernel_poly &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cvtMcuNtcTemp
</UL>
<BR>[Called By]<UL><LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notifyBaseScuTemp
</UL>

<P><STRONG><a name="[323]"></a>apiScuTempOpen</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, apiscutemp.o(i.apiScuTempOpen))
<BR><BR>[Stack]<UL><LI>Max Depth = 720<LI>Call Chain = apiScuTempOpen &rArr; smp_adc_adc_para_init &rArr; HAL_ADC_Init &rArr; HAL_ADC_MspInit &rArr; HalBspSetGpio &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_adc_adc_para_init
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LibSwTimerOpen
</UL>
<BR>[Called By]<UL><LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProjectOpen
</UL>

<P><STRONG><a name="[393]"></a>apiSignalFeedbackGetStatus</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, apisignalfeedback.o(i.apiSignalFeedbackGetStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = apiSignalFeedbackGetStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getOdInSignalDuty
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;buttonSwTimerHandler
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkFbSignal
</UL>

<P><STRONG><a name="[325]"></a>apiSignalFeedbackOpen</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, apisignalfeedback.o(i.apiSignalFeedbackOpen))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = apiSignalFeedbackOpen &rArr; LibSwTimerOpen &rArr; _LibRegisterAdd
</UL>
<BR>[Calls]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LibSwTimerOpen
</UL>
<BR>[Called By]<UL><LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProjectOpen
</UL>

<P><STRONG><a name="[19d]"></a>apiSysParGetAfeCommTime</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, apisyspar.o(i.apiSysParGetAfeCommTime))
<BR><BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterAfeCommunication
</UL>

<P><STRONG><a name="[1a1]"></a>apiSysParGetBalanceChg</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, apisyspar.o(i.apiSysParGetBalanceChg))
<BR><BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appBalanceCheck
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterBalanceChg
</UL>

<P><STRONG><a name="[1a3]"></a>apiSysParGetBalanceDhg</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, apisyspar.o(i.apiSysParGetBalanceDhg))
<BR><BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterBalanceDhg
</UL>

<P><STRONG><a name="[1a5]"></a>apiSysParGetBalanceDuty</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, apisyspar.o(i.apiSysParGetBalanceDuty))
<BR><BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appBalanceSwTimerHandler
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appBalanceCheck
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterBalanceDuty
</UL>

<P><STRONG><a name="[1a7]"></a>apiSysParGetBalanceRlx</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, apisyspar.o(i.apiSysParGetBalanceRlx))
<BR><BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appBalanceCheck
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterBalanceRlx
</UL>

<P><STRONG><a name="[1ed]"></a>apiSysParGetBmuNumber</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, apisyspar.o(i.apiSysParGetBmuNumber))
<BR><BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setupPhysicalBalancePosition
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getPhysicalCellPosition
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciParameterBmuNumber
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DecodeNtcVoltageByNtcFlag
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DecodeCellVoltageByCellFlag
</UL>

<P><STRONG><a name="[1f0]"></a>apiSysParGetCellFlag</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, apisyspar.o(i.apiSysParGetCellFlag))
<BR><BR>[Called By]<UL><LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getPhysicalCellPosition
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciParameterCellNtcFlag
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DecodeCellVoltageByCellFlag
</UL>

<P><STRONG><a name="[1f9]"></a>apiSysParGetCellNumber</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, apisyspar.o(i.apiSysParGetCellNumber))
<BR><BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setupPhysicalBalancePosition
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appBalanceCheckSet
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appBalanceCheckRelease
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appBalanceCheckEvent
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAverageCellVoltage
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiProtectUvpHandler
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiProtectOvpHandler
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciNotificationUvpFlag
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciNotificationOvpFlag
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciNotificationCellVoltage
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;halAfeUpdateMinMaxCellVoltage
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkUVP_L3
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkUVP_L2
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkUVP_L1
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkOVP_L3
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkOVP_L2
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkOVP_L1
</UL>

<P><STRONG><a name="[3b4]"></a>apiSysParGetChecksum</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, apisyspar.o(i.apiSysParGetChecksum))
<BR><BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;davinciCanChecksumn
</UL>

<P><STRONG><a name="[1a9]"></a>apiSysParGetCocpPar</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, apisyspar.o(i.apiSysParGetCocpPar))
<BR><BR>[Called By]<UL><LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiProtectCocpHandler
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterCocp
</UL>

<P><STRONG><a name="[1ab]"></a>apiSysParGetCotpPar</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, apisyspar.o(i.apiSysParGetCotpPar))
<BR><BR>[Called By]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterCotp
</UL>

<P><STRONG><a name="[2f7]"></a>apiSysParGetCotpProtectPar</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, apisyspar.o(i.apiSysParGetCotpProtectPar))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = apiSysParGetCotpProtectPar
</UL>
<BR>[Called By]<UL><LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiProtectCotpHandler
</UL>

<P><STRONG><a name="[1b0]"></a>apiSysParGetCutpPar</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, apisyspar.o(i.apiSysParGetCutpPar))
<BR><BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterCutp
</UL>

<P><STRONG><a name="[2ff]"></a>apiSysParGetCutpProtectPar</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, apisyspar.o(i.apiSysParGetCutpProtectPar))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = apiSysParGetCutpProtectPar
</UL>
<BR>[Called By]<UL><LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiProtectCutpHandler
</UL>

<P><STRONG><a name="[38f]"></a>apiSysParGetCycleCount</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, apisyspar.o(i.apiSysParGetCycleCount))
<BR><BR>[Called By]<UL><LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;baseInfoIni
</UL>

<P><STRONG><a name="[1b2]"></a>apiSysParGetDesignedCapacity</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, apisyspar.o(i.apiSysParGetDesignedCapacity))
<BR><BR>[Called By]<UL><LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gaugeCheckCycleCount
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appScuGaugeUpdateQmax
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appGaugeGetSOH
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gaugeReleaseMode
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterDesignedCapacity
</UL>

<P><STRONG><a name="[1b4]"></a>apiSysParGetDocpPar</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, apisyspar.o(i.apiSysParGetDocpPar))
<BR><BR>[Called By]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiProtectDocpHandler
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterDocp
</UL>

<P><STRONG><a name="[1b6]"></a>apiSysParGetDotpPar</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, apisyspar.o(i.apiSysParGetDotpPar))
<BR><BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterDotp
</UL>

<P><STRONG><a name="[304]"></a>apiSysParGetDotpProtectPar</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, apisyspar.o(i.apiSysParGetDotpProtectPar))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = apiSysParGetDotpProtectPar
</UL>
<BR>[Called By]<UL><LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiProtectDotpHandler
</UL>

<P><STRONG><a name="[1b8]"></a>apiSysParGetDtpPar</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, apisyspar.o(i.apiSysParGetDtpPar))
<BR><BR>[Called By]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterDtp
</UL>

<P><STRONG><a name="[1ba]"></a>apiSysParGetDutpPar</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, apisyspar.o(i.apiSysParGetDutpPar))
<BR><BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterDutp
</UL>

<P><STRONG><a name="[308]"></a>apiSysParGetDutpProtectPar</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, apisyspar.o(i.apiSysParGetDutpProtectPar))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = apiSysParGetDutpProtectPar
</UL>
<BR>[Called By]<UL><LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiProtectDutpHandler
</UL>

<P><STRONG><a name="[1bc]"></a>apiSysParGetFlatVoltage</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, apisyspar.o(i.apiSysParGetFlatVoltage))
<BR><BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterFlatVoltage
</UL>

<P><STRONG><a name="[1be]"></a>apiSysParGetFullChargeCondition</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, apisyspar.o(i.apiSysParGetFullChargeCondition))
<BR><BR>[Called By]<UL><LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setupFullChargeCondition
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterFullChargeCondition
</UL>

<P><STRONG><a name="[1bf]"></a>apiSysParGetFwVersion</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, apisyspar.o(i.apiSysParGetFwVersion))
<BR><BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterFwVersion
</UL>

<P><STRONG><a name="[1c1]"></a>apiSysParGetHwVersion</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, apisyspar.o(i.apiSysParGetHwVersion))
<BR><BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterHwVersion
</UL>

<P><STRONG><a name="[1c3]"></a>apiSysParGetInsulationResistance</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, apisyspar.o(i.apiSysParGetInsulationResistance))
<BR><BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterInsulationResistance
</UL>

<P><STRONG><a name="[3f2]"></a>apiSysParGetMaxFlatVoltage</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, apisyspar.o(i.apiSysParGetMaxFlatVoltage))
<BR><BR>[Called By]<UL><LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getSocTableUseAvgCellVoltage
</UL>

<P><STRONG><a name="[1e3]"></a>apiSysParGetMinChargeCurrentValue</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, apisyspar.o(i.apiSysParGetMinChargeCurrentValue))
<BR><BR>[Called By]<UL><LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gaugeUpdateCurrentMode
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterZeroCurrent
</UL>

<P><STRONG><a name="[3f1]"></a>apiSysParGetMinFlatVoltage</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, apisyspar.o(i.apiSysParGetMinFlatVoltage))
<BR><BR>[Called By]<UL><LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getSocTableUseAvgCellVoltage
</UL>

<P><STRONG><a name="[1c4]"></a>apiSysParGetNotwMessageString</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, apisyspar.o(i.apiSysParGetNotwMessageString))
<BR><BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterNoteMessage
</UL>

<P><STRONG><a name="[1f1]"></a>apiSysParGetNtcFlag</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, apisyspar.o(i.apiSysParGetNtcFlag))
<BR><BR>[Called By]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciParameterCellNtcFlag
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DecodeNtcVoltageByNtcFlag
</UL>

<P><STRONG><a name="[2fb]"></a>apiSysParGetNtcNumber</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, apisyspar.o(i.apiSysParGetNtcNumber))
<BR><BR>[Called By]<UL><LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiProtectDutpHandler
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiProtectDotpHandler
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiProtectCutpHandler
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiProtectCotpHandler
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciNotificationNtcVoltage
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciNotificationDutpFlag
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciNotificationDotpFlag
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciNotificationCutpFlag
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciNotificationCotpFlag
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;halAfeUpdateMinMaxNtcTempVoltage
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkDUTP_L3
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkDUTP_L2
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkDUTP_L1
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkDOTP_L3
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkDOTP_L2
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkDOTP_L1
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkCUTP_L3
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkCUTP_L2
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkCUTP_L1
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkCOTP_L3
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkCOTP_L2
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkCOTP_L1
</UL>

<P><STRONG><a name="[1c8]"></a>apiSysParGetOcvTable</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, apisyspar.o(i.apiSysParGetOcvTable))
<BR><BR>[Called By]<UL><LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setupOcvTable
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterOcvTable
</UL>

<P><STRONG><a name="[1ca]"></a>apiSysParGetOvpPar</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, apisyspar.o(i.apiSysParGetOvpPar))
<BR><BR>[Called By]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiProtectOvpHandler
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterOvp
</UL>

<P><STRONG><a name="[1cb]"></a>apiSysParGetOvpPfPar</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, apisyspar.o(i.apiSysParGetOvpPfPar))
<BR><BR>[Called By]<UL><LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiProtectOvpPfHandler
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterPF
</UL>

<P><STRONG><a name="[1d0]"></a>apiSysParGetPreDischargeTime</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, apisyspar.o(i.apiSysParGetPreDischargeTime))
<BR><BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterPreDischargeTime
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;turnOnRelayProcess
</UL>

<P><STRONG><a name="[38d]"></a>apiSysParGetQmax</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, apisyspar.o(i.apiSysParGetQmax))
<BR><BR>[Called By]<UL><LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;baseInfoIni
</UL>

<P><STRONG><a name="[38e]"></a>apiSysParGetQmaxUpdateTimes</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, apisyspar.o(i.apiSysParGetQmaxUpdateTimes))
<BR><BR>[Called By]<UL><LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;baseInfoIni
</UL>

<P><STRONG><a name="[1d7]"></a>apiSysParGetRaTable</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, apisyspar.o(i.apiSysParGetRaTable))
<BR><BR>[Called By]<UL><LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setupRaTable
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterRaTable
</UL>

<P><STRONG><a name="[1d9]"></a>apiSysParGetRelayOnDiffVoltage</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, apisyspar.o(i.apiSysParGetRelayOnDiffVoltage))
<BR><BR>[Called By]<UL><LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkWhichScuRelayOn
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterRelayOnDiffVoltage
</UL>

<P><STRONG><a name="[343]"></a>apiSysParGetScuId</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, apisyspar.o(i.apiSysParGetScuId))
<BR><BR>[Called By]<UL><LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appBmsOpen
</UL>

<P><STRONG><a name="[1db]"></a>apiSysParGetTerminateVoltage</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, apisyspar.o(i.apiSysParGetTerminateVoltage))
<BR><BR>[Called By]<UL><LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;baseInfoIni
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterTerminateVoltage
</UL>

<P><STRONG><a name="[1dd]"></a>apiSysParGetUvpPar</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, apisyspar.o(i.apiSysParGetUvpPar))
<BR><BR>[Called By]<UL><LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiProtectUvpHandler
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterUvp
</UL>

<P><STRONG><a name="[1cc]"></a>apiSysParGetUvpPfPar</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, apisyspar.o(i.apiSysParGetUvpPfPar))
<BR><BR>[Called By]<UL><LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiProtectUvpPfHandler
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterPF
</UL>

<P><STRONG><a name="[1e2]"></a>apiSysParGetZeroCurrentValue</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, apisyspar.o(i.apiSysParGetZeroCurrentValue))
<BR><BR>[Called By]<UL><LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gaugeUpdateCurrentMode
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterZeroCurrent
</UL>

<P><STRONG><a name="[420]"></a>apiSysParIsOvpPfSet</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, apisyspar.o(i.apiSysParIsOvpPfSet))
<BR><BR>[Called By]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ovpProtectIni
</UL>

<P><STRONG><a name="[44c]"></a>apiSysParIsUvpPfSet</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, apisyspar.o(i.apiSysParIsUvpPfSet))
<BR><BR>[Called By]<UL><LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uvpProtectIni
</UL>

<P><STRONG><a name="[326]"></a>apiSysParOpen</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, apisyspar.o(i.apiSysParOpen))
<BR><BR>[Stack]<UL><LI>Max Depth = 2612<LI>Call Chain = apiSysParOpen &rArr; loadSysPar &rArr; appSerialCanDavinciSendTextMessage &rArr; appSerialCanDavinciPutPkgToCanFifo &rArr; smp_can_put &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateNtcNumber
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateCellNumber
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sysParSetDefaultRomValue
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setSysParRamValue
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setCalParRamValue
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setBatteryInfoDefaultValue
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loadSysPar
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loadScuIdPar
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loadCalPar
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loadBatteryInfoPar
</UL>
<BR>[Called By]<UL><LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProjectOpen
</UL>

<P><STRONG><a name="[330]"></a>apiSysParOvpPfClean</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, apisyspar.o(i.apiSysParOvpPfClean))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = apiSysParOvpPfClean &rArr; resetBatteryInfoIdleCount &rArr; LibSwTimerOpen &rArr; _LibRegisterAdd
</UL>
<BR>[Calls]<UL><LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resetBatteryInfoIdleCount
</UL>
<BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;davinciCanPfFlag
</UL>

<P><STRONG><a name="[332]"></a>apiSysParOvpPfSet</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, apisyspar.o(i.apiSysParOvpPfSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = apiSysParOvpPfSet &rArr; resetBatteryInfoIdleCount &rArr; LibSwTimerOpen &rArr; _LibRegisterAdd
</UL>
<BR>[Calls]<UL><LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resetBatteryInfoIdleCount
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protectEventHandler
</UL>

<P><STRONG><a name="[19e]"></a>apiSysParSetAfeCommTime</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, apisyspar.o(i.apiSysParSetAfeCommTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = apiSysParSetAfeCommTime &rArr; resetSysParIdleCount &rArr; LibSwTimerOpen &rArr; _LibRegisterAdd
</UL>
<BR>[Calls]<UL><LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resetSysParIdleCount
</UL>
<BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterAfeCommunication
</UL>

<P><STRONG><a name="[1a0]"></a>apiSysParSetBalanceChg</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, apisyspar.o(i.apiSysParSetBalanceChg))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = apiSysParSetBalanceChg &rArr; resetSysParIdleCount &rArr; LibSwTimerOpen &rArr; _LibRegisterAdd
</UL>
<BR>[Calls]<UL><LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resetSysParIdleCount
</UL>
<BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterBalanceChg
</UL>

<P><STRONG><a name="[1a2]"></a>apiSysParSetBalanceDhg</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, apisyspar.o(i.apiSysParSetBalanceDhg))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = apiSysParSetBalanceDhg &rArr; resetSysParIdleCount &rArr; LibSwTimerOpen &rArr; _LibRegisterAdd
</UL>
<BR>[Calls]<UL><LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resetSysParIdleCount
</UL>
<BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterBalanceDhg
</UL>

<P><STRONG><a name="[1a4]"></a>apiSysParSetBalanceDuty</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, apisyspar.o(i.apiSysParSetBalanceDuty))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = apiSysParSetBalanceDuty &rArr; resetSysParIdleCount &rArr; LibSwTimerOpen &rArr; _LibRegisterAdd
</UL>
<BR>[Calls]<UL><LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resetSysParIdleCount
</UL>
<BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterBalanceDuty
</UL>

<P><STRONG><a name="[1a6]"></a>apiSysParSetBalanceRlx</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, apisyspar.o(i.apiSysParSetBalanceRlx))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = apiSysParSetBalanceRlx &rArr; resetSysParIdleCount &rArr; LibSwTimerOpen &rArr; _LibRegisterAdd
</UL>
<BR>[Calls]<UL><LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resetSysParIdleCount
</UL>
<BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterBalanceRlx
</UL>

<P><STRONG><a name="[1ec]"></a>apiSysParSetBmuNumber</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, apisyspar.o(i.apiSysParSetBmuNumber))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = apiSysParSetBmuNumber &rArr; resetSysParIdleCount &rArr; LibSwTimerOpen &rArr; _LibRegisterAdd
</UL>
<BR>[Calls]<UL><LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resetSysParIdleCount
</UL>
<BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciParameterBmuNumber
</UL>

<P><STRONG><a name="[1ee]"></a>apiSysParSetCellFlag</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, apisyspar.o(i.apiSysParSetCellFlag))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = apiSysParSetCellFlag &rArr; resetSysParIdleCount &rArr; LibSwTimerOpen &rArr; _LibRegisterAdd
</UL>
<BR>[Calls]<UL><LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resetSysParIdleCount
</UL>
<BR>[Called By]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciParameterCellNtcFlag
</UL>

<P><STRONG><a name="[1a8]"></a>apiSysParSetCocpPar</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, apisyspar.o(i.apiSysParSetCocpPar))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = apiSysParSetCocpPar &rArr; resetSysParIdleCount &rArr; LibSwTimerOpen &rArr; _LibRegisterAdd
</UL>
<BR>[Calls]<UL><LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resetSysParIdleCount
</UL>
<BR>[Called By]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterCocp
</UL>

<P><STRONG><a name="[1aa]"></a>apiSysParSetCotpPar</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, apisyspar.o(i.apiSysParSetCotpPar))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = apiSysParSetCotpPar &rArr; resetSysParIdleCount &rArr; LibSwTimerOpen &rArr; _LibRegisterAdd
</UL>
<BR>[Calls]<UL><LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resetSysParIdleCount
</UL>
<BR>[Called By]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterCotp
</UL>

<P><STRONG><a name="[1af]"></a>apiSysParSetCutpPar</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, apisyspar.o(i.apiSysParSetCutpPar))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = apiSysParSetCutpPar &rArr; resetSysParIdleCount &rArr; LibSwTimerOpen &rArr; _LibRegisterAdd
</UL>
<BR>[Calls]<UL><LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resetSysParIdleCount
</UL>
<BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterCutp
</UL>

<P><STRONG><a name="[334]"></a>apiSysParSetCycleCount</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, apisyspar.o(i.apiSysParSetCycleCount))
<BR><BR>[Stack]<UL><LI>Max Depth = 372<LI>Call Chain = apiSysParSetCycleCount &rArr; appSerialCanDavinciSendTextMessage &rArr; appSerialCanDavinciPutPkgToCanFifo &rArr; smp_can_put &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciSendTextMessage
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resetBatteryInfoIdleCount
</UL>
<BR>[Called By]<UL><LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gaugeCheckCycleCount
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appGaugeCleanCycleCount
</UL>

<P><STRONG><a name="[1b1]"></a>apiSysParSetDesignedCapacity</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, apisyspar.o(i.apiSysParSetDesignedCapacity))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = apiSysParSetDesignedCapacity &rArr; resetSysParIdleCount &rArr; LibSwTimerOpen &rArr; _LibRegisterAdd
</UL>
<BR>[Calls]<UL><LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resetSysParIdleCount
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterDesignedCapacity
</UL>

<P><STRONG><a name="[1b3]"></a>apiSysParSetDocpPar</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, apisyspar.o(i.apiSysParSetDocpPar))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = apiSysParSetDocpPar &rArr; resetSysParIdleCount &rArr; LibSwTimerOpen &rArr; _LibRegisterAdd
</UL>
<BR>[Calls]<UL><LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resetSysParIdleCount
</UL>
<BR>[Called By]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterDocp
</UL>

<P><STRONG><a name="[1b5]"></a>apiSysParSetDotpPar</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, apisyspar.o(i.apiSysParSetDotpPar))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = apiSysParSetDotpPar &rArr; resetSysParIdleCount &rArr; LibSwTimerOpen &rArr; _LibRegisterAdd
</UL>
<BR>[Calls]<UL><LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resetSysParIdleCount
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterDotp
</UL>

<P><STRONG><a name="[1b7]"></a>apiSysParSetDtpPar</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, apisyspar.o(i.apiSysParSetDtpPar))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = apiSysParSetDtpPar &rArr; resetSysParIdleCount &rArr; LibSwTimerOpen &rArr; _LibRegisterAdd
</UL>
<BR>[Calls]<UL><LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resetSysParIdleCount
</UL>
<BR>[Called By]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterDtp
</UL>

<P><STRONG><a name="[1b9]"></a>apiSysParSetDutpPar</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, apisyspar.o(i.apiSysParSetDutpPar))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = apiSysParSetDutpPar &rArr; resetSysParIdleCount &rArr; LibSwTimerOpen &rArr; _LibRegisterAdd
</UL>
<BR>[Calls]<UL><LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resetSysParIdleCount
</UL>
<BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterDutp
</UL>

<P><STRONG><a name="[1bb]"></a>apiSysParSetFlatVoltage</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, apisyspar.o(i.apiSysParSetFlatVoltage))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = apiSysParSetFlatVoltage &rArr; resetSysParIdleCount &rArr; LibSwTimerOpen &rArr; _LibRegisterAdd
</UL>
<BR>[Calls]<UL><LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resetSysParIdleCount
</UL>
<BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterFlatVoltage
</UL>

<P><STRONG><a name="[1bd]"></a>apiSysParSetFullChargeCondition</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, apisyspar.o(i.apiSysParSetFullChargeCondition))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = apiSysParSetFullChargeCondition &rArr; resetSysParIdleCount &rArr; LibSwTimerOpen &rArr; _LibRegisterAdd
</UL>
<BR>[Calls]<UL><LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resetSysParIdleCount
</UL>
<BR>[Called By]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterFullChargeCondition
</UL>

<P><STRONG><a name="[1c0]"></a>apiSysParSetHwVersion</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, apisyspar.o(i.apiSysParSetHwVersion))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = apiSysParSetHwVersion &rArr; resetSysParIdleCount &rArr; LibSwTimerOpen &rArr; _LibRegisterAdd
</UL>
<BR>[Calls]<UL><LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resetSysParIdleCount
</UL>
<BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterHwVersion
</UL>

<P><STRONG><a name="[1c2]"></a>apiSysParSetInsulationResistance</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, apisyspar.o(i.apiSysParSetInsulationResistance))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = apiSysParSetInsulationResistance &rArr; resetSysParIdleCount &rArr; LibSwTimerOpen &rArr; _LibRegisterAdd
</UL>
<BR>[Calls]<UL><LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resetSysParIdleCount
</UL>
<BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterInsulationResistance
</UL>

<P><STRONG><a name="[1e1]"></a>apiSysParSetMinChargeCurrentValue</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, apisyspar.o(i.apiSysParSetMinChargeCurrentValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = apiSysParSetMinChargeCurrentValue &rArr; resetSysParIdleCount &rArr; LibSwTimerOpen &rArr; _LibRegisterAdd
</UL>
<BR>[Calls]<UL><LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resetSysParIdleCount
</UL>
<BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterZeroCurrent
</UL>

<P><STRONG><a name="[1c6]"></a>apiSysParSetNotwMessageString</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, apisyspar.o(i.apiSysParSetNotwMessageString))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = apiSysParSetNotwMessageString &rArr; resetSysParIdleCount &rArr; LibSwTimerOpen &rArr; _LibRegisterAdd
</UL>
<BR>[Calls]<UL><LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resetSysParIdleCount
</UL>
<BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterNoteMessage
</UL>

<P><STRONG><a name="[1ef]"></a>apiSysParSetNtcFlag</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, apisyspar.o(i.apiSysParSetNtcFlag))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = apiSysParSetNtcFlag &rArr; resetSysParIdleCount &rArr; LibSwTimerOpen &rArr; _LibRegisterAdd
</UL>
<BR>[Calls]<UL><LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resetSysParIdleCount
</UL>
<BR>[Called By]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciParameterCellNtcFlag
</UL>

<P><STRONG><a name="[1c7]"></a>apiSysParSetOcvTable</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, apisyspar.o(i.apiSysParSetOcvTable))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = apiSysParSetOcvTable &rArr; resetSysParIdleCount &rArr; LibSwTimerOpen &rArr; _LibRegisterAdd
</UL>
<BR>[Calls]<UL><LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resetSysParIdleCount
</UL>
<BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterOcvTable
</UL>

<P><STRONG><a name="[1c9]"></a>apiSysParSetOvpPar</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, apisyspar.o(i.apiSysParSetOvpPar))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = apiSysParSetOvpPar &rArr; resetSysParIdleCount &rArr; LibSwTimerOpen &rArr; _LibRegisterAdd
</UL>
<BR>[Calls]<UL><LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resetSysParIdleCount
</UL>
<BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterOvp
</UL>

<P><STRONG><a name="[1cd]"></a>apiSysParSetOvpPfPar</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, apisyspar.o(i.apiSysParSetOvpPfPar))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = apiSysParSetOvpPfPar &rArr; resetSysParIdleCount &rArr; LibSwTimerOpen &rArr; _LibRegisterAdd
</UL>
<BR>[Calls]<UL><LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resetSysParIdleCount
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterPF
</UL>

<P><STRONG><a name="[1cf]"></a>apiSysParSetPreDischargeTime</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, apisyspar.o(i.apiSysParSetPreDischargeTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = apiSysParSetPreDischargeTime &rArr; resetSysParIdleCount &rArr; LibSwTimerOpen &rArr; _LibRegisterAdd
</UL>
<BR>[Calls]<UL><LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resetSysParIdleCount
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterPreDischargeTime
</UL>

<P><STRONG><a name="[1d2]"></a>apiSysParSetQmax</STRONG> (Thumb, 34 bytes, Stack size 112 bytes, apisyspar.o(i.apiSysParSetQmax))
<BR><BR>[Stack]<UL><LI>Max Depth = 476<LI>Call Chain = apiSysParSetQmax &rArr; appSerialCanDavinciSendTextMessage &rArr; appSerialCanDavinciPutPkgToCanFifo &rArr; smp_can_put &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciSendTextMessage
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resetBatteryInfoIdleCount
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appScuGaugeUpdateQmax
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterQmax
</UL>

<P><STRONG><a name="[335]"></a>apiSysParSetQmaxUpdateTimes</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, apisyspar.o(i.apiSysParSetQmaxUpdateTimes))
<BR><BR>[Stack]<UL><LI>Max Depth = 372<LI>Call Chain = apiSysParSetQmaxUpdateTimes &rArr; appSerialCanDavinciSendTextMessage &rArr; appSerialCanDavinciPutPkgToCanFifo &rArr; smp_can_put &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciSendTextMessage
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resetBatteryInfoIdleCount
</UL>
<BR>[Called By]<UL><LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appScuGaugeUpdateQmax
</UL>

<P><STRONG><a name="[1d6]"></a>apiSysParSetRaTable</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, apisyspar.o(i.apiSysParSetRaTable))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = apiSysParSetRaTable &rArr; resetSysParIdleCount &rArr; LibSwTimerOpen &rArr; _LibRegisterAdd
</UL>
<BR>[Calls]<UL><LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resetSysParIdleCount
</UL>
<BR>[Called By]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterRaTable
</UL>

<P><STRONG><a name="[1d8]"></a>apiSysParSetRelayOnDiffVoltage</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, apisyspar.o(i.apiSysParSetRelayOnDiffVoltage))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = apiSysParSetRelayOnDiffVoltage &rArr; resetSysParIdleCount &rArr; LibSwTimerOpen &rArr; _LibRegisterAdd
</UL>
<BR>[Calls]<UL><LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resetSysParIdleCount
</UL>
<BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterRelayOnDiffVoltage
</UL>

<P><STRONG><a name="[1da]"></a>apiSysParSetTerminateVoltage</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, apisyspar.o(i.apiSysParSetTerminateVoltage))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = apiSysParSetTerminateVoltage &rArr; resetSysParIdleCount &rArr; LibSwTimerOpen &rArr; _LibRegisterAdd
</UL>
<BR>[Calls]<UL><LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resetSysParIdleCount
</UL>
<BR>[Called By]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterTerminateVoltage
</UL>

<P><STRONG><a name="[1dc]"></a>apiSysParSetUvpPar</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, apisyspar.o(i.apiSysParSetUvpPar))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = apiSysParSetUvpPar &rArr; resetSysParIdleCount &rArr; LibSwTimerOpen &rArr; _LibRegisterAdd
</UL>
<BR>[Calls]<UL><LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resetSysParIdleCount
</UL>
<BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterUvp
</UL>

<P><STRONG><a name="[1ce]"></a>apiSysParSetUvpPfPar</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, apisyspar.o(i.apiSysParSetUvpPfPar))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = apiSysParSetUvpPfPar &rArr; resetSysParIdleCount &rArr; LibSwTimerOpen &rArr; _LibRegisterAdd
</UL>
<BR>[Calls]<UL><LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resetSysParIdleCount
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterPF
</UL>

<P><STRONG><a name="[1e0]"></a>apiSysParSetZeroCurrentValue</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, apisyspar.o(i.apiSysParSetZeroCurrentValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = apiSysParSetZeroCurrentValue &rArr; resetSysParIdleCount &rArr; LibSwTimerOpen &rArr; _LibRegisterAdd
</UL>
<BR>[Calls]<UL><LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resetSysParIdleCount
</UL>
<BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterZeroCurrent
</UL>

<P><STRONG><a name="[336]"></a>apiSysParUvpPfClean</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, apisyspar.o(i.apiSysParUvpPfClean))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = apiSysParUvpPfClean &rArr; resetBatteryInfoIdleCount &rArr; LibSwTimerOpen &rArr; _LibRegisterAdd
</UL>
<BR>[Calls]<UL><LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resetBatteryInfoIdleCount
</UL>
<BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;davinciCanPfFlag
</UL>

<P><STRONG><a name="[337]"></a>apiSysParUvpPfSet</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, apisyspar.o(i.apiSysParUvpPfSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = apiSysParUvpPfSet &rArr; resetBatteryInfoIdleCount &rArr; LibSwTimerOpen &rArr; _LibRegisterAdd
</UL>
<BR>[Calls]<UL><LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resetBatteryInfoIdleCount
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protectEventHandler
</UL>

<P><STRONG><a name="[3aa]"></a>apiSystemFlagGetFlag1</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, apisystemflag.o(i.apiSystemFlagGetFlag1))
<BR><BR>[Called By]<UL><LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;putSelfDataToBmsBuffer
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notifyBaseSystemFlag
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkRelayOn
</UL>

<P><STRONG><a name="[3ab]"></a>apiSystemFlagGetFlag2</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, apisystemflag.o(i.apiSystemFlagGetFlag2))
<BR><BR>[Called By]<UL><LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;putSelfDataToBmsBuffer
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notifyBaseSystemFlag
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkRelayOn
</UL>

<P><STRONG><a name="[338]"></a>apiSystemFlagOpen</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, apisystemflag.o(i.apiSystemFlagOpen))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = apiSystemFlagOpen &rArr; LibSwTimerOpen &rArr; _LibRegisterAdd
</UL>
<BR>[Calls]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LibSwTimerOpen
</UL>
<BR>[Called By]<UL><LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProjectOpen
</UL>

<P><STRONG><a name="[377]"></a>appBalanceIsBalanceSet</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, appbalance.o(i.appBalanceIsBalanceSet))
<BR><BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciNotificationOvpFlag
</UL>

<P><STRONG><a name="[33e]"></a>appBalanceOpen</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, appbalance.o(i.appBalanceOpen))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = appBalanceOpen &rArr; LibSwTimerOpen &rArr; _LibRegisterAdd
</UL>
<BR>[Calls]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LibSwTimerOpen
</UL>
<BR>[Called By]<UL><LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProjectOpen
</UL>

<P><STRONG><a name="[1e8]"></a>appBmsAssignScuId</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, appbms.o(i.appBmsAssignScuId))
<BR><BR>[Stack]<UL><LI>Max Depth = 396<LI>Call Chain = appBmsAssignScuId &rArr; saveScuIdPar &rArr; appSerialCanDavinciSendTextMessage &rArr; appSerialCanDavinciPutPkgToCanFifo &rArr; smp_can_put &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;saveScuIdPar
</UL>
<BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCommonSetScuId
</UL>

<P><STRONG><a name="[1eb]"></a>appBmsEnterScuIdAssignMode</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, appbms.o(i.appBmsEnterScuIdAssignMode))
<BR><BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkOdInSwTimerHandler
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCommonStopScuIdRequest
</UL>

<P><STRONG><a name="[1ea]"></a>appBmsExitScuIdRequestMode</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, appbms.o(i.appBmsExitScuIdRequestMode))
<BR><BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkOdInSwTimerHandler
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCommonStopScuIdRequest
</UL>

<P><STRONG><a name="[1e5]"></a>appBmsGetScuId</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, appbms.o(i.appBmsGetScuId))
<BR><BR>[Called By]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProjectGetScuId
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCommonStopScuIdRequest
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCommonStopScuIdAssign
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCommonRequestScuId
</UL>

<P><STRONG><a name="[1e4]"></a>appBmsIsInAssignIdMode</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, appbms.o(i.appBmsIsInAssignIdMode))
<BR><BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCommonRequestScuId
</UL>

<P><STRONG><a name="[1e7]"></a>appBmsIsInScuIdRequestMode</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, appbms.o(i.appBmsIsInScuIdRequestMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = appBmsIsInScuIdRequestMode
</UL>
<BR>[Calls]<UL><LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getOdInMode
</UL>
<BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCommonSetScuId
</UL>

<P><STRONG><a name="[3a6]"></a>appBmsIsMaster</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, appbms.o(i.appBmsIsMaster))
<BR><BR>[Called By]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkOtherFlag
</UL>

<P><STRONG><a name="[375]"></a>appBmsIsScudIdReady</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, appbms.o(i.appBmsIsScudIdReady))
<BR><BR>[Called By]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciSendTextMessage
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciNotificationHandler
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkOtherFlag
</UL>

<P><STRONG><a name="[342]"></a>appBmsOpen</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, appbms.o(i.appBmsOpen))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = appBmsOpen &rArr; LibSwTimerOpen &rArr; _LibRegisterAdd
</UL>
<BR>[Calls]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LibSwTimerOpen
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParGetScuId
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProjectOpen
</UL>

<P><STRONG><a name="[423]"></a>appBmsRcvScuIdBrocast</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, appbms.o(i.appBmsRcvScuIdBrocast))
<BR><BR>[Called By]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scuIdBrocast
</UL>

<P><STRONG><a name="[1e6]"></a>appBmsResetScuId</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, appbms.o(i.appBmsResetScuId))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = appBmsResetScuId &rArr; LibSwTimerClose &rArr; _LibRegisterRm
</UL>
<BR>[Calls]<UL><LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LibSwTimerClose
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCommonResetScuId
</UL>

<P><STRONG><a name="[344]"></a>appBmsSetScuCurrent</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, appbms.o(i.appBmsSetScuCurrent))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = appBmsSetScuCurrent &rArr; updateScuIdleCount
</UL>
<BR>[Calls]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateScuIdleCount
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appBmsIsValidScuid
</UL>
<BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scuCurrent
</UL>

<P><STRONG><a name="[347]"></a>appBmsSetScuSystemFlag</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, appbms.o(i.appBmsSetScuSystemFlag))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = appBmsSetScuSystemFlag &rArr; updateScuIdleCount
</UL>
<BR>[Calls]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateScuIdleCount
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appBmsIsValidScuid
</UL>
<BR>[Called By]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scuSystemFlag
</UL>

<P><STRONG><a name="[348]"></a>appBmsSetScuVbat</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, appbms.o(i.appBmsSetScuVbat))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = appBmsSetScuVbat &rArr; updateScuIdleCount
</UL>
<BR>[Calls]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateScuIdleCount
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appBmsIsValidScuid
</UL>
<BR>[Called By]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scuVbat
</UL>

<P><STRONG><a name="[1e9]"></a>appBmsStopOutputAssignIdSignal</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, appbms.o(i.appBmsStopOutputAssignIdSignal))
<BR><BR>[Calls]<UL><LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalBspOdOutCtrl
</UL>
<BR>[Called By]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCommonStopScuIdAssign
</UL>

<P><STRONG><a name="[34a]"></a>appButtonOpen</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, appbutton.o(i.appButtonOpen))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = appButtonOpen &rArr; LibSwTimerOpen &rArr; _LibRegisterAdd
</UL>
<BR>[Calls]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LibSwTimerOpen
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LibRegisterAdd
</UL>
<BR>[Called By]<UL><LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProjectOpen
</UL>

<P><STRONG><a name="[17f]"></a>appCurrDebug</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, apisyspar.o(i.appCurrDebug))
<BR><BR>[Calls]<UL><LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doCalibration
</UL>
<BR>[Called By]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanDebugCurrentAdc
</UL>

<P><STRONG><a name="[34c]"></a>appGaugeCleanCycleCount</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, appgauge.o(i.appGaugeCleanCycleCount))
<BR><BR>[Stack]<UL><LI>Max Depth = 380<LI>Call Chain = appGaugeCleanCycleCount &rArr; apiSysParSetCycleCount &rArr; appSerialCanDavinciSendTextMessage &rArr; appSerialCanDavinciPutPkgToCanFifo &rArr; smp_can_put &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParSetCycleCount
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiRamSaveTotalDisChargeCount
</UL>
<BR>[Called By]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;davinciCanCleanData
</UL>

<P><STRONG><a name="[2f5]"></a>appGaugeGetCurrentMode</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, appgauge.o(i.appGaugeGetCurrentMode))
<BR><BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appBalanceCheckEvent
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appBalanceCheck
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appGaugeGetCurrentValue
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scuGaugeUnReleasedMode
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;saveTotalDischargeCountToRam
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gaugeCorrectCapacity
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gaugeCalCellRValue
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gaugeCalCapacity
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiProtectDocpHandler
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiProtectCocpHandler
</UL>

<P><STRONG><a name="[175]"></a>appGaugeGetCurrentValue</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, appgauge.o(i.appGaugeGetCurrentValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = appGaugeGetCurrentValue
</UL>
<BR>[Calls]<UL><LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;halAfeGetCurrentValue
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appGaugeGetCurrentMode
</UL>
<BR>[Called By]<UL><LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appScuGaugeUpdateRm
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckTerminateSocUseRa
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scuGaugeUnReleasedMode
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gaugeCalCellRValue
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gaugeCalCapacity
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gaugeCalAvgCurrent
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiProtectDocpHandler
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiProtectCocpHandler
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notifyBaseCurrent
</UL>

<P><STRONG><a name="[40b]"></a>appGaugeGetCyleCount</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, appgauge.o(i.appGaugeGetCyleCount))
<BR><BR>[Called By]<UL><LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notifyBaseCycleCount
</UL>

<P><STRONG><a name="[41c]"></a>appGaugeGetDisplaySoc</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, appgauge.o(i.appGaugeGetDisplaySoc))
<BR><BR>[Called By]<UL><LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notifyBaseRamSocPackage
</UL>

<P><STRONG><a name="[41b]"></a>appGaugeGetEndOfSoc</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, appgauge.o(i.appGaugeGetEndOfSoc))
<BR><BR>[Called By]<UL><LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notifyBaseRamSocPackage
</UL>

<P><STRONG><a name="[40d]"></a>appGaugeGetFCC</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, appgauge.o(i.appGaugeGetFCC))
<BR><BR>[Called By]<UL><LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notifyBaseFCC
</UL>

<P><STRONG><a name="[34e]"></a>appGaugeGetQPassCharge</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, appgauge.o(i.appGaugeGetQPassCharge))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = appGaugeGetQPassCharge &rArr; CvtQmaxPassChargeTomAh &rArr; __aeabi_ldivmod &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CvtQmaxPassChargeTomAh
</UL>
<BR>[Called By]<UL><LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notifyBasePassCharge
</UL>

<P><STRONG><a name="[418]"></a>appGaugeGetQStart</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, appgauge.o(i.appGaugeGetQStart))
<BR><BR>[Called By]<UL><LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notifyBaseQStartPackage
</UL>

<P><STRONG><a name="[1d3]"></a>appGaugeGetQmax</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, appgauge.o(i.appGaugeGetQmax))
<BR><BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterQmax
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notifyBaseRmQmax
</UL>

<P><STRONG><a name="[1d5]"></a>appGaugeGetRM</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, appgauge.o(i.appGaugeGetRM))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = appGaugeGetRM &rArr; appScuGaugeCvtRmTomAh &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appScuGaugeCvtRmTomAh
</UL>
<BR>[Called By]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterRM
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notifyBaseRmQmax
</UL>

<P><STRONG><a name="[350]"></a>appGaugeGetRPassCharge</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, appgauge.o(i.appGaugeGetRPassCharge))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = appGaugeGetRPassCharge &rArr; CvtRaPassChargeTomAh &rArr; __aeabi_ldivmod &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CvtRaPassChargeTomAh
</UL>
<BR>[Called By]<UL><LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notifyBasePassCharge
</UL>

<P><STRONG><a name="[419]"></a>appGaugeGetRSoc</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, appgauge.o(i.appGaugeGetRSoc))
<BR><BR>[Called By]<UL><LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notifyBaseQStartPackage
</UL>

<P><STRONG><a name="[41a]"></a>appGaugeGetRamSoc</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, appgauge.o(i.appGaugeGetRamSoc))
<BR><BR>[Called By]<UL><LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notifyBaseRamSocPackage
</UL>

<P><STRONG><a name="[351]"></a>appGaugeGetSOH</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, appgauge.o(i.appGaugeGetSOH))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = appGaugeGetSOH
</UL>
<BR>[Calls]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParGetDesignedCapacity
</UL>
<BR>[Called By]<UL><LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notifyBaseQStartPackage
</UL>

<P><STRONG><a name="[41d]"></a>appGaugeGetSoc0</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, appgauge.o(i.appGaugeGetSoc0))
<BR><BR>[Called By]<UL><LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notifyBaseRamSocPackage
</UL>

<P><STRONG><a name="[352]"></a>appGaugeOpen</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, appgauge.o(i.appGaugeOpen))
<BR><BR>[Stack]<UL><LI>Max Depth = 484<LI>Call Chain = appGaugeOpen &rArr; baseInfoIni &rArr; appSerialCanDavinciSendTextMessage &rArr; appSerialCanDavinciPutPkgToCanFifo &rArr; smp_can_put &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LibHwTimerOpen
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setupOcvTable
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setupRaTable
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setupFullChargeCondition
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gaugeRPassChargeIni
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gaugeQPassChargeIni
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chargeModeIni
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;baseInfoIni
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LibSwTimerOpen
</UL>
<BR>[Called By]<UL><LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProjectOpen
</UL>

<P><STRONG><a name="[1d1]"></a>appGaugeSetQmax</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, appgauge.o(i.appGaugeSetQmax))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = appGaugeSetQmax
</UL>
<BR>[Called By]<UL><LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;baseInfoIni
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterQmax
</UL>

<P><STRONG><a name="[1d4]"></a>appGaugeSetRM</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, appgauge.o(i.appGaugeSetRM))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = appGaugeSetRM
</UL>
<BR>[Called By]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterRM
</UL>

<P><STRONG><a name="[35a]"></a>appGaugeSetSoc0</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, appgauge.o(i.appGaugeSetSoc0))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = appGaugeSetSoc0 &rArr; gaugeSetRmAndFcc &rArr; appScuGaugeSetFcc &rArr; CvtRaPassChargeTomAh &rArr; __aeabi_ldivmod &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getTerminateSocFromOcvTable
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gaugeSetRmAndFcc
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gaugeRPassChargeIni
</UL>
<BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;davinciCanSoc
</UL>

<P><STRONG><a name="[35c]"></a>appGaugeUpdateSoc0</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, appgauge.o(i.appGaugeUpdateSoc0))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = appGaugeUpdateSoc0 &rArr; GetAverageCellVoltage
</UL>
<BR>[Calls]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAverageCellVoltage
</UL>
<BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;davinciCanSoc
</UL>

<P><STRONG><a name="[184]"></a>appProjectDisableEngMode</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, appprojecthvess.o(i.appProjectDisableEngMode))
<BR><BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanDebugModeChange
</UL>

<P><STRONG><a name="[185]"></a>appProjectDisableSimuMode</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, appprojecthvess.o(i.appProjectDisableSimuMode))
<BR><BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanDebugModeChange
</UL>

<P><STRONG><a name="[187]"></a>appProjectEnableEngMode</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, appprojecthvess.o(i.appProjectEnableEngMode))
<BR><BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanDebugModeChange
</UL>

<P><STRONG><a name="[186]"></a>appProjectEnableSimuMode</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, appprojecthvess.o(i.appProjectEnableSimuMode))
<BR><BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanDebugModeChange
</UL>

<P><STRONG><a name="[3a5]"></a>appProjectGetRelayOnFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, appprojecthvess.o(i.appProjectGetRelayOnFlag))
<BR><BR>[Called By]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkOtherFlag
</UL>

<P><STRONG><a name="[19c]"></a>appProjectGetScuId</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, appprojecthvess.o(i.appProjectGetScuId))
<BR><BR>[Calls]<UL><LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appBmsGetScuId
</UL>
<BR>[Called By]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciSendTextMessage
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciParameterMagicCode
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciParameterCellNtcFlag
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciParameterBmuNumber
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterZeroCurrent
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterVBatCalibration
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterUvp
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterTerminateVoltage
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterRelayOnDiffVoltage
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterRaTable
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterRM
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterQmax
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterPreDischargeTime
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterPF
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterOvp
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterOcvTable
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterNoteMessage
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterInsulationResistance
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterHwVersion
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterFwVersion
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterFwBuildDateTime
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterFullChargeCondition
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterFlatVoltage
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterDutp
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterDtp
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterDotp
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterDocp
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterDesignedCapacity
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterCutp
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterCurrentCalibration
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterCotp
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterCocp
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterBalanceRlx
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterBalanceDuty
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterBalanceDhg
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterBalanceChg
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterAfeCommunication
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;faultLog1DataCallBack
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;davinciCanSoc
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;davinciCanRtc
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;davinciCanRelayOn
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;davinciCanPfFlag
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;davinciCanFaultLog
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;davinciCanCleanData
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;davinciCanChecksumn
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;davinciCanAdc
<LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notifyBaseVBatVoltage
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notifyBaseSystemFlag
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notifyBaseScuTemp
<LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notifyBaseScuId
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notifyBaseRmQmax
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notifyBaseRamSocPackage
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notifyBaseQStartPackage
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notifyBasePassCharge
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notifyBaseMinMaxValue
<LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notifyBaseFCC
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notifyBaseCycleCount
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notifyBaseCurrent
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciNotificationUvpFlag
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciNotificationOvpFlag
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciNotificationNtcVoltage
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciNotificationDutpFlag
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciNotificationDotpFlag
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciNotificationCutpFlag
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciNotificationCotpFlag
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciNotificationCellVoltage
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciNotificationHandler
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciIsCorrectScuId
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FuCallbackFunction
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isValidScuId
</UL>

<P><STRONG><a name="[18a]"></a>appProjectIsInEngMode</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, appprojecthvess.o(i.appProjectIsInEngMode))
<BR><BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanDebugRelayControl
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkFbSignal
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkRelayOn
</UL>

<P><STRONG><a name="[1f4]"></a>appProjectIsInSimuMode</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, appprojecthvess.o(i.appProjectIsInSimuMode))
<BR><BR>[Called By]<UL><LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;halAfeGetState
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gaugeSwTimerHandler
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProtectSwTimerHandler
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateInternalVbatVoltage
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateExternalVbatVoltage
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;halAfeCurrentGetCurrentValue
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ads7946_callBack
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DecodeNtcVoltageByNtcFlag
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DecodeCellVoltageByCellFlag
</UL>

<P><STRONG><a name="[3a3]"></a>appProjectIsRtcValid</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, appprojecthvess.o(i.appProjectIsRtcValid))
<BR><BR>[Called By]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkOtherFlag
</UL>

<P><STRONG><a name="[3a4]"></a>appProjectIsSystemReadyFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, appprojecthvess.o(i.appProjectIsSystemReadyFlag))
<BR><BR>[Called By]<UL><LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;masterProcessor
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkOtherFlag
</UL>

<P><STRONG><a name="[35f]"></a>appProjectOpen</STRONG> (Thumb, 294 bytes, Stack size 144 bytes, appprojecthvess.o(i.appProjectOpen))
<BR><BR>[Stack]<UL><LI>Max Depth = 2756<LI>Call Chain = appProjectOpen &rArr; apiSysParOpen &rArr; loadSysPar &rArr; appSerialCanDavinciSendTextMessage &rArr; appSerialCanDavinciPutPkgToCanFifo &rArr; smp_can_put &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;releaseOCP
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;halAfeCurrentOpen
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialUartDavinciOpen
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciSendTextMessage
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciOpen
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProtectOpen
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appGaugeOpen
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appButtonOpen
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appBmsOpen
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appBalanceOpen
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSystemFlagOpen
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParOpen
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSignalFeedbackOpen
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiScuTempOpen
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiRelayControlOpen
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiRamSaveRtcMagicCode
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiRamOpen
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiRamLoadTotalDisChargeCount
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiRamLoadRtcMagicCode
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiRamLoadReleaseTime
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiRamLoadPowerOffDateTime
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiEventLogOpen
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LibSwTimerOpen
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_W5500_Open
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalTimerOpen
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalRtcSmpUnixTimeToDateTime
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalRtcOpen
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalRtcGetSmpUnixTime
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[44a]"></a>appProjectSetRelayOnFlag</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, appprojecthvess.o(i.appProjectSetRelayOnFlag))
<BR><BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;turnOnRelayProcess
</UL>

<P><STRONG><a name="[2f4]"></a>appProtectGetLevelMask</STRONG> (Thumb, 48 bytes, Stack size 28 bytes, appprotect.o(i.appProtectGetLevelMask))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = appProtectGetLevelMask
</UL>
<BR>[Called By]<UL><LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiProtectUvpHandler
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiProtectOvpHandler
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiProtectDutpHandler
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiProtectDotpHandler
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiProtectDocpHandler
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiProtectCutpHandler
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiProtectCotpHandler
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiProtectCocpHandler
</UL>

<P><STRONG><a name="[2f9]"></a>appProtectIsOverTemperter</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, appprotect.o(i.appProtectIsOverTemperter))
<BR><BR>[Called By]<UL><LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiProtectDutpHandler
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiProtectDotpHandler
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiProtectCutpHandler
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiProtectCotpHandler
</UL>

<P><STRONG><a name="[2fa]"></a>appProtectIsUnderTemperter</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, appprotect.o(i.appProtectIsUnderTemperter))
<BR><BR>[Called By]<UL><LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiProtectDutpHandler
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiProtectDotpHandler
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiProtectCutpHandler
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiProtectCotpHandler
</UL>

<P><STRONG><a name="[363]"></a>appProtectOpen</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, appprotect.o(i.appProtectOpen))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = appProtectOpen &rArr; LibSwTimerOpen &rArr; _LibRegisterAdd
</UL>
<BR>[Calls]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LibSwTimerOpen
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiProtectUvpOpen
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiProtectOvpOpen
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiProtectDotpOpen
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiProtectDocpOpen
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiProtectCutpOpen
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiProtectCotpOpen
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiProtectCocpOpen
</UL>
<BR>[Called By]<UL><LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProjectOpen
</UL>

<P><STRONG><a name="[a4]"></a>appProtectSwTimerHandler</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, appprotect.o(i.appProtectSwTimerHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = appProtectSwTimerHandler &rArr; halAfeGetState
</UL>
<BR>[Calls]<UL><LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;halAfeGetState
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProjectIsInSimuMode
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appprotect.o(i.appProtectOpen)
</UL>
<P><STRONG><a name="[34f]"></a>appScuGaugeCvtRmTomAh</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, appgauge.o(i.appScuGaugeCvtRmTomAh))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = appScuGaugeCvtRmTomAh &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appScuGaugeSetFcc
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appGaugeGetRM
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gaugeCalSoc
</UL>

<P><STRONG><a name="[36b]"></a>appScuGaugeSetFcc</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, appgauge.o(i.appScuGaugeSetFcc))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = appScuGaugeSetFcc &rArr; CvtRaPassChargeTomAh &rArr; __aeabi_ldivmod &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appScuGaugeCvtRmTomAh
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CvtRaPassChargeTomAh
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gaugeCalSoc
</UL>
<BR>[Called By]<UL><LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gaugeSetRmAndFcc
</UL>

<P><STRONG><a name="[36d]"></a>appScuGaugeUpdateQmax</STRONG> (Thumb, 254 bytes, Stack size 32 bytes, appgauge.o(i.appScuGaugeUpdateQmax))
<BR><BR>[Stack]<UL><LI>Max Depth = 508<LI>Call Chain = appScuGaugeUpdateQmax &rArr; apiSysParSetQmax &rArr; appSerialCanDavinciSendTextMessage &rArr; appSerialCanDavinciPutPkgToCanFifo &rArr; smp_can_put &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParSetQmaxUpdateTimes
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParSetQmax
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParGetDesignedCapacity
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gaugeSetRmAndFcc
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gaugeQPassChargeIni
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gaugeReleaseMode
</UL>

<P><STRONG><a name="[36e]"></a>appScuGaugeUpdateRm</STRONG> (Thumb, 274 bytes, Stack size 32 bytes, appgauge.o(i.appScuGaugeUpdateRm))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = appScuGaugeUpdateRm &rArr; gaugeSetRmAndFcc &rArr; appScuGaugeSetFcc &rArr; CvtRaPassChargeTomAh &rArr; __aeabi_ldivmod &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appGaugeGetCurrentValue
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRaFromSoc
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetOcvVoltage
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAverageCellVoltage
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckTerminateSocUseRa
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gaugeSetRmAndFcc
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scuGaugeUnReleasedMode
</UL>

<P><STRONG><a name="[197]"></a>appSerialCanDavinciIsCorrectScuId</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, appserialcandavinci.o(i.appSerialCanDavinciIsCorrectScuId))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = appSerialCanDavinciIsCorrectScuId
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProjectGetScuId
</UL>
<BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterRdWrite
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanFunDebugRx
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanFunCmdRx
</UL>

<P><STRONG><a name="[374]"></a>appSerialCanDavinciNotificationHandler</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, appserialcandavincinotification.o(i.appSerialCanDavinciNotificationHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = appSerialCanDavinciNotificationHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProjectGetScuId
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appBmsIsScudIdReady
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciTimerHandler
</UL>

<P><STRONG><a name="[362]"></a>appSerialCanDavinciOpen</STRONG> (Thumb, 66 bytes, Stack size 104 bytes, appserialcandavinci.o(i.appSerialCanDavinciOpen))
<BR><BR>[Stack]<UL><LI>Max Depth = 468<LI>Call Chain = appSerialCanDavinciOpen &rArr; appSerialCanDavinciSendTextMessage &rArr; appSerialCanDavinciPutPkgToCanFifo &rArr; smp_can_put &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciSendTextMessage
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LibSwTimerOpen
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_can_init
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProjectOpen
</UL>

<P><STRONG><a name="[19f]"></a>appSerialCanDavinciPutPkgToCanFifo</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, appserialcandavinci.o(i.appSerialCanDavinciPutPkgToCanFifo))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = appSerialCanDavinciPutPkgToCanFifo &rArr; smp_can_put &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_can_put
</UL>
<BR>[Called By]<UL><LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendResetScuIdCanPackage
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendRequestIdCanPackage
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkWhichScuRelayOn
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciSendTextMessage
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCommonStopScuIdAssign
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCommonSetScuId
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCommonRequestScuId
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciParameterMagicCode
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciParameterCellNtcFlag
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciParameterBmuNumber
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterZeroCurrent
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterVBatCalibration
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterUvp
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterTerminateVoltage
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterRelayOnDiffVoltage
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterRaTable
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterRM
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterQmax
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterPreDischargeTime
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterPF
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterOvp
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterOcvTable
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterNoteMessage
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterInsulationResistance
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterHwVersion
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterFwVersion
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterFwBuildDateTime
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterFullChargeCondition
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterFlatVoltage
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterDutp
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterDtp
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterDotp
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterDocp
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterDesignedCapacity
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterCutp
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterCurrentCalibration
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterCotp
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterCocp
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterBalanceRlx
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterBalanceDuty
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterBalanceDhg
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterBalanceChg
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterAfeCommunication
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;faultLog1DataCallBack
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;davinciCanSoc
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;davinciCanRtc
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;davinciCanRelayOn
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;davinciCanPfFlag
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;davinciCanFaultLog
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;davinciCanChecksumn
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;davinciCanAdc
<LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notifyBaseVBatVoltage
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notifyBaseSystemFlag
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notifyBaseScuTemp
<LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notifyBaseScuId
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notifyBaseRmQmax
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notifyBaseRamSocPackage
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notifyBaseQStartPackage
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notifyBasePassCharge
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notifyBaseMinMaxValue
<LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notifyBaseFCC
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notifyBaseCycleCount
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notifyBaseCurrent
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciNotificationUvpFlag
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciNotificationOvpFlag
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciNotificationNtcVoltage
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciNotificationDutpFlag
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciNotificationDotpFlag
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciNotificationCutpFlag
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciNotificationCotpFlag
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciNotificationCellVoltage
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FuCallbackFunction
</UL>

<P><STRONG><a name="[181]"></a>appSerialCanDavinciSendTextMessage</STRONG> (Thumb, 178 bytes, Stack size 296 bytes, appserialcandavinci.o(i.appSerialCanDavinciSendTextMessage))
<BR><BR>[Stack]<UL><LI>Max Depth = 364<LI>Call Chain = appSerialCanDavinciSendTextMessage &rArr; appSerialCanDavinciPutPkgToCanFifo &rArr; smp_can_put &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProjectGetScuId
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciPutPkgToCanFifo
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appBmsIsScudIdReady
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protectEventHandler
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;buttonEventHandler
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProjectDavinciBalanceEventHandler
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProjectOpen
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParSetQmaxUpdateTimes
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParSetQmax
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParSetCycleCount
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getSocTableUseAvgCellVoltage
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gaugeReleaseMode
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;baseInfoIni
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciOpen
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiEventLogSaveLogData
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;saveScuIdPar
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanDebugVbatAdc
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanDebugRelayControl
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanDebugModeChange
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanDebugCurrentAdc
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCommonResetScuId
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;faultLog1DataCallBack
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;davinciCanSoc
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;davinciCanPfFlag
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;davinciCanFaultLog
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;davinciCanCleanData
<LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;saveSysPar
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;saveCalPar
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;saveBatteryInfoPar
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loadSysPar
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loadScuIdPar
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loadCalPar
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loadBatteryInfoPar
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;turnOnRelayProcess
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkRelayOn
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiFuUpdateFw
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decodeFuInfoPackage
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;searchLastRecordAddress
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;searchLastLogAddressSwTimerHandler
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updatFwSwTimerHandler
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkRcvFuCodeData
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkFuCodeDataSwTimerHandler
</UL>

<P><STRONG><a name="[a6]"></a>appSerialCanDavinciTimerHandler</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, appserialcandavinci.o(i.appSerialCanDavinciTimerHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = appSerialCanDavinciTimerHandler &rArr; canDavinciPaserCanPackage &rArr; dump_danpackage &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciNotificationHandler
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canDavinciPaserCanPackage
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appserialcandavinci.o(i.appSerialCanDavinciOpen)
</UL>
<P><STRONG><a name="[361]"></a>appSerialUartDavinciOpen</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, appserialuartdavinci.o(i.appSerialUartDavinciOpen))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = appSerialUartDavinciOpen &rArr; smp_uart_init &rArr; HAL_UART_Init &rArr; HAL_UART_MspInit &rArr; HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLLSAI2_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LibSwTimerOpen
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_uart_init
</UL>
<BR>[Called By]<UL><LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProjectOpen
</UL>

<P><STRONG><a name="[a8]"></a>appSerialUartDavinciTimerHandler</STRONG> (Thumb, 54 bytes, Stack size 104 bytes, appserialuartdavinci.o(i.appSerialUartDavinciTimerHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = appSerialUartDavinciTimerHandler &rArr; appSerialUartPackageJudgee &rArr; appSerialUartPackageParser &rArr; LibTemperatureToVoltage &rArr; __hardfp_exp &rArr; __kernel_poly &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialUartPackageJudgee
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appserialuartdavinci.o(i.appSerialUartDavinciOpen)
</UL>
<P><STRONG><a name="[380]"></a>appSerialUartSendMessage</STRONG> (Thumb, 112 bytes, Stack size 280 bytes, appserialuartdavinci.o(i.appSerialUartSendMessage))
<BR><BR>[Stack]<UL><LI>Max Depth = 340<LI>Call Chain = appSerialUartSendMessage &rArr; smp_uart_put &rArr; HAL_UART_Transmit_DMA &rArr; HAL_DMA_Start_IT &rArr; DMA_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_uart_put
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[196]"></a>appVbatDebug</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, apisyspar.o(i.appVbatDebug))
<BR><BR>[Calls]<UL><LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doCalibration
</UL>
<BR>[Called By]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanDebugVbatAdc
</UL>

<P><STRONG><a name="[b5]"></a>app_afe_cb</STRONG> (Thumb, 116 bytes, Stack size 112 bytes, halafebq796xx.o(i.app_afe_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = app_afe_cb &rArr; DecodeNtcVoltageByNtcFlag &rArr; CvtNtcAdcToMv &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DecodeNtcVoltageByNtcFlag
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DecodeCellVoltageByCellFlag
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.main)
</UL>
<P><STRONG><a name="[a9]"></a>app_clean_event_handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, smp_log_managment.o(i.app_clean_event_handler))
<BR>[Address Reference Count : 3]<UL><LI> smp_log_managment.o(i.app_flash_log_managment_clean_fix_memory)
<LI> smp_log_managment.o(i.app_flash_log_managment_clean_head)
<LI> smp_log_managment.o(i.app_flash_log_managment_clean_reflash_memory)
</UL>
<P><STRONG><a name="[be]"></a>app_flash_log_event_handler</STRONG> (Thumb, 526 bytes, Stack size 24 bytes, main.o(i.app_flash_log_event_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = app_flash_log_event_handler &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking
</UL>
<BR>[Calls]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.main)
</UL>
<P><STRONG><a name="[382]"></a>app_flash_log_managment_clean_all_memory</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, smp_log_managment.o(i.app_flash_log_managment_clean_all_memory))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = app_flash_log_managment_clean_all_memory &rArr; app_flash_log_managment_clean_reflash_memory &rArr; app_flash_log_managment_clean_head &rArr; smp_mx25l_flash_sector_erase_sectornum &rArr; smp_fifo_flash_push
</UL>
<BR>[Calls]<UL><LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_flash_log_managment_clean_reflash_memory
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_flash_log_managment_clean_fix_memory
</UL>
<BR>[Called By]<UL><LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_uart_rx_process
</UL>

<P><STRONG><a name="[384]"></a>app_flash_log_managment_clean_fix_memory</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, smp_log_managment.o(i.app_flash_log_managment_clean_fix_memory))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = app_flash_log_managment_clean_fix_memory &rArr; app_flash_log_managment_clean_head &rArr; smp_mx25l_flash_sector_erase_sectornum &rArr; smp_fifo_flash_push
</UL>
<BR>[Calls]<UL><LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_flash_log_managment_clean_head
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_mx25l_flash_sector_erase_sectornum
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_flash_log_managment_clean_all_memory
<LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_uart_rx_process
</UL>

<P><STRONG><a name="[386]"></a>app_flash_log_managment_clean_head</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, smp_log_managment.o(i.app_flash_log_managment_clean_head))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = app_flash_log_managment_clean_head &rArr; smp_mx25l_flash_sector_erase_sectornum &rArr; smp_fifo_flash_push
</UL>
<BR>[Calls]<UL><LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_mx25l_flash_sector_erase_sectornum
</UL>
<BR>[Called By]<UL><LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_flash_log_managment_clean_reflash_memory
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_flash_log_managment_clean_fix_memory
<LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_uart_rx_process
</UL>

<P><STRONG><a name="[383]"></a>app_flash_log_managment_clean_reflash_memory</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, smp_log_managment.o(i.app_flash_log_managment_clean_reflash_memory))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = app_flash_log_managment_clean_reflash_memory &rArr; app_flash_log_managment_clean_head &rArr; smp_mx25l_flash_sector_erase_sectornum &rArr; smp_fifo_flash_push
</UL>
<BR>[Calls]<UL><LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_flash_log_managment_clean_head
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_mx25l_flash_sector_erase_sectornum
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_flash_log_managment_clean_all_memory
<LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_uart_rx_process
</UL>

<P><STRONG><a name="[387]"></a>app_flash_log_managment_init</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, smp_log_managment.o(i.app_flash_log_managment_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = app_flash_log_managment_init &rArr; app_flash_sector_header_load &rArr; smp_mx25l_flash_fast_read_data_bytes_page &rArr; smp_fifo_flash_push
</UL>
<BR>[Calls]<UL><LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_flash_sector_header_load
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[388]"></a>app_flash_sector_header_load</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, smp_log_managment.o(i.app_flash_sector_header_load))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = app_flash_sector_header_load &rArr; smp_mx25l_flash_fast_read_data_bytes_page &rArr; smp_fifo_flash_push
</UL>
<BR>[Calls]<UL><LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_mx25l_flash_fast_read_data_bytes_page
</UL>
<BR>[Called By]<UL><LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_flash_log_managment_init
</UL>

<P><STRONG><a name="[ba]"></a>app_irm_get_device_init_cb</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, main.o(i.app_irm_get_device_init_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = app_irm_get_device_init_cb &rArr; smp_ADS7946_init &rArr; smp_spi_master_init &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_ADS7946_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.main)
</UL>
<P><STRONG><a name="[bc]"></a>app_irm_rxdata_cb</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, main.o(i.app_irm_rxdata_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = app_irm_rxdata_cb &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking
</UL>
<BR>[Calls]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.main)
</UL>
<P><STRONG><a name="[b7]"></a>app_irm_sw1_gpio</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, main.o(i.app_irm_sw1_gpio))
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.main)
</UL>
<P><STRONG><a name="[b8]"></a>app_irm_sw2_gpio</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, main.o(i.app_irm_sw2_gpio))
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.main)
</UL>
<P><STRONG><a name="[b9]"></a>app_irm_sw3_gpio</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, main.o(i.app_irm_sw3_gpio))
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.main)
</UL>
<P><STRONG><a name="[b6]"></a>app_irm_sw_gpio_init_cb</STRONG> (Thumb, 70 bytes, Stack size 40 bytes, main.o(i.app_irm_sw_gpio_init_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = app_irm_sw_gpio_init_cb &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.main)
</UL>
<P><STRONG><a name="[bb]"></a>app_irm_trigger_voltage_data_cb</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, main.o(i.app_irm_trigger_voltage_data_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 236<LI>Call Chain = app_irm_trigger_voltage_data_cb &rArr; smp_ADS7946_get_data &rArr; smp_spi_master_send_recv &rArr; HAL_SPI_Receive_DMA &rArr; HAL_SPI_TransmitReceive_DMA &rArr; HAL_DMA_Start_IT &rArr; DMA_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_ADS7946_get_data
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.main)
</UL>
<P><STRONG><a name="[aa]"></a>app_sector_header_event_handler</STRONG> (Thumb, 222 bytes, Stack size 16 bytes, smp_log_managment.o(i.app_sector_header_event_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = app_sector_header_event_handler &rArr; smp_mx25l_flash_fast_read_data_bytes_page &rArr; smp_fifo_flash_push
</UL>
<BR>[Calls]<UL><LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_mx25l_flash_fast_read_data_bytes_page
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 2]<UL><LI> smp_log_managment.o(i.app_flash_sector_header_load)
<LI> smp_log_managment.o(i.app_sector_header_event_handler)
</UL>
<P><STRONG><a name="[3fb]"></a>bq796xx_event_RegisteCB</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, smp_drv_bq796xx.o(i.bq796xx_event_RegisteCB))
<BR><BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[394]"></a>calCoef</STRONG> (Thumb, 200 bytes, Stack size 64 bytes, libcalibration.o(i.calCoef))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = calCoef &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setCalParRamValue
</UL>

<P><STRONG><a name="[3f6]"></a>calEventLogCheckSum</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, apieventflashrom.o(i.calEventLogCheckSum))
<BR><BR>[Called By]<UL><LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isValidEventLog
</UL>

<P><STRONG><a name="[436]"></a>can_fifo_init</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, smp_can.o(i.can_fifo_init))
<BR><BR>[Called By]<UL><LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_can_init
</UL>

<P><STRONG><a name="[34b]"></a>doCalibration</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, libcalibration.o(i.doCalibration))
<BR><BR>[Called By]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appVbatDebug
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appCurrDebug
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateInternalVbatVoltage
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateExternalVbatVoltage
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;halAfeCurrentGetCurrentValue
</UL>

<P><STRONG><a name="[3bd]"></a>drv_bq796xx_Clear_Mask_Fault_OTUT</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, smp_drv_bq796xx.o(i.drv_bq796xx_Clear_Mask_Fault_OTUT))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = drv_bq796xx_Clear_Mask_Fault_OTUT &rArr; drv_bq796xx_command_framing &rArr; drv_bq796xx_uart_puts &rArr; smp_uart_put &rArr; HAL_UART_Transmit_DMA &rArr; HAL_DMA_Start_IT &rArr; DMA_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fill_data4_payload
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_command_framing
</UL>
<BR>[Called By]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_Init_Steps
</UL>

<P><STRONG><a name="[3c0]"></a>drv_bq796xx_Clear_Mask_Fault_OVUV</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, smp_drv_bq796xx.o(i.drv_bq796xx_Clear_Mask_Fault_OVUV))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = drv_bq796xx_Clear_Mask_Fault_OVUV &rArr; drv_bq796xx_command_framing &rArr; drv_bq796xx_uart_puts &rArr; smp_uart_put &rArr; HAL_UART_Transmit_DMA &rArr; HAL_DMA_Start_IT &rArr; DMA_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fill_data4_payload
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_command_framing
</UL>
<BR>[Called By]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_Init_Steps
</UL>

<P><STRONG><a name="[b2]"></a>drv_bq796xx_HwTimerHanlder</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, smp_drv_bq796xx.o(i.drv_bq796xx_HwTimerHanlder))
<BR>[Address Reference Count : 1]<UL><LI> smp_drv_bq796xx.o(i.drv_bq796xx_init)
</UL>
<P><STRONG><a name="[3c1]"></a>drv_bq796xx_Init_Steps</STRONG> (Thumb, 2632 bytes, Stack size 88 bytes, smp_drv_bq796xx.o(i.drv_bq796xx_Init_Steps))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = drv_bq796xx_Init_Steps &rArr; drv_bq796xx_switch_rx_pin_type_setting &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking
</UL>
<BR>[Calls]<UL><LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_data_frame_parser
<LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_clear_fifobuffer
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_Set_AFE_GPIO_type
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_gpio_set_state
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fill_data4_payload
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_switch_rx_pin_type_setting
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_command_framing
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_check_respone_event2
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_Start_AFE_ADC
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_Set_Stack_UV
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_Set_Stack_OV
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_Set_Stack_OTUT_Associate
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_Set_Stack_OTUT
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_Set_Stack_CellBalanceCycleTime
<LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_Set_Mask_FaultAll
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_Set_BroadCast_Mask_FaultSel
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_Set_BroadCast_Mask_FaultAll
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_Run_OVUV
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_Run_OTUT
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_Clear_Mask_Fault_OVUV
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_Clear_Mask_Fault_OTUT
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3d3]"></a>drv_bq796xx_Read_AFE_ALL_ADC</STRONG> (Thumb, 70 bytes, Stack size 32 bytes, smp_drv_bq796xx.o(i.drv_bq796xx_Read_AFE_ALL_ADC))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = drv_bq796xx_Read_AFE_ALL_ADC &rArr; drv_bq796xx_command_framing &rArr; drv_bq796xx_uart_puts &rArr; smp_uart_put &rArr; HAL_UART_Transmit_DMA &rArr; HAL_DMA_Start_IT &rArr; DMA_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fill_data4_payload
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_command_framing
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3d4]"></a>drv_bq796xx_Read_AFE_ALL_VCELL</STRONG> (Thumb, 70 bytes, Stack size 32 bytes, smp_drv_bq796xx.o(i.drv_bq796xx_Read_AFE_ALL_VCELL))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = drv_bq796xx_Read_AFE_ALL_VCELL &rArr; drv_bq796xx_command_framing &rArr; drv_bq796xx_uart_puts &rArr; smp_uart_put &rArr; HAL_UART_Transmit_DMA &rArr; HAL_DMA_Start_IT &rArr; DMA_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fill_data4_payload
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_command_framing
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3d5]"></a>drv_bq796xx_Read_Stack_FaultSummary</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, smp_drv_bq796xx.o(i.drv_bq796xx_Read_Stack_FaultSummary))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = drv_bq796xx_Read_Stack_FaultSummary &rArr; drv_bq796xx_command_framing &rArr; drv_bq796xx_uart_puts &rArr; smp_uart_put &rArr; HAL_UART_Transmit_DMA &rArr; HAL_DMA_Start_IT &rArr; DMA_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fill_data4_payload
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_command_framing
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3ce]"></a>drv_bq796xx_Run_OTUT</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, smp_drv_bq796xx.o(i.drv_bq796xx_Run_OTUT))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = drv_bq796xx_Run_OTUT &rArr; drv_bq796xx_command_framing &rArr; drv_bq796xx_uart_puts &rArr; smp_uart_put &rArr; HAL_UART_Transmit_DMA &rArr; HAL_DMA_Start_IT &rArr; DMA_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fill_data4_payload
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_command_framing
</UL>
<BR>[Called By]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_Init_Steps
</UL>

<P><STRONG><a name="[3cb]"></a>drv_bq796xx_Run_OVUV</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, smp_drv_bq796xx.o(i.drv_bq796xx_Run_OVUV))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = drv_bq796xx_Run_OVUV &rArr; drv_bq796xx_command_framing &rArr; drv_bq796xx_uart_puts &rArr; smp_uart_put &rArr; HAL_UART_Transmit_DMA &rArr; HAL_DMA_Start_IT &rArr; DMA_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fill_data4_payload
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_command_framing
</UL>
<BR>[Called By]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_Init_Steps
</UL>

<P><STRONG><a name="[3d0]"></a>drv_bq796xx_Set_AFE_GPIO_type</STRONG> (Thumb, 128 bytes, Stack size 40 bytes, smp_drv_bq796xx.o(i.drv_bq796xx_Set_AFE_GPIO_type))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = drv_bq796xx_Set_AFE_GPIO_type &rArr; drv_bq796xx_command_framing &rArr; drv_bq796xx_uart_puts &rArr; smp_uart_put &rArr; HAL_UART_Transmit_DMA &rArr; HAL_DMA_Start_IT &rArr; DMA_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fill_data4_payload
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_command_framing
</UL>
<BR>[Called By]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_Init_Steps
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_Set_Stack_OTUT_Associate
</UL>

<P><STRONG><a name="[3c7]"></a>drv_bq796xx_Set_BroadCast_Mask_FaultAll</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, smp_drv_bq796xx.o(i.drv_bq796xx_Set_BroadCast_Mask_FaultAll))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = drv_bq796xx_Set_BroadCast_Mask_FaultAll &rArr; drv_bq796xx_command_framing &rArr; drv_bq796xx_uart_puts &rArr; smp_uart_put &rArr; HAL_UART_Transmit_DMA &rArr; HAL_DMA_Start_IT &rArr; DMA_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fill_data4_payload
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_command_framing
</UL>
<BR>[Called By]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_Init_Steps
</UL>

<P><STRONG><a name="[3d1]"></a>drv_bq796xx_Set_BroadCast_Mask_FaultSel</STRONG> (Thumb, 54 bytes, Stack size 32 bytes, smp_drv_bq796xx.o(i.drv_bq796xx_Set_BroadCast_Mask_FaultSel))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = drv_bq796xx_Set_BroadCast_Mask_FaultSel &rArr; drv_bq796xx_command_framing &rArr; drv_bq796xx_uart_puts &rArr; smp_uart_put &rArr; HAL_UART_Transmit_DMA &rArr; HAL_DMA_Start_IT &rArr; DMA_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fill_data4_payload
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_command_framing
</UL>
<BR>[Called By]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_Init_Steps
</UL>

<P><STRONG><a name="[3c8]"></a>drv_bq796xx_Set_Mask_FaultAll</STRONG> (Thumb, 78 bytes, Stack size 32 bytes, smp_drv_bq796xx.o(i.drv_bq796xx_Set_Mask_FaultAll))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = drv_bq796xx_Set_Mask_FaultAll &rArr; drv_bq796xx_command_framing &rArr; drv_bq796xx_uart_puts &rArr; smp_uart_put &rArr; HAL_UART_Transmit_DMA &rArr; HAL_DMA_Start_IT &rArr; DMA_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fill_data4_payload
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_command_framing
</UL>
<BR>[Called By]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_Init_Steps
</UL>

<P><STRONG><a name="[3cf]"></a>drv_bq796xx_Set_Stack_CellBalanceCycleTime</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, smp_drv_bq796xx.o(i.drv_bq796xx_Set_Stack_CellBalanceCycleTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = drv_bq796xx_Set_Stack_CellBalanceCycleTime &rArr; drv_bq796xx_command_framing &rArr; drv_bq796xx_uart_puts &rArr; smp_uart_put &rArr; HAL_UART_Transmit_DMA &rArr; HAL_DMA_Start_IT &rArr; DMA_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fill_data4_payload
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_command_framing
</UL>
<BR>[Called By]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_Init_Steps
</UL>

<P><STRONG><a name="[3cc]"></a>drv_bq796xx_Set_Stack_OTUT</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, smp_drv_bq796xx.o(i.drv_bq796xx_Set_Stack_OTUT))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = drv_bq796xx_Set_Stack_OTUT &rArr; drv_bq796xx_command_framing &rArr; drv_bq796xx_uart_puts &rArr; smp_uart_put &rArr; HAL_UART_Transmit_DMA &rArr; HAL_DMA_Start_IT &rArr; DMA_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fill_data4_payload
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_command_framing
</UL>
<BR>[Called By]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_Init_Steps
</UL>

<P><STRONG><a name="[3cd]"></a>drv_bq796xx_Set_Stack_OTUT_Associate</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, smp_drv_bq796xx.o(i.drv_bq796xx_Set_Stack_OTUT_Associate))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = drv_bq796xx_Set_Stack_OTUT_Associate &rArr; drv_bq796xx_Set_AFE_GPIO_type &rArr; drv_bq796xx_command_framing &rArr; drv_bq796xx_uart_puts &rArr; smp_uart_put &rArr; HAL_UART_Transmit_DMA &rArr; HAL_DMA_Start_IT &rArr; DMA_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_Set_AFE_GPIO_type
</UL>
<BR>[Called By]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_Init_Steps
</UL>

<P><STRONG><a name="[3c9]"></a>drv_bq796xx_Set_Stack_OV</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, smp_drv_bq796xx.o(i.drv_bq796xx_Set_Stack_OV))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = drv_bq796xx_Set_Stack_OV &rArr; drv_bq796xx_command_framing &rArr; drv_bq796xx_uart_puts &rArr; smp_uart_put &rArr; HAL_UART_Transmit_DMA &rArr; HAL_DMA_Start_IT &rArr; DMA_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fill_data4_payload
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_command_framing
</UL>
<BR>[Called By]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_Init_Steps
</UL>

<P><STRONG><a name="[3ca]"></a>drv_bq796xx_Set_Stack_UV</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, smp_drv_bq796xx.o(i.drv_bq796xx_Set_Stack_UV))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = drv_bq796xx_Set_Stack_UV &rArr; drv_bq796xx_command_framing &rArr; drv_bq796xx_uart_puts &rArr; smp_uart_put &rArr; HAL_UART_Transmit_DMA &rArr; HAL_DMA_Start_IT &rArr; DMA_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fill_data4_payload
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_command_framing
</UL>
<BR>[Called By]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_Init_Steps
</UL>

<P><STRONG><a name="[3d2]"></a>drv_bq796xx_Start_AFE_ADC</STRONG> (Thumb, 68 bytes, Stack size 32 bytes, smp_drv_bq796xx.o(i.drv_bq796xx_Start_AFE_ADC))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = drv_bq796xx_Start_AFE_ADC &rArr; drv_bq796xx_command_framing &rArr; drv_bq796xx_uart_puts &rArr; smp_uart_put &rArr; HAL_UART_Transmit_DMA &rArr; HAL_DMA_Start_IT &rArr; DMA_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fill_data4_payload
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_command_framing
</UL>
<BR>[Called By]<UL><LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_direction_set_steps
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_Init_Steps
</UL>

<P><STRONG><a name="[3d6]"></a>drv_bq796xx_check_respone_event</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, smp_drv_bq796xx.o(i.drv_bq796xx_check_respone_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = drv_bq796xx_check_respone_event &rArr; drv_bq796xx_clear_fifobuffer
</UL>
<BR>[Calls]<UL><LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_time_count_set
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_time_count_get
<LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_clear_fifobuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_start_setting
</UL>

<P><STRONG><a name="[3c4]"></a>drv_bq796xx_check_respone_event2</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, smp_drv_bq796xx.o(i.drv_bq796xx_check_respone_event2))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = drv_bq796xx_check_respone_event2 &rArr; drv_bq796xx_clear_fifobuffer
</UL>
<BR>[Calls]<UL><LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_time_count_set
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_time_count_get
<LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_clear_fifobuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_direction_set_steps
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_Init_Steps
</UL>

<P><STRONG><a name="[3c5]"></a>drv_bq796xx_clear_fifobuffer</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, smp_drv_bq796xx.o(i.drv_bq796xx_clear_fifobuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = drv_bq796xx_clear_fifobuffer
</UL>
<BR>[Calls]<UL><LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_uart_get
</UL>
<BR>[Called By]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_Init_Steps
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_check_respone_event2
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_check_respone_event
</UL>

<P><STRONG><a name="[3bf]"></a>drv_bq796xx_command_framing</STRONG> (Thumb, 170 bytes, Stack size 56 bytes, smp_drv_bq796xx.o(i.drv_bq796xx_command_framing))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = drv_bq796xx_command_framing &rArr; drv_bq796xx_uart_puts &rArr; smp_uart_put &rArr; HAL_UART_Transmit_DMA &rArr; HAL_DMA_Start_IT &rArr; DMA_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_delay_ms
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_uart_puts
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Word2u8
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Func_Cal_ModbusCRC16
</UL>
<BR>[Called By]<UL><LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_start_setting
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_direction_set_steps
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_Read_Stack_FaultSummary
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_Read_AFE_ALL_VCELL
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_Read_AFE_ALL_ADC
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_Init_Steps
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_Set_AFE_GPIO_type
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_Start_AFE_ADC
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_Set_Stack_UV
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_Set_Stack_OV
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_Set_Stack_OTUT
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_Set_Stack_CellBalanceCycleTime
<LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_Set_Mask_FaultAll
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_Set_BroadCast_Mask_FaultSel
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_Set_BroadCast_Mask_FaultAll
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_Run_OVUV
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_Run_OTUT
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_Clear_Mask_Fault_OVUV
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_Clear_Mask_Fault_OTUT
</UL>

<P><STRONG><a name="[3c6]"></a>drv_bq796xx_data_frame_parser</STRONG> (Thumb, 498 bytes, Stack size 24 bytes, smp_drv_bq796xx.o(i.drv_bq796xx_data_frame_parser))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = drv_bq796xx_data_frame_parser &rArr; Func_Cal_ModbusCRC16
</UL>
<BR>[Calls]<UL><LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_uart_get
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Func_Cal_ModbusCRC16
</UL>
<BR>[Called By]<UL><LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_direction_set_steps
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_Init_Steps
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3dc]"></a>drv_bq796xx_delay_ms</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, smp_drv_bq796xx.o(i.drv_bq796xx_delay_ms))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = drv_bq796xx_delay_ms
</UL>
<BR>[Calls]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_start_setting
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_rx_pin_wakeup
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_command_framing
</UL>

<P><STRONG><a name="[3dd]"></a>drv_bq796xx_direction_set_steps</STRONG> (Thumb, 1226 bytes, Stack size 80 bytes, smp_drv_bq796xx.o(i.drv_bq796xx_direction_set_steps))
<BR><BR>[Stack]<UL><LI>Max Depth = 244<LI>Call Chain = drv_bq796xx_direction_set_steps &rArr; drv_bq796xx_Start_AFE_ADC &rArr; drv_bq796xx_command_framing &rArr; drv_bq796xx_uart_puts &rArr; smp_uart_put &rArr; HAL_UART_Transmit_DMA &rArr; HAL_DMA_Start_IT &rArr; DMA_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_data_frame_parser
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fill_data4_payload
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_command_framing
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_check_respone_event2
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_Start_AFE_ADC
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3de]"></a>drv_bq796xx_init</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, smp_drv_bq796xx.o(i.drv_bq796xx_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = drv_bq796xx_init &rArr; drv_bq796xx_switch_rx_pin_type_setting &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking
</UL>
<BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LibHwTimerOpen
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_gpio_set_state
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_gpio_init
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_switch_rx_pin_type_setting
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3e0]"></a>drv_bq796xx_init_default_load</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, smp_drv_bq796xx.o(i.drv_bq796xx_init_default_load))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = drv_bq796xx_init_default_load
</UL>
<BR>[Calls]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3e1]"></a>drv_bq796xx_rx_pin_wakeup</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, smp_drv_bq796xx.o(i.drv_bq796xx_rx_pin_wakeup))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = drv_bq796xx_rx_pin_wakeup &rArr; drv_bq796xx_delay_ms
</UL>
<BR>[Calls]<UL><LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_delay_ms
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_gpio_set_state
</UL>
<BR>[Called By]<UL><LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_start_setting
</UL>

<P><STRONG><a name="[3e2]"></a>drv_bq796xx_start_setting</STRONG> (Thumb, 900 bytes, Stack size 56 bytes, smp_drv_bq796xx.o(i.drv_bq796xx_start_setting))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = drv_bq796xx_start_setting &rArr; drv_bq796xx_switch_rx_pin_type_setting &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking
</UL>
<BR>[Calls]<UL><LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_delay_ms
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fill_data4_payload
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_switch_rx_pin_type_setting
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_rx_pin_wakeup
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_command_framing
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_check_respone_event
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3c2]"></a>drv_bq796xx_switch_rx_pin_type_setting</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, smp_drv_bq796xx.o(i.drv_bq796xx_switch_rx_pin_type_setting))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = drv_bq796xx_switch_rx_pin_type_setting &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking
</UL>
<BR>[Calls]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_uart_init
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_gpio_set_state
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_gpio_init
</UL>
<BR>[Called By]<UL><LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_start_setting
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_init
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_Init_Steps
</UL>

<P><STRONG><a name="[b3]"></a>drv_bq796xx_uart_event_handler</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, smp_drv_bq796xx.o(i.drv_bq796xx_uart_event_handler))
<BR>[Address Reference Count : 1]<UL><LI> smp_drv_bq796xx.o(i.drv_bq796xx_switch_rx_pin_type_setting)
</UL>
<P><STRONG><a name="[3db]"></a>drv_bq796xx_uart_puts</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, smp_drv_bq796xx.o(i.drv_bq796xx_uart_puts))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = drv_bq796xx_uart_puts &rArr; smp_uart_put &rArr; HAL_UART_Transmit_DMA &rArr; HAL_DMA_Start_IT &rArr; DMA_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_uart_put
</UL>
<BR>[Called By]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_command_framing
</UL>

<P><STRONG><a name="[3be]"></a>fill_data4_payload</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, smp_drv_bq796xx.o(i.fill_data4_payload))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = fill_data4_payload
</UL>
<BR>[Called By]<UL><LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_start_setting
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_direction_set_steps
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_Read_Stack_FaultSummary
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_Read_AFE_ALL_VCELL
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_Read_AFE_ALL_ADC
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_Init_Steps
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_Set_AFE_GPIO_type
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_Start_AFE_ADC
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_Set_Stack_UV
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_Set_Stack_OV
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_Set_Stack_OTUT
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_Set_Stack_CellBalanceCycleTime
<LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_Set_Mask_FaultAll
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_Set_BroadCast_Mask_FaultSel
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_Set_BroadCast_Mask_FaultAll
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_Run_OVUV
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_Run_OTUT
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_Clear_Mask_Fault_OVUV
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_Clear_Mask_Fault_OTUT
</UL>

<P><STRONG><a name="[440]"></a>flash_fifo_init</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, smp_mx25l_driver.o(i.flash_fifo_init))
<BR><BR>[Called By]<UL><LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_mx25l_flash_init
</UL>

<P><STRONG><a name="[8a]"></a>fputc</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, fputc.o(i.fputc))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = fputc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printfa.o(i.__0printf)
</UL>
<P><STRONG><a name="[3e8]"></a>gaugeCheckCycleCount</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, appgauge.o(i.gaugeCheckCycleCount))
<BR><BR>[Stack]<UL><LI>Max Depth = 396<LI>Call Chain = gaugeCheckCycleCount &rArr; apiSysParSetCycleCount &rArr; appSerialCanDavinciSendTextMessage &rArr; appSerialCanDavinciPutPkgToCanFifo &rArr; smp_can_put &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParSetCycleCount
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParGetDesignedCapacity
</UL>
<BR>[Called By]<UL><LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scuGaugeUnReleasedMode
</UL>

<P><STRONG><a name="[3ec]"></a>getSocTableUseAvgCellVoltage</STRONG> (Thumb, 72 bytes, Stack size 112 bytes, appgauge.o(i.getSocTableUseAvgCellVoltage))
<BR><BR>[Stack]<UL><LI>Max Depth = 476<LI>Call Chain = getSocTableUseAvgCellVoltage &rArr; appSerialCanDavinciSendTextMessage &rArr; appSerialCanDavinciPutPkgToCanFifo &rArr; smp_can_put &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParGetMinFlatVoltage
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParGetMaxFlatVoltage
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getSocUseVoltage
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAverageCellVoltage
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciSendTextMessage
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gaugeReleaseMode
</UL>

<P><STRONG><a name="[3f3]"></a>getSocUseVoltage</STRONG> (Thumb, 154 bytes, Stack size 12 bytes, appgauge.o(i.getSocUseVoltage))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = getSocUseVoltage
</UL>
<BR>[Called By]<UL><LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getSocTableUseAvgCellVoltage
</UL>

<P><STRONG><a name="[364]"></a>halAfeCurrentOpen</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, halafeads7946.o(i.halAfeCurrentOpen))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = halAfeCurrentOpen &rArr; smp_ADS7946_init &rArr; smp_spi_master_init &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_ADS7946_init
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LibSwTimerOpen
</UL>
<BR>[Called By]<UL><LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProjectOpen
</UL>

<P><STRONG><a name="[1fa]"></a>halAfeGetCellVoltage</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, halafe.o(i.halAfeGetCellVoltage))
<BR><BR>[Called By]<UL><LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appBalanceCheckSet
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appBalanceCheckRelease
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAverageCellVoltage
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiProtectUvpHandler
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiProtectOvpHandler
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciNotificationCellVoltage
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;halAfeUpdateMinMaxCellVoltage
</UL>

<P><STRONG><a name="[3b3]"></a>halAfeGetCurrentAdcValue</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, halafe.o(i.halAfeGetCurrentAdcValue))
<BR><BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;davinciCanAdc
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;halAfeCurrentGetCurrentValue
</UL>

<P><STRONG><a name="[34d]"></a>halAfeGetCurrentValue</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, halafe.o(i.halAfeGetCurrentValue))
<BR><BR>[Called By]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appGaugeGetCurrentValue
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gaugeUpdateCurrentMode
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notifyBaseCurrent
</UL>

<P><STRONG><a name="[30d]"></a>halAfeGetMaxCellVoltage</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, halafe.o(i.halAfeGetMaxCellVoltage))
<BR><BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appBalanceCheck
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiProtectOvpPfHandler
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notifyBaseMinMaxValue
</UL>

<P><STRONG><a name="[312]"></a>halAfeGetMinCellVoltage</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, halafe.o(i.halAfeGetMinCellVoltage))
<BR><BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appBalanceCheck
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiProtectUvpPfHandler
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notifyBaseMinMaxValue
</UL>

<P><STRONG><a name="[36a]"></a>halAfeGetState</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, halafebq796xx.o(i.halAfeGetState))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = halAfeGetState
</UL>
<BR>[Calls]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProjectIsInSimuMode
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gaugeSwTimerHandler
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProtectSwTimerHandler
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkFbSignal
</UL>

<P><STRONG><a name="[3b2]"></a>halAfeGetVBatAdcValue</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, halafe.o(i.halAfeGetVBatAdcValue))
<BR><BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;davinciCanAdc
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateInternalVbatVoltage
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateExternalVbatVoltage
</UL>

<P><STRONG><a name="[41e]"></a>halAfeGetVBatVoltage</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, halafe.o(i.halAfeGetVBatVoltage))
<BR><BR>[Called By]<UL><LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;putSelfDataToBmsBuffer
<LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notifyBaseVBatVoltage
</UL>

<P><STRONG><a name="[3a1]"></a>halAfeIsL1Protect</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, halafebq796xx.o(i.halAfeIsL1Protect))
<BR><BR>[Called By]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkOtherFlag
</UL>

<P><STRONG><a name="[3a2]"></a>halAfeIsL2Protect</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, halafebq796xx.o(i.halAfeIsL2Protect))
<BR><BR>[Called By]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkOtherFlag
</UL>

<P><STRONG><a name="[33f]"></a>halAfeSetBalanceOnFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, halafebq796xx.o(i.halAfeSetBalanceOnFlag))
<BR><BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appBalanceSwTimerHandler
</UL>

<P><STRONG><a name="[17d]"></a>halAfeSetCellVoltage</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, halafe.o(i.halAfeSetCellVoltage))
<BR><BR>[Called By]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanDebugCellVSimu
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialUartPackageParser
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DecodeCellVoltageByCellFlag
</UL>

<P><STRONG><a name="[17e]"></a>halAfeSetCurrentAdcValue</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, halafe.o(i.halAfeSetCurrentAdcValue))
<BR><BR>[Called By]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanDebugCurrentAdc
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ads7946_callBack
</UL>

<P><STRONG><a name="[189]"></a>halAfeSetNtcAdcData</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, halafe.o(i.halAfeSetNtcAdcData))
<BR><BR>[Called By]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanDebugNtcVSimu
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanDebugNtcTSimu
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialUartPackageParser
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DecodeNtcVoltageByNtcFlag
</UL>

<P><STRONG><a name="[42e]"></a>halAfeSetPhysicalBalancePosition</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, halafebq796xx.o(i.halAfeSetPhysicalBalancePosition))
<BR><BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setupPhysicalBalancePosition
</UL>

<P><STRONG><a name="[195]"></a>halAfeSetVBatAdcValue</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, halafe.o(i.halAfeSetVBatAdcValue))
<BR><BR>[Called By]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanDebugVbatAdc
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ads7946_callBack
</UL>

<P><STRONG><a name="[194]"></a>halAfeSetVBatVoltage</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, halafe.o(i.halAfeSetVBatVoltage))
<BR><BR>[Called By]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanDebugVBatSimu
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateInternalVbatVoltage
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateExternalVbatVoltage
</UL>

<P><STRONG><a name="[39c]"></a>halAfeUpdateMinMaxCellVoltage</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, halafe.o(i.halAfeUpdateMinMaxCellVoltage))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = halAfeUpdateMinMaxCellVoltage
</UL>
<BR>[Calls]<UL><LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;halAfeGetCellVoltage
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParGetCellNumber
</UL>
<BR>[Called By]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkMinMaxCellVoltage
</UL>

<P><STRONG><a name="[39d]"></a>halAfeUpdateMinMaxNtcTempVoltage</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, halafe.o(i.halAfeUpdateMinMaxNtcTempVoltage))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = halAfeUpdateMinMaxNtcTempVoltage
</UL>
<BR>[Calls]<UL><LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParGetNtcNumber
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalAfeGetNtcAdc
</UL>
<BR>[Called By]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkMinMaxNtcTempVoltage
</UL>

<P><STRONG><a name="[193]"></a>halBspFanRelayOff</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, halbsp.o(i.halBspFanRelayOff))
<BR><BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanDebugRelayControl
</UL>

<P><STRONG><a name="[192]"></a>halBspFanRelayOn</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, halbsp.o(i.halBspFanRelayOn))
<BR><BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanDebugRelayControl
</UL>

<P><STRONG><a name="[18f]"></a>halBspNegtiveRelayOff</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, halbsp.o(i.halBspNegtiveRelayOff))
<BR><BR>[Called By]<UL><LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiRelayControlMainRelayOff
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanDebugRelayControl
</UL>

<P><STRONG><a name="[18e]"></a>halBspNegtiveRelayOn</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, halbsp.o(i.halBspNegtiveRelayOn))
<BR><BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanDebugRelayControl
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;turnOnRelayProcess
</UL>

<P><STRONG><a name="[18d]"></a>halBspPostiveRelayOff</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, halbsp.o(i.halBspPostiveRelayOff))
<BR><BR>[Called By]<UL><LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiRelayControlMainRelayOff
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanDebugRelayControl
</UL>

<P><STRONG><a name="[18c]"></a>halBspPostiveRelayOn</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, halbsp.o(i.halBspPostiveRelayOn))
<BR><BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanDebugRelayControl
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;turnOnRelayProcess
</UL>

<P><STRONG><a name="[191]"></a>halBspPreDischargeRelayOff</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, halbsp.o(i.halBspPreDischargeRelayOff))
<BR><BR>[Called By]<UL><LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiRelayControlMainRelayOff
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanDebugRelayControl
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;turnOnRelayProcess
</UL>

<P><STRONG><a name="[190]"></a>halBspPreDischargeRelayOn</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, halbsp.o(i.halBspPreDischargeRelayOn))
<BR><BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanDebugRelayControl
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;turnOnRelayProcess
</UL>

<P><STRONG><a name="[3f4]"></a>hal_internal_adc_channel_find</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, smp_adc.o(i.hal_internal_adc_channel_find))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = hal_internal_adc_channel_find
</UL>
<BR>[Called By]<UL><LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_internal_adc_get
</UL>

<P><STRONG><a name="[3f0]"></a>hal_internal_adc_get</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, smp_adc.o(i.hal_internal_adc_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = hal_internal_adc_get &rArr; hal_internal_adc_channel_find
</UL>
<BR>[Calls]<UL><LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_internal_adc_channel_find
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getScuTempValue
</UL>

<P><STRONG><a name="[bd]"></a>irm_data_ready_cb</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, main.o(i.irm_data_ready_cb))
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.main)
</UL>
<P><STRONG><a name="[35d]"></a>libGetUint16</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, libdata.o(i.libGetUint16))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = libGetUint16
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protectEventHandler
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProjectDavinciBalanceEventHandler
</UL>

<P><STRONG><a name="[70]"></a>main</STRONG> (Thumb, 1724 bytes, Stack size 56 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 2812<LI>Call Chain = main &rArr; appProjectOpen &rArr; apiSysParOpen &rArr; loadSysPar &rArr; appSerialCanDavinciSendTextMessage &rArr; appSerialCanDavinciPutPkgToCanFifo &rArr; smp_can_put &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_time_count_set
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_time_count_get
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_mx25l_flash_read_status
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_mx25l_flash_init
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_adc_adc_para_init
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_ADS7946_init
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxInit
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_internal_adc_get
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_start_setting
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_init_default_load
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_init
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_direction_set_steps
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_delay_ms
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_data_frame_parser
<LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_clear_fifobuffer
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_Read_Stack_FaultSummary
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_Read_AFE_ALL_VCELL
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_Read_AFE_ALL_ADC
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_Init_Steps
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bq796xx_event_RegisteCB
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_flash_log_managment_init
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialUartSendMessage
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProjectOpen
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiIRMonitoringOpen
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiIRMonitoringGetVstack
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiFuCheckMagicCode
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_Init
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX25L_SPI_send_command
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MAX7219_Display_1
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MAX7219_All_Display
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LibSwTimerHandle
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LibSwTimerClearCount
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalBspInit
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_uart_rx_process
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config_HSE_80MHz
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_DMA_Init
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[402]"></a>max7219_SendByte</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, smp_max7219.o(i.max7219_SendByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = max7219_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;max7219_small_delay
</UL>
<BR>[Called By]<UL><LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxSendSequence
</UL>

<P><STRONG><a name="[403]"></a>max7219_small_delay</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, smp_max7219.o(i.max7219_small_delay))
<BR><BR>[Called By]<UL><LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxSendSequence
<LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;max7219_SendByte
</UL>

<P><STRONG><a name="[3f8]"></a>maxInit</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, smp_max7219.o(i.maxInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = maxInit &rArr; maxSetSegmentMode &rArr; maxSendSequence &rArr; max7219_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxSetTestMode
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxSetSegmentMode
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxSetLimit
<LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxSetIntensity
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxPowerUp
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[404]"></a>maxPowerUp</STRONG> (Thumb, 44 bytes, Stack size 40 bytes, smp_max7219.o(i.maxPowerUp))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = maxPowerUp &rArr; maxSendSequence &rArr; max7219_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxSendSequence
</UL>
<BR>[Called By]<UL><LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxInit
</UL>

<P><STRONG><a name="[29e]"></a>maxSendSequence</STRONG> (Thumb, 48 bytes, Stack size 12 bytes, smp_max7219.o(i.maxSendSequence))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = maxSendSequence &rArr; max7219_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;max7219_small_delay
<LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;max7219_SendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MAX7219_Display_1
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MAX7219_All_Display
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxSetTestMode
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxSetSegmentMode
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxSetLimit
<LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxSetIntensity
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxPowerUp
</UL>

<P><STRONG><a name="[406]"></a>maxSetIntensity</STRONG> (Thumb, 44 bytes, Stack size 40 bytes, smp_max7219.o(i.maxSetIntensity))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = maxSetIntensity &rArr; maxSendSequence &rArr; max7219_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxSendSequence
</UL>
<BR>[Called By]<UL><LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxInit
</UL>

<P><STRONG><a name="[405]"></a>maxSetLimit</STRONG> (Thumb, 48 bytes, Stack size 40 bytes, smp_max7219.o(i.maxSetLimit))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = maxSetLimit &rArr; maxSendSequence &rArr; max7219_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxSendSequence
</UL>
<BR>[Called By]<UL><LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxInit
</UL>

<P><STRONG><a name="[407]"></a>maxSetSegmentMode</STRONG> (Thumb, 54 bytes, Stack size 44 bytes, smp_max7219.o(i.maxSetSegmentMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = maxSetSegmentMode &rArr; maxSendSequence &rArr; max7219_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxSendSequence
</UL>
<BR>[Called By]<UL><LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxInit
</UL>

<P><STRONG><a name="[408]"></a>maxSetTestMode</STRONG> (Thumb, 44 bytes, Stack size 40 bytes, smp_max7219.o(i.maxSetTestMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = maxSetTestMode &rArr; maxSendSequence &rArr; max7219_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxSendSequence
</UL>
<BR>[Called By]<UL><LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxInit
</UL>

<P><STRONG><a name="[340]"></a>saveScuIdPar</STRONG> (Thumb, 92 bytes, Stack size 32 bytes, apisyspar.o(i.saveScuIdPar))
<BR><BR>[Stack]<UL><LI>Max Depth = 396<LI>Call Chain = saveScuIdPar &rArr; appSerialCanDavinciSendTextMessage &rArr; appSerialCanDavinciPutPkgToCanFifo &rArr; smp_can_put &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciSendTextMessage
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalEePromWrite
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalEePromErase
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkOdInSwTimerHandler
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appBmsAssignScuId
</UL>

<P><STRONG><a name="[356]"></a>setupOcvTable</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, appgauge.o(i.setupOcvTable))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = setupOcvTable
</UL>
<BR>[Calls]<UL><LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParGetOcvTable
</UL>
<BR>[Called By]<UL><LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appGaugeOpen
</UL>

<P><STRONG><a name="[430]"></a>smp_ADS7946_channel_select</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, smp_ads7946_driver.o(i.smp_ADS7946_channel_select))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = smp_ADS7946_channel_select &rArr; smp_gpio_set_state
</UL>
<BR>[Calls]<UL><LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_gpio_set_state
</UL>
<BR>[Called By]<UL><LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_ADS7946_get_data
</UL>

<P><STRONG><a name="[38b]"></a>smp_ADS7946_get_data</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, smp_ads7946_driver.o(i.smp_ADS7946_get_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 228<LI>Call Chain = smp_ADS7946_get_data &rArr; smp_spi_master_send_recv &rArr; HAL_SPI_Receive_DMA &rArr; HAL_SPI_TransmitReceive_DMA &rArr; HAL_DMA_Start_IT &rArr; DMA_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_ADS7946_channel_select
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_spi_master_send_recv
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_irm_trigger_voltage_data_cb
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;currentSwTimerHandler
</UL>

<P><STRONG><a name="[38a]"></a>smp_ADS7946_init</STRONG> (Thumb, 138 bytes, Stack size 24 bytes, smp_ads7946_driver.o(i.smp_ADS7946_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = smp_ADS7946_init &rArr; smp_spi_master_init &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_spi_master_init
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_spi_master_cs_init
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_gpio_init
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_irm_get_device_init_cb
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;halAfeCurrentOpen
</UL>

<P><STRONG><a name="[324]"></a>smp_adc_adc_para_init</STRONG> (Thumb, 278 bytes, Stack size 64 bytes, smp_adc.o(i.smp_adc_adc_para_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 712<LI>Call Chain = smp_adc_adc_para_init &rArr; HAL_ADC_Init &rArr; HAL_ADC_MspInit &rArr; HalBspSetGpio &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_Init
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_ConfigChannel
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADCEx_Calibration_Start
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADCEx_MultiModeConfigChannel
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_Start_DMA
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetADCChParaSTM32L496
<LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Enable_DMA_Control_Clock
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiScuTempOpen
</UL>

<P><STRONG><a name="[2a7]"></a>smp_can_fifo_pop</STRONG> (Thumb, 54 bytes, Stack size 12 bytes, smp_can_fifo.o(i.smp_can_fifo_pop))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = smp_can_fifo_pop
</UL>
<BR>[Called By]<UL><LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_can_put
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_can_get
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PutCanDataToMailBox
</UL>

<P><STRONG><a name="[220]"></a>smp_can_fifo_push</STRONG> (Thumb, 68 bytes, Stack size 12 bytes, smp_can_fifo.o(i.smp_can_fifo_push))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = smp_can_fifo_push
</UL>
<BR>[Called By]<UL><LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_can_put
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_RxFifo0MsgPendingCallback
</UL>

<P><STRONG><a name="[395]"></a>smp_can_get</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, smp_can.o(i.smp_can_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = smp_can_get &rArr; smp_can_fifo_pop
</UL>
<BR>[Calls]<UL><LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_can_fifo_pop
</UL>
<BR>[Called By]<UL><LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canDavinciPaserCanPackage
</UL>

<P><STRONG><a name="[379]"></a>smp_can_init</STRONG> (Thumb, 334 bytes, Stack size 80 bytes, smp_can.o(i.smp_can_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = smp_can_init &rArr; HAL_CAN_Init &rArr; HAL_CAN_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_Start
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_Init
<LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_ConfigFilter
<LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_ActivateNotification
<LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;can_fifo_init
</UL>
<BR>[Called By]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciOpen
</UL>

<P><STRONG><a name="[37a]"></a>smp_can_put</STRONG> (Thumb, 118 bytes, Stack size 48 bytes, smp_can.o(i.smp_can_put))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = smp_can_put &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_can_fifo_push
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_can_fifo_pop
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_GetTxMailboxesFreeLevel
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_AddTxMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciPutPkgToCanFifo
</UL>

<P><STRONG><a name="[438]"></a>smp_fifo_flash_clean</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, smp_fifo_flash.o(i.smp_fifo_flash_clean))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = smp_fifo_flash_clean
</UL>
<BR>[Calls]<UL><LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_fifo_flash_open
</UL>

<P><STRONG><a name="[2a2]"></a>smp_fifo_flash_get_size</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, smp_fifo_flash.o(i.smp_fifo_flash_get_size))
<BR><BR>[Called By]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX25L_SPI_send_command
</UL>

<P><STRONG><a name="[439]"></a>smp_fifo_flash_open</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, smp_fifo_flash.o(i.smp_fifo_flash_open))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = smp_fifo_flash_open &rArr; smp_fifo_flash_clean
</UL>
<BR>[Calls]<UL><LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_fifo_flash_clean
</UL>
<BR>[Called By]<UL><LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_mx25l_flash_init
</UL>

<P><STRONG><a name="[2a0]"></a>smp_fifo_flash_pop</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, smp_fifo_flash.o(i.smp_fifo_flash_pop))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = smp_fifo_flash_pop
</UL>
<BR>[Calls]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX25L_SPI_1_event_handler
</UL>

<P><STRONG><a name="[43a]"></a>smp_fifo_flash_push</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, smp_fifo_flash.o(i.smp_fifo_flash_push))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = smp_fifo_flash_push
</UL>
<BR>[Calls]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_mx25l_flash_sector_erase_sectornum
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_mx25l_flash_fast_read_data_bytes_page
</UL>

<P><STRONG><a name="[2a4]"></a>smp_fifo_flash_read</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, smp_fifo_flash.o(i.smp_fifo_flash_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = smp_fifo_flash_read
</UL>
<BR>[Calls]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX25L_SPI_send_command
</UL>

<P><STRONG><a name="[275]"></a>smp_fifo_get_size</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, smp_fifo.o(i.smp_fifo_get_size))
<BR><BR>[Called By]<UL><LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_uart_put
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_TxCpltCallback
</UL>

<P><STRONG><a name="[276]"></a>smp_fifo_pop</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, smp_fifo.o(i.smp_fifo_pop))
<BR><BR>[Called By]<UL><LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_uart_get
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_uart_put
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_TxCpltCallback
</UL>

<P><STRONG><a name="[272]"></a>smp_fifo_push</STRONG> (Thumb, 54 bytes, Stack size 12 bytes, smp_fifo.o(i.smp_fifo_push))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = smp_fifo_push
</UL>
<BR>[Called By]<UL><LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_uart_put
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_RxCpltCallback
</UL>

<P><STRONG><a name="[3df]"></a>smp_gpio_init</STRONG> (Thumb, 210 bytes, Stack size 32 bytes, smp_gpio.o(i.smp_gpio_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = smp_gpio_init &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_EnableVddIO2
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMP_GPIO_PORT
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMP_GPIO_PIN
<LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMP_GPIO_MODE
</UL>
<BR>[Called By]<UL><LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_mx25l_flash_init
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_ADS7946_init
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_init
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_spi_master_cs_init
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_switch_rx_pin_type_setting
</UL>

<P><STRONG><a name="[3c3]"></a>smp_gpio_set_state</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, smp_gpio.o(i.smp_gpio_set_state))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = smp_gpio_set_state
</UL>
<BR>[Calls]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_TogglePin
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMP_GPIO_PORT
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMP_GPIO_PIN
</UL>
<BR>[Called By]<UL><LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_mx25l_flash_init
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_init
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_Init_Steps
<LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_ADS7946_channel_select
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_spi_master_cs_set
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_spi_master_cs_init
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_switch_rx_pin_type_setting
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_rx_pin_wakeup
</UL>

<P><STRONG><a name="[389]"></a>smp_mx25l_flash_fast_read_data_bytes_page</STRONG> (Thumb, 62 bytes, Stack size 280 bytes, smp_mx25l_driver.o(i.smp_mx25l_flash_fast_read_data_bytes_page))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = smp_mx25l_flash_fast_read_data_bytes_page &rArr; smp_fifo_flash_push
</UL>
<BR>[Calls]<UL><LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_fifo_flash_push
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sector_header_event_handler
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_flash_sector_header_load
</UL>

<P><STRONG><a name="[3fa]"></a>smp_mx25l_flash_init</STRONG> (Thumb, 130 bytes, Stack size 16 bytes, smp_mx25l_driver.o(i.smp_mx25l_flash_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = smp_mx25l_flash_init &rArr; smp_spi_master_init &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_fifo_flash_open
<LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_spi_master_init
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_spi_master_cs_init
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_gpio_set_state
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_gpio_init
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_fifo_init
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3fe]"></a>smp_mx25l_flash_read_status</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, smp_mx25l_driver.o(i.smp_mx25l_flash_read_status))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = smp_mx25l_flash_read_status &rArr; smp_spi_master_send_recv_blocking &rArr; HAL_SPI_Receive &rArr; HAL_SPI_TransmitReceive &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFifoStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_spi_master_send_recv_blocking
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[385]"></a>smp_mx25l_flash_sector_erase_sectornum</STRONG> (Thumb, 52 bytes, Stack size 280 bytes, smp_mx25l_driver.o(i.smp_mx25l_flash_sector_erase_sectornum))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = smp_mx25l_flash_sector_erase_sectornum &rArr; smp_fifo_flash_push
</UL>
<BR>[Calls]<UL><LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_fifo_flash_push
</UL>
<BR>[Called By]<UL><LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_flash_log_managment_clean_reflash_memory
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_flash_log_managment_clean_head
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_flash_log_managment_clean_fix_memory
</UL>

<P><STRONG><a name="[2a3]"></a>smp_mx25l_flash_write_enable</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, smp_mx25l_driver.o(i.smp_mx25l_flash_write_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = smp_mx25l_flash_write_enable &rArr; smp_spi_master_send_recv_blocking &rArr; HAL_SPI_Receive &rArr; HAL_SPI_TransmitReceive &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFifoStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_spi_master_send_recv_blocking
</UL>
<BR>[Called By]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX25L_SPI_send_command
</UL>

<P><STRONG><a name="[431]"></a>smp_spi_master_cs_init</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, smp_spi_dma.o(i.smp_spi_master_cs_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = smp_spi_master_cs_init &rArr; smp_gpio_init &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_gpio_set_state
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_gpio_init
</UL>
<BR>[Called By]<UL><LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_mx25l_flash_init
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_ADS7946_init
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_w5500_spi_config
</UL>

<P><STRONG><a name="[17b]"></a>smp_spi_master_cs_set</STRONG> (Thumb, 128 bytes, Stack size 16 bytes, smp_spi_dma.o(i.smp_spi_master_cs_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = smp_spi_master_cs_set &rArr; smp_gpio_set_state
</UL>
<BR>[Calls]<UL><LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_gpio_set_state
</UL>
<BR>[Called By]<UL><LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_spi_master_send_recv_blocking
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_spi_master_send_recv
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_Channel2_IRQHandler
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_Channel1_IRQHandler
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel5_IRQHandler
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel4_IRQHandler
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel3_IRQHandler
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel2_IRQHandler
</UL>

<P><STRONG><a name="[432]"></a>smp_spi_master_init</STRONG> (Thumb, 592 bytes, Stack size 40 bytes, smp_spi_dma.o(i.smp_spi_master_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = smp_spi_master_init &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_mx25l_flash_init
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_ADS7946_init
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_w5500_spi_config
</UL>

<P><STRONG><a name="[2a5]"></a>smp_spi_master_send_recv</STRONG> (Thumb, 386 bytes, Stack size 136 bytes, smp_spi_dma.o(i.smp_spi_master_send_recv))
<BR><BR>[Stack]<UL><LI>Max Depth = 212<LI>Call Chain = smp_spi_master_send_recv &rArr; HAL_SPI_Receive_DMA &rArr; HAL_SPI_TransmitReceive_DMA &rArr; HAL_DMA_Start_IT &rArr; DMA_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Transmit_DMA
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Receive_DMA
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_spi_master_cs_set
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_ADS7946_get_data
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX25L_SPI_send_command
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_w5500_spiDMA_write_byte
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_w5500_spiDMA_read_byte
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_w5500_spiDMA_WriteMulti
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_w5500_spiDMA_ReadMulti
</UL>

<P><STRONG><a name="[441]"></a>smp_spi_master_send_recv_blocking</STRONG> (Thumb, 362 bytes, Stack size 136 bytes, smp_spi_dma.o(i.smp_spi_master_send_recv_blocking))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = smp_spi_master_send_recv_blocking &rArr; HAL_SPI_Receive &rArr; HAL_SPI_TransmitReceive &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFifoStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Transmit
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Receive
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_spi_master_cs_set
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_mx25l_flash_read_status
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_mx25l_flash_write_enable
</UL>

<P><STRONG><a name="[3d8]"></a>smp_time_count_get</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, smp_drv_bq796xx.o(i.smp_time_count_get))
<BR><BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_check_respone_event2
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_check_respone_event
</UL>

<P><STRONG><a name="[3d7]"></a>smp_time_count_set</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, smp_drv_bq796xx.o(i.smp_time_count_set))
<BR><BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_check_respone_event2
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_check_respone_event
</UL>

<P><STRONG><a name="[37e]"></a>smp_uart_get</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, smp_uart.o(i.smp_uart_get))
<BR><BR>[Calls]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_fifo_pop
</UL>
<BR>[Called By]<UL><LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_data_frame_parser
<LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_clear_fifobuffer
<LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_uart_rx_process
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialUartPackageJudgee
</UL>

<P><STRONG><a name="[37c]"></a>smp_uart_init</STRONG> (Thumb, 328 bytes, Stack size 32 bytes, smp_uart.o(i.smp_uart_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = smp_uart_init &rArr; HAL_UART_Init &rArr; HAL_UART_MspInit &rArr; HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLLSAI2_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Receive_IT
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Receive_DMA
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_DeInit
<LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_fifo_init
</UL>
<BR>[Called By]<UL><LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialUartDavinciOpen
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_switch_rx_pin_type_setting
</UL>

<P><STRONG><a name="[381]"></a>smp_uart_put</STRONG> (Thumb, 206 bytes, Stack size 16 bytes, smp_uart.o(i.smp_uart_put))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = smp_uart_put &rArr; HAL_UART_Transmit_DMA &rArr; HAL_DMA_Start_IT &rArr; DMA_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_fifo_push
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_fifo_pop
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_fifo_get_size
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit_IT
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit_DMA
</UL>
<BR>[Called By]<UL><LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialUartSendMessage
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bq796xx_uart_puts
</UL>

<P><STRONG><a name="[2cd]"></a>smp_w5500_getLocalIP</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, smp_w5500_dma.o(i.smp_w5500_getLocalIP))
<BR><BR>[Stack]<UL><LI>Max Depth = 236<LI>Call Chain = smp_w5500_getLocalIP &rArr; smp_w5500_spiDMA_ReadMulti &rArr; smp_spi_master_send_recv &rArr; HAL_SPI_Receive_DMA &rArr; HAL_SPI_TransmitReceive_DMA &rArr; HAL_DMA_Start_IT &rArr; DMA_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_w5500_spiDMA_ReadMulti
</UL>
<BR>[Called By]<UL><LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W5500_Server_Step
</UL>

<P><STRONG><a name="[2cc]"></a>smp_w5500_spiDMA_ReadMulti</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, smp_w5500_dma.o(i.smp_w5500_spiDMA_ReadMulti))
<BR><BR>[Stack]<UL><LI>Max Depth = 236<LI>Call Chain = smp_w5500_spiDMA_ReadMulti &rArr; smp_spi_master_send_recv &rArr; HAL_SPI_Receive_DMA &rArr; HAL_SPI_TransmitReceive_DMA &rArr; HAL_DMA_Start_IT &rArr; DMA_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_spi_master_send_recv
</UL>
<BR>[Called By]<UL><LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_w5500_getLocalIP
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W5500_Server_Step
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W5500_Init_Step
</UL>

<P><STRONG><a name="[2cb]"></a>smp_w5500_spiDMA_WriteMulti</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, smp_w5500_dma.o(i.smp_w5500_spiDMA_WriteMulti))
<BR><BR>[Stack]<UL><LI>Max Depth = 236<LI>Call Chain = smp_w5500_spiDMA_WriteMulti &rArr; smp_spi_master_send_recv &rArr; HAL_SPI_Receive_DMA &rArr; HAL_SPI_TransmitReceive_DMA &rArr; HAL_DMA_Start_IT &rArr; DMA_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_spi_master_send_recv
</UL>
<BR>[Called By]<UL><LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W5500_Server_Step
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W5500_Init_Step
</UL>

<P><STRONG><a name="[2c9]"></a>smp_w5500_spiDMA_read_byte</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, smp_w5500_dma.o(i.smp_w5500_spiDMA_read_byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 228<LI>Call Chain = smp_w5500_spiDMA_read_byte &rArr; smp_spi_master_send_recv &rArr; HAL_SPI_Receive_DMA &rArr; HAL_SPI_TransmitReceive_DMA &rArr; HAL_DMA_Start_IT &rArr; DMA_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_spi_master_send_recv
</UL>
<BR>[Called By]<UL><LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W5500_Server_Step
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W5500_Init_Step
</UL>

<P><STRONG><a name="[2c7]"></a>smp_w5500_spiDMA_write_byte</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, smp_w5500_dma.o(i.smp_w5500_spiDMA_write_byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 228<LI>Call Chain = smp_w5500_spiDMA_write_byte &rArr; smp_spi_master_send_recv &rArr; HAL_SPI_Receive_DMA &rArr; HAL_SPI_TransmitReceive_DMA &rArr; HAL_DMA_Start_IT &rArr; DMA_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_spi_master_send_recv
</UL>
<BR>[Called By]<UL><LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W5500_Server_Step
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W5500_Init_Step
</UL>

<P><STRONG><a name="[286]"></a>smp_w5500_spi_config</STRONG> (Thumb, 170 bytes, Stack size 40 bytes, smp_w5500_dma.o(i.smp_w5500_spi_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = smp_w5500_spi_config &rArr; smp_spi_master_init &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_spi_master_init
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_spi_master_cs_init
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_W5500_Open
</UL>

<P><STRONG><a name="[c4]"></a>spi_master_w5500_event_handler</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, smp_w5500_dma.o(i.spi_master_w5500_event_handler))
<BR>[Address Reference Count : 1]<UL><LI> smp_w5500_dma.o(i.smp_w5500_spi_config)
</UL>
<P><STRONG><a name="[3ff]"></a>test_uart_rx_process</STRONG> (Thumb, 150 bytes, Stack size 16 bytes, main.o(i.test_uart_rx_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = test_uart_rx_process &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking
</UL>
<BR>[Calls]<UL><LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_uart_get
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_flash_log_managment_clean_reflash_memory
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_flash_log_managment_clean_head
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_flash_log_managment_clean_fix_memory
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_flash_log_managment_clean_all_memory
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[442]"></a>uart_fifo_init</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, smp_uart.o(i.uart_fifo_init))
<BR><BR>[Called By]<UL><LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_uart_init
</UL>

<P><STRONG><a name="[2c8]"></a>w5500_phyconf_transfer_to_uint8</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, smp_w5500_dma.o(i.w5500_phyconf_transfer_to_uint8))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = w5500_phyconf_transfer_to_uint8
</UL>
<BR>[Called By]<UL><LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W5500_Init_Step
</UL>

<P><STRONG><a name="[2ca]"></a>w5500_uint8_transfer_to_phyconf</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, smp_w5500_dma.o(i.w5500_uint8_transfer_to_phyconf))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = w5500_uint8_transfer_to_phyconf
</UL>
<BR>[Called By]<UL><LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W5500_Init_Step
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[ab]"></a>app_imr_ads7946_callBack</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, main.o(i.app_imr_ads7946_callBack))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = app_imr_ads7946_callBack
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.app_irm_trigger_voltage_data_cb)
</UL>
<P><STRONG><a name="[3f7]"></a>smp_DMA_Init</STRONG> (Thumb, 152 bytes, Stack size 8 bytes, main.o(i.smp_DMA_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = smp_DMA_Init &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a1]"></a>appProjectDavinciBalanceEventHandler</STRONG> (Thumb, 98 bytes, Stack size 112 bytes, appprojecthvess.o(i.appProjectDavinciBalanceEventHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 476<LI>Call Chain = appProjectDavinciBalanceEventHandler &rArr; appSerialCanDavinciSendTextMessage &rArr; appSerialCanDavinciPutPkgToCanFifo &rArr; smp_can_put &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;libGetUint16
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciSendTextMessage
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appprojecthvess.o(i.appProjectOpen)
</UL>
<P><STRONG><a name="[9e]"></a>appProjectHwTimerHandler</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, appprojecthvess.o(i.appProjectHwTimerHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = appProjectHwTimerHandler &rArr; LibHwTimerHandle &rArr; _LibRegisterTypeHandlerExe &rArr; _LibRegisterRm
</UL>
<BR>[Calls]<UL><LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LibSwTimerHwHandler
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LibHwTimerHandle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appprojecthvess.o(i.appProjectOpen)
</UL>
<P><STRONG><a name="[a2]"></a>appProjectSwTimerHandler</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, appprojecthvess.o(i.appProjectSwTimerHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = appProjectSwTimerHandler &rArr; apiRamSaveRtcDateTime &rArr; HalRtcGetSmpUnixTime &rArr; HalRtcGetDateTime &rArr; HAL_RTC_GetTime
</UL>
<BR>[Calls]<UL><LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiRamSaveRtcDateTime
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appprojecthvess.o(i.appProjectOpen)
</UL>
<P><STRONG><a name="[a3]"></a>buttonEventHandler</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, appprojecthvess.o(i.buttonEventHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 364<LI>Call Chain = buttonEventHandler &rArr; appSerialCanDavinciSendTextMessage &rArr; appSerialCanDavinciPutPkgToCanFifo &rArr; smp_can_put &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciSendTextMessage
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appprojecthvess.o(i.appProjectOpen)
</UL>
<P><STRONG><a name="[a0]"></a>gaugeEventHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, appprojecthvess.o(i.gaugeEventHandler))
<BR>[Address Reference Count : 1]<UL><LI> appprojecthvess.o(i.appProjectOpen)
</UL>
<P><STRONG><a name="[c0]"></a>ocpReleaseSwTimer</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, appprojecthvess.o(i.ocpReleaseSwTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ocpReleaseSwTimer &rArr; LibSwTimerClose &rArr; _LibRegisterRm
</UL>
<BR>[Calls]<UL><LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LibSwTimerClose
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalBspReleaseCtrl
</UL>
<BR>[Address Reference Count : 2]<UL><LI> appprojecthvess.o(i.ocpReleaseSwTimer)
<LI> appprojecthvess.o(i.releaseOCP)
</UL>
<P><STRONG><a name="[9f]"></a>protectEventHandler</STRONG> (Thumb, 1292 bytes, Stack size 8 bytes, appprojecthvess.o(i.protectEventHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 524<LI>Call Chain = protectEventHandler &rArr; apiEventLogSaveLogData &rArr; appSerialCanDavinciSendTextMessage &rArr; appSerialCanDavinciPutPkgToCanFifo &rArr; smp_can_put &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;relayOff
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;libGetUint16
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciSendTextMessage
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParUvpPfSet
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParOvpPfSet
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiEventLogSaveLogData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appprojecthvess.o(i.appProjectOpen)
</UL>
<P><STRONG><a name="[421]"></a>relayOff</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, appprojecthvess.o(i.relayOff))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = relayOff &rArr; apiRelayControlMainRelayOff
</UL>
<BR>[Calls]<UL><LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiRelayControlMainRelayOff
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protectEventHandler
</UL>

<P><STRONG><a name="[365]"></a>releaseOCP</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, appprojecthvess.o(i.releaseOCP))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = releaseOCP &rArr; LibSwTimerOpen &rArr; _LibRegisterAdd
</UL>
<BR>[Calls]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LibSwTimerOpen
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalBspReleaseCtrl
</UL>
<BR>[Called By]<UL><LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProjectOpen
</UL>

<P><STRONG><a name="[358]"></a>baseInfoIni</STRONG> (Thumb, 124 bytes, Stack size 112 bytes, appgauge.o(i.baseInfoIni))
<BR><BR>[Stack]<UL><LI>Max Depth = 476<LI>Call Chain = baseInfoIni &rArr; appSerialCanDavinciSendTextMessage &rArr; appSerialCanDavinciPutPkgToCanFifo &rArr; smp_can_put &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParGetTerminateVoltage
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParGetQmaxUpdateTimes
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParGetQmax
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParGetCycleCount
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiRamLoadSoc
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appGaugeSetQmax
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setupIdleTime
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loadTotalDischargeCountFromRam
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getTerminateSocFromOcvTable
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gaugeSetRmAndFcc
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciSendTextMessage
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appGaugeOpen
</UL>

<P><STRONG><a name="[353]"></a>chargeModeIni</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, appgauge.o(i.chargeModeIni))
<BR><BR>[Called By]<UL><LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appGaugeOpen
</UL>

<P><STRONG><a name="[3e4]"></a>gaugeCalAvgCurrent</STRONG> (Thumb, 160 bytes, Stack size 32 bytes, appgauge.o(i.gaugeCalAvgCurrent))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = gaugeCalAvgCurrent &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appGaugeGetCurrentValue
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gaugeCalCapacity
</UL>

<P><STRONG><a name="[3e5]"></a>gaugeCalCapacity</STRONG> (Thumb, 280 bytes, Stack size 24 bytes, appgauge.o(i.gaugeCalCapacity))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = gaugeCalCapacity &rArr; gaugeCalAvgCurrent &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appGaugeGetCurrentValue
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appGaugeGetCurrentMode
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gaugeUpdateCurrentMode
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gaugeCalAvgCurrent
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gaugeSwTimerHandler
</UL>

<P><STRONG><a name="[3e7]"></a>gaugeCalCellRValue</STRONG> (Thumb, 152 bytes, Stack size 32 bytes, appgauge.o(i.gaugeCalCellRValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = gaugeCalCellRValue &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appGaugeGetCurrentValue
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appGaugeGetCurrentMode
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetOcvVoltage
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAverageCellVoltage
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gaugeCorrectCapacity
</UL>

<P><STRONG><a name="[36c]"></a>gaugeCalSoc</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, appgauge.o(i.gaugeCalSoc))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = gaugeCalSoc &rArr; appScuGaugeCvtRmTomAh &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appScuGaugeCvtRmTomAh
</UL>
<BR>[Called By]<UL><LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appScuGaugeSetFcc
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gaugeCorrectCapacity
</UL>

<P><STRONG><a name="[3e9]"></a>gaugeCorrectCapacity</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, appgauge.o(i.gaugeCorrectCapacity))
<BR><BR>[Stack]<UL><LI>Max Depth = 636<LI>Call Chain = gaugeCorrectCapacity &rArr; gaugeReleaseMode &rArr; appScuGaugeUpdateQmax &rArr; apiSysParSetQmax &rArr; appSerialCanDavinciSendTextMessage &rArr; appSerialCanDavinciPutPkgToCanFifo &rArr; smp_can_put &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appGaugeGetCurrentMode
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scuGaugeUnReleasedMode
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gaugeReleaseMode
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gaugeCalSoc
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gaugeCalCellRValue
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gaugeSwTimerHandler
</UL>

<P><STRONG><a name="[9d]"></a>gaugeHwTimerHandler</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, appgauge.o(i.gaugeHwTimerHandler))
<BR>[Address Reference Count : 1]<UL><LI> appgauge.o(i.appGaugeOpen)
</UL>
<P><STRONG><a name="[354]"></a>gaugeQPassChargeIni</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, appgauge.o(i.gaugeQPassChargeIni))
<BR><BR>[Called By]<UL><LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appScuGaugeUpdateQmax
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gaugeReleaseMode
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appGaugeOpen
</UL>

<P><STRONG><a name="[355]"></a>gaugeRPassChargeIni</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, appgauge.o(i.gaugeRPassChargeIni))
<BR><BR>[Called By]<UL><LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appGaugeSetSoc0
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scuGaugeUnReleasedMode
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gaugeReleaseMode
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appGaugeOpen
</UL>

<P><STRONG><a name="[3eb]"></a>gaugeReleaseMode</STRONG> (Thumb, 348 bytes, Stack size 120 bytes, appgauge.o(i.gaugeReleaseMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 628<LI>Call Chain = gaugeReleaseMode &rArr; appScuGaugeUpdateQmax &rArr; apiSysParSetQmax &rArr; appSerialCanDavinciSendTextMessage &rArr; appSerialCanDavinciPutPkgToCanFifo &rArr; smp_can_put &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParGetDesignedCapacity
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getSocTableUseAvgCellVoltage
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appScuGaugeUpdateQmax
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAverageCellVoltage
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CvtQmaxPassChargeTomAh
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getTerminateSocFromOcvTable
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gaugeSetRmAndFcc
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gaugeRPassChargeIni
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gaugeQPassChargeIni
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciSendTextMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gaugeCorrectCapacity
</UL>

<P><STRONG><a name="[35b]"></a>gaugeSetRmAndFcc</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, appgauge.o(i.gaugeSetRmAndFcc))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = gaugeSetRmAndFcc &rArr; appScuGaugeSetFcc &rArr; CvtRaPassChargeTomAh &rArr; __aeabi_ldivmod &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appScuGaugeSetFcc
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appScuGaugeUpdateRm
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appScuGaugeUpdateQmax
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appGaugeSetSoc0
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gaugeReleaseMode
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;baseInfoIni
</UL>

<P><STRONG><a name="[9c]"></a>gaugeSwTimerHandler</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, appgauge.o(i.gaugeSwTimerHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 660<LI>Call Chain = gaugeSwTimerHandler &rArr; gaugeCorrectCapacity &rArr; gaugeReleaseMode &rArr; appScuGaugeUpdateQmax &rArr; apiSysParSetQmax &rArr; appSerialCanDavinciSendTextMessage &rArr; appSerialCanDavinciPutPkgToCanFifo &rArr; smp_can_put &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;halAfeGetState
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiRamSaveSoc
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;saveTotalDischargeCountToRam
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gaugeCorrectCapacity
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gaugeCalCapacity
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProjectIsInSimuMode
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appgauge.o(i.appGaugeOpen)
</UL>
<P><STRONG><a name="[3e6]"></a>gaugeUpdateCurrentMode</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, appgauge.o(i.gaugeUpdateCurrentMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = gaugeUpdateCurrentMode
</UL>
<BR>[Calls]<UL><LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;halAfeGetCurrentValue
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParGetZeroCurrentValue
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParGetMinChargeCurrentValue
</UL>
<BR>[Called By]<UL><LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gaugeCalCapacity
</UL>

<P><STRONG><a name="[172]"></a>getTerminateSocFromOcvTable</STRONG> (Thumb, 168 bytes, Stack size 12 bytes, appgauge.o(i.getTerminateSocFromOcvTable))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = getTerminateSocFromOcvTable
</UL>
<BR>[Called By]<UL><LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appGaugeSetSoc0
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckTerminateSocUseRa
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gaugeReleaseMode
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;baseInfoIni
</UL>

<P><STRONG><a name="[390]"></a>loadTotalDischargeCountFromRam</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, appgauge.o(i.loadTotalDischargeCountFromRam))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = loadTotalDischargeCountFromRam &rArr; apiRamLoadTotalDisChargeCount
</UL>
<BR>[Calls]<UL><LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiRamLoadTotalDisChargeCount
</UL>
<BR>[Called By]<UL><LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;baseInfoIni
</UL>

<P><STRONG><a name="[3ed]"></a>saveTotalDischargeCountToRam</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, appgauge.o(i.saveTotalDischargeCountToRam))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = saveTotalDischargeCountToRam &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiRamSaveTotalDisChargeCount
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appGaugeGetCurrentMode
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gaugeSwTimerHandler
</UL>

<P><STRONG><a name="[3ea]"></a>scuGaugeUnReleasedMode</STRONG> (Thumb, 408 bytes, Stack size 32 bytes, appgauge.o(i.scuGaugeUnReleasedMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 428<LI>Call Chain = scuGaugeUnReleasedMode &rArr; gaugeCheckCycleCount &rArr; apiSysParSetCycleCount &rArr; appSerialCanDavinciSendTextMessage &rArr; appSerialCanDavinciPutPkgToCanFifo &rArr; smp_can_put &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiRamSaveLastChgDhgTime
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gaugeCheckCycleCount
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appScuGaugeUpdateRm
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appGaugeGetCurrentValue
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appGaugeGetCurrentMode
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAverageCellVoltage
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CvtRaPassChargeTomAh
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gaugeRPassChargeIni
</UL>
<BR>[Called By]<UL><LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gaugeCorrectCapacity
</UL>

<P><STRONG><a name="[359]"></a>setupFullChargeCondition</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, appgauge.o(i.setupFullChargeCondition))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = setupFullChargeCondition
</UL>
<BR>[Calls]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParGetFullChargeCondition
</UL>
<BR>[Called By]<UL><LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appGaugeOpen
</UL>

<P><STRONG><a name="[391]"></a>setupIdleTime</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, appgauge.o(i.setupIdleTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = setupIdleTime &rArr; apiRamLoadReleaseTime &rArr; HalRtcGetSmpUnixTime &rArr; HalRtcGetDateTime &rArr; HAL_RTC_GetTime
</UL>
<BR>[Calls]<UL><LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiRamLoadReleaseTime
</UL>
<BR>[Called By]<UL><LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;baseInfoIni
</UL>

<P><STRONG><a name="[357]"></a>setupRaTable</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, appgauge.o(i.setupRaTable))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = setupRaTable
</UL>
<BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParGetRaTable
</UL>
<BR>[Called By]<UL><LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appGaugeOpen
</UL>

<P><STRONG><a name="[97]"></a>appBalanceCheck</STRONG> (Thumb, 238 bytes, Stack size 200 bytes, appbalance.o(i.appBalanceCheck))
<BR><BR>[Stack]<UL><LI>Max Depth = 464<LI>Call Chain = appBalanceCheck &rArr; LibNtcVoltageToTemperature &rArr; LibNtcRToTemperature &rArr; __hardfp_log &rArr; __kernel_poly &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;halAfeGetMinCellVoltage
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;halAfeGetMaxCellVoltage
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParGetBalanceRlx
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParGetBalanceDuty
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParGetBalanceChg
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalAfeGetMaxNtcTempAdc
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nextBalanceCheckProcess
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appBalanceClearAllFlag
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appBalanceCheckSet
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appBalanceCheckRelease
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appGaugeGetCurrentMode
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LibNtcVoltageToTemperature
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appbalance.o(i.appBalanceSwTimerHandler)
</UL>
<P><STRONG><a name="[bf]"></a>appBalanceCheckEvent</STRONG> (Thumb, 226 bytes, Stack size 40 bytes, appbalance.o(i.appBalanceCheckEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = appBalanceCheckEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParGetCellNumber
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appGaugeGetCurrentMode
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appbalance.o(i.nextBalanceCheckProcess)
</UL>
<P><STRONG><a name="[33c]"></a>appBalanceCheckRelease</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, appbalance.o(i.appBalanceCheckRelease))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = appBalanceCheckRelease
</UL>
<BR>[Calls]<UL><LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;halAfeGetCellVoltage
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParGetCellNumber
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appBalanceCheck
</UL>

<P><STRONG><a name="[33d]"></a>appBalanceCheckSet</STRONG> (Thumb, 92 bytes, Stack size 128 bytes, appbalance.o(i.appBalanceCheckSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = appBalanceCheckSet &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;halAfeGetCellVoltage
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParGetCellNumber
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appBalanceCheck
</UL>

<P><STRONG><a name="[33b]"></a>appBalanceClearAllFlag</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, appbalance.o(i.appBalanceClearAllFlag))
<BR><BR>[Calls]<UL><LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appBalanceCheck
</UL>

<P><STRONG><a name="[96]"></a>appBalanceSwTimerHandler</STRONG> (Thumb, 114 bytes, Stack size 8 bytes, appbalance.o(i.appBalanceSwTimerHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = appBalanceSwTimerHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;halAfeSetBalanceOnFlag
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParGetBalanceDuty
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appbalance.o(i.appBalanceOpen)
</UL>
<P><STRONG><a name="[3ee]"></a>getPhysicalCellPosition</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, appbalance.o(i.getPhysicalCellPosition))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = getPhysicalCellPosition
</UL>
<BR>[Calls]<UL><LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParGetCellFlag
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParGetBmuNumber
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setupPhysicalBalancePosition
</UL>

<P><STRONG><a name="[339]"></a>nextBalanceCheckProcess</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, appbalance.o(i.nextBalanceCheckProcess))
<BR><BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appBalanceCheck
</UL>

<P><STRONG><a name="[95]"></a>setupPhysicalBalancePosition</STRONG> (Thumb, 162 bytes, Stack size 296 bytes, appbalance.o(i.setupPhysicalBalancePosition))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = setupPhysicalBalancePosition &rArr; getPhysicalCellPosition
</UL>
<BR>[Calls]<UL><LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;halAfeSetPhysicalBalancePosition
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParGetBmuNumber
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getPhysicalCellPosition
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParGetCellNumber
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appbalance.o(i.appBalanceCheckEvent)
</UL>
<P><STRONG><a name="[345]"></a>appBmsIsValidScuid</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, appbms.o(i.appBmsIsValidScuid))
<BR><BR>[Called By]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateScuIdleCount
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appBmsSetScuVbat
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appBmsSetScuSystemFlag
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appBmsSetScuCurrent
</UL>

<P><STRONG><a name="[9a]"></a>checkOdInSwTimerHandler</STRONG> (Thumb, 120 bytes, Stack size 112 bytes, appbms.o(i.checkOdInSwTimerHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 508<LI>Call Chain = checkOdInSwTimerHandler &rArr; saveScuIdPar &rArr; appSerialCanDavinciSendTextMessage &rArr; appSerialCanDavinciPutPkgToCanFifo &rArr; smp_can_put &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendResetScuIdCanPackage
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendRequestIdCanPackage
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getOdInSignalDuty
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getOdInMode
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LibSwTimerOpen
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;saveScuIdPar
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appBmsExitScuIdRequestMode
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appBmsEnterScuIdAssignMode
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appbms.o(i.appBmsOpen)
</UL>
<P><STRONG><a name="[3ac]"></a>checkWhichScuRelayOn</STRONG> (Thumb, 400 bytes, Stack size 152 bytes, appbms.o(i.checkWhichScuRelayOn))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = checkWhichScuRelayOn &rArr; appSerialCanDavinciPutPkgToCanFifo &rArr; smp_can_put &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isScuProtect
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isRelayOn
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isDataValid
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciPutPkgToCanFifo
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParGetRelayOnDiffVoltage
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiRelayControlSetMasterTurnOnFlag
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;masterProcessor
</UL>

<P><STRONG><a name="[341]"></a>getOdInMode</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, appbms.o(i.getOdInMode))
<BR><BR>[Called By]<UL><LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getOdInSignalDuty
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkOdInSwTimerHandler
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appBmsIsInScuIdRequestMode
</UL>

<P><STRONG><a name="[39e]"></a>getOdInSignalDuty</STRONG> (Thumb, 146 bytes, Stack size 16 bytes, appbms.o(i.getOdInSignalDuty))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = getOdInSignalDuty &rArr; apiSignalFeedbackGetStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getOdInMode
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSignalFeedbackGetStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkOdInSwTimerHandler
</UL>

<P><STRONG><a name="[3ad]"></a>isDataValid</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, appbms.o(i.isDataValid))
<BR><BR>[Called By]<UL><LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkWhichScuRelayOn
</UL>

<P><STRONG><a name="[3af]"></a>isRelayOn</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, appbms.o(i.isRelayOn))
<BR><BR>[Called By]<UL><LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkWhichScuRelayOn
</UL>

<P><STRONG><a name="[3ae]"></a>isScuProtect</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, appbms.o(i.isScuProtect))
<BR><BR>[Called By]<UL><LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkWhichScuRelayOn
</UL>

<P><STRONG><a name="[400]"></a>masterProcessor</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, appbms.o(i.masterProcessor))
<BR><BR>[Stack]<UL><LI>Max Depth = 228<LI>Call Chain = masterProcessor &rArr; checkWhichScuRelayOn &rArr; appSerialCanDavinciPutPkgToCanFifo &rArr; smp_can_put &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;putSelfDataToBmsBuffer
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkWhichScuRelayOn
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProjectIsSystemReadyFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;masterSwTimerHandler
</UL>

<P><STRONG><a name="[99]"></a>masterSwTimerHandler</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, appbms.o(i.masterSwTimerHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 228<LI>Call Chain = masterSwTimerHandler &rArr; masterProcessor &rArr; checkWhichScuRelayOn &rArr; appSerialCanDavinciPutPkgToCanFifo &rArr; smp_can_put &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;masterProcessor
</UL>
<BR>[Address Reference Count : 3]<UL><LI> appbms.o(i.appBmsOpen)
<LI> appbms.o(i.appBmsResetScuId)
<LI> appbms.o(i.checkOdInSwTimerHandler)
</UL>
<P><STRONG><a name="[98]"></a>outputNextScuCanRequestIdSignal</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, appbms.o(i.outputNextScuCanRequestIdSignal))
<BR><BR>[Calls]<UL><LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalBspOdOutCtrl
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appbms.o(i.appBmsEnterScuIdAssignMode)
</UL>
<P><STRONG><a name="[401]"></a>putSelfDataToBmsBuffer</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, appbms.o(i.putSelfDataToBmsBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = putSelfDataToBmsBuffer
</UL>
<BR>[Calls]<UL><LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;halAfeGetVBatVoltage
<LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSystemFlagGetFlag2
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSystemFlagGetFlag1
</UL>
<BR>[Called By]<UL><LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;masterProcessor
</UL>

<P><STRONG><a name="[39f]"></a>sendRequestIdCanPackage</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, appbms.o(i.sendRequestIdCanPackage))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = sendRequestIdCanPackage &rArr; appSerialCanDavinciPutPkgToCanFifo &rArr; smp_can_put &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciPutPkgToCanFifo
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkOdInSwTimerHandler
</UL>

<P><STRONG><a name="[3a0]"></a>sendResetScuIdCanPackage</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, appbms.o(i.sendResetScuIdCanPackage))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = sendResetScuIdCanPackage &rArr; appSerialCanDavinciPutPkgToCanFifo &rArr; smp_can_put &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciPutPkgToCanFifo
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkOdInSwTimerHandler
</UL>

<P><STRONG><a name="[346]"></a>updateScuIdleCount</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, appbms.o(i.updateScuIdleCount))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = updateScuIdleCount
</UL>
<BR>[Calls]<UL><LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appBmsIsValidScuid
</UL>
<BR>[Called By]<UL><LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appBmsSetScuVbat
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appBmsSetScuSystemFlag
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appBmsSetScuCurrent
</UL>

<P><STRONG><a name="[9b]"></a>buttonSwTimerHandler</STRONG> (Thumb, 230 bytes, Stack size 24 bytes, appbutton.o(i.buttonSwTimerHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = buttonSwTimerHandler &rArr; _LibRegisterTypeHandlerExe &rArr; _LibRegisterRm
</UL>
<BR>[Calls]<UL><LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LibRegisterTypeHandlerExe
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSignalFeedbackGetStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appbutton.o(i.appButtonOpen)
</UL>
<P><STRONG><a name="[da]"></a>appProtectCocp_L1</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, appprotect.o(i.appProtectCocp_L1))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = appProtectCocp_L1 &rArr; apiProtectCocpHandler &rArr; appProtectGetLevelMask
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiProtectCocpHandler
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkNextProtectFunction
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appprotect.o(.constdata)
</UL>
<P><STRONG><a name="[db]"></a>appProtectCocp_L2</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, appprotect.o(i.appProtectCocp_L2))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = appProtectCocp_L2 &rArr; apiProtectCocpHandler &rArr; appProtectGetLevelMask
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiProtectCocpHandler
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkNextProtectFunction
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appprotect.o(.constdata)
</UL>
<P><STRONG><a name="[dc]"></a>appProtectCocp_L3</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, appprotect.o(i.appProtectCocp_L3))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = appProtectCocp_L3 &rArr; apiProtectCocpHandler &rArr; appProtectGetLevelMask
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiProtectCocpHandler
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkNextProtectFunction
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appprotect.o(.constdata)
</UL>
<P><STRONG><a name="[ce]"></a>appProtectCotp_L1</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, appprotect.o(i.appProtectCotp_L1))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = appProtectCotp_L1 &rArr; apiProtectCotpHandler &rArr; appProtectGetLevelMask
</UL>
<BR>[Calls]<UL><LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiProtectCotpHandler
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkNextProtectFunction
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appprotect.o(.constdata)
</UL>
<P><STRONG><a name="[cf]"></a>appProtectCotp_L2</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, appprotect.o(i.appProtectCotp_L2))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = appProtectCotp_L2 &rArr; apiProtectCotpHandler &rArr; appProtectGetLevelMask
</UL>
<BR>[Calls]<UL><LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiProtectCotpHandler
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkNextProtectFunction
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appprotect.o(.constdata)
</UL>
<P><STRONG><a name="[d0]"></a>appProtectCotp_L3</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, appprotect.o(i.appProtectCotp_L3))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = appProtectCotp_L3 &rArr; apiProtectCotpHandler &rArr; appProtectGetLevelMask
</UL>
<BR>[Calls]<UL><LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiProtectCotpHandler
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkNextProtectFunction
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appprotect.o(.constdata)
</UL>
<P><STRONG><a name="[d1]"></a>appProtectCutp_L1</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, appprotect.o(i.appProtectCutp_L1))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = appProtectCutp_L1 &rArr; apiProtectCutpHandler &rArr; appProtectGetLevelMask
</UL>
<BR>[Calls]<UL><LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiProtectCutpHandler
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkNextProtectFunction
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appprotect.o(.constdata)
</UL>
<P><STRONG><a name="[d2]"></a>appProtectCutp_L2</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, appprotect.o(i.appProtectCutp_L2))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = appProtectCutp_L2 &rArr; apiProtectCutpHandler &rArr; appProtectGetLevelMask
</UL>
<BR>[Calls]<UL><LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiProtectCutpHandler
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkNextProtectFunction
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appprotect.o(.constdata)
</UL>
<P><STRONG><a name="[d3]"></a>appProtectCutp_L3</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, appprotect.o(i.appProtectCutp_L3))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = appProtectCutp_L3 &rArr; apiProtectCutpHandler &rArr; appProtectGetLevelMask
</UL>
<BR>[Calls]<UL><LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiProtectCutpHandler
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkNextProtectFunction
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appprotect.o(.constdata)
</UL>
<P><STRONG><a name="[dd]"></a>appProtectDocp_L1</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, appprotect.o(i.appProtectDocp_L1))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = appProtectDocp_L1 &rArr; apiProtectDocpHandler &rArr; appProtectGetLevelMask
</UL>
<BR>[Calls]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiProtectDocpHandler
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkNextProtectFunction
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appprotect.o(.constdata)
</UL>
<P><STRONG><a name="[de]"></a>appProtectDocp_L2</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, appprotect.o(i.appProtectDocp_L2))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = appProtectDocp_L2 &rArr; apiProtectDocpHandler &rArr; appProtectGetLevelMask
</UL>
<BR>[Calls]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiProtectDocpHandler
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkNextProtectFunction
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appprotect.o(.constdata)
</UL>
<P><STRONG><a name="[df]"></a>appProtectDocp_L3</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, appprotect.o(i.appProtectDocp_L3))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = appProtectDocp_L3 &rArr; apiProtectDocpHandler &rArr; appProtectGetLevelMask
</UL>
<BR>[Calls]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiProtectDocpHandler
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkNextProtectFunction
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appprotect.o(.constdata)
</UL>
<P><STRONG><a name="[d4]"></a>appProtectDotp_L1</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, appprotect.o(i.appProtectDotp_L1))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = appProtectDotp_L1 &rArr; apiProtectDotpHandler &rArr; appProtectGetLevelMask
</UL>
<BR>[Calls]<UL><LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiProtectDotpHandler
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkNextProtectFunction
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appprotect.o(.constdata)
</UL>
<P><STRONG><a name="[d5]"></a>appProtectDotp_L2</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, appprotect.o(i.appProtectDotp_L2))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = appProtectDotp_L2 &rArr; apiProtectDotpHandler &rArr; appProtectGetLevelMask
</UL>
<BR>[Calls]<UL><LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiProtectDotpHandler
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkNextProtectFunction
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appprotect.o(.constdata)
</UL>
<P><STRONG><a name="[d6]"></a>appProtectDotp_L3</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, appprotect.o(i.appProtectDotp_L3))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = appProtectDotp_L3 &rArr; apiProtectDotpHandler &rArr; appProtectGetLevelMask
</UL>
<BR>[Calls]<UL><LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiProtectDotpHandler
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkNextProtectFunction
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appprotect.o(.constdata)
</UL>
<P><STRONG><a name="[d7]"></a>appProtectDutp_L1</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, appprotect.o(i.appProtectDutp_L1))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = appProtectDutp_L1 &rArr; apiProtectDutpHandler &rArr; appProtectGetLevelMask
</UL>
<BR>[Calls]<UL><LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiProtectDutpHandler
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkNextProtectFunction
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appprotect.o(.constdata)
</UL>
<P><STRONG><a name="[d8]"></a>appProtectDutp_L2</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, appprotect.o(i.appProtectDutp_L2))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = appProtectDutp_L2 &rArr; apiProtectDutpHandler &rArr; appProtectGetLevelMask
</UL>
<BR>[Calls]<UL><LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiProtectDutpHandler
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkNextProtectFunction
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appprotect.o(.constdata)
</UL>
<P><STRONG><a name="[d9]"></a>appProtectDutp_L3</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, appprotect.o(i.appProtectDutp_L3))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = appProtectDutp_L3 &rArr; apiProtectDutpHandler &rArr; appProtectGetLevelMask
</UL>
<BR>[Calls]<UL><LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiProtectDutpHandler
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkNextProtectFunction
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appprotect.o(.constdata)
</UL>
<P><STRONG><a name="[e0]"></a>appProtectEnd</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, appprotect.o(i.appProtectEnd))
<BR>[Address Reference Count : 1]<UL><LI> appprotect.o(.constdata)
</UL>
<P><STRONG><a name="[c5]"></a>appProtectNone</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, appprotect.o(i.appProtectNone))
<BR><BR>[Calls]<UL><LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkNextProtectFunction
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appprotect.o(.constdata)
</UL>
<P><STRONG><a name="[c9]"></a>appProtectOvPf</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, appprotect.o(i.appProtectOvPf))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = appProtectOvPf &rArr; apiProtectOvpPfHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiProtectOvpPfHandler
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkNextProtectFunction
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appprotect.o(.constdata)
</UL>
<P><STRONG><a name="[c6]"></a>appProtectOvp_L1</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, appprotect.o(i.appProtectOvp_L1))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = appProtectOvp_L1 &rArr; apiProtectOvpHandler &rArr; appProtectGetLevelMask
</UL>
<BR>[Calls]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiProtectOvpHandler
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkNextProtectFunction
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appprotect.o(.constdata)
</UL>
<P><STRONG><a name="[c7]"></a>appProtectOvp_L2</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, appprotect.o(i.appProtectOvp_L2))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = appProtectOvp_L2 &rArr; apiProtectOvpHandler &rArr; appProtectGetLevelMask
</UL>
<BR>[Calls]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiProtectOvpHandler
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkNextProtectFunction
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appprotect.o(.constdata)
</UL>
<P><STRONG><a name="[c8]"></a>appProtectOvp_L3</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, appprotect.o(i.appProtectOvp_L3))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = appProtectOvp_L3 &rArr; apiProtectOvpHandler &rArr; appProtectGetLevelMask
</UL>
<BR>[Calls]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiProtectOvpHandler
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkNextProtectFunction
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appprotect.o(.constdata)
</UL>
<P><STRONG><a name="[cd]"></a>appProtectUvpPf</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, appprotect.o(i.appProtectUvpPf))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = appProtectUvpPf &rArr; apiProtectUvpPfHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiProtectUvpPfHandler
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkNextProtectFunction
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appprotect.o(.constdata)
</UL>
<P><STRONG><a name="[ca]"></a>appProtectUvp_L1</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, appprotect.o(i.appProtectUvp_L1))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = appProtectUvp_L1 &rArr; apiProtectUvpHandler &rArr; appProtectGetLevelMask
</UL>
<BR>[Calls]<UL><LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiProtectUvpHandler
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkNextProtectFunction
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appprotect.o(.constdata)
</UL>
<P><STRONG><a name="[cb]"></a>appProtectUvp_L2</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, appprotect.o(i.appProtectUvp_L2))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = appProtectUvp_L2 &rArr; apiProtectUvpHandler &rArr; appProtectGetLevelMask
</UL>
<BR>[Calls]<UL><LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiProtectUvpHandler
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkNextProtectFunction
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appprotect.o(.constdata)
</UL>
<P><STRONG><a name="[cc]"></a>appProtectUvp_L3</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, appprotect.o(i.appProtectUvp_L3))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = appProtectUvp_L3 &rArr; apiProtectUvpHandler &rArr; appProtectGetLevelMask
</UL>
<BR>[Calls]<UL><LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiProtectUvpHandler
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkNextProtectFunction
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appprotect.o(.constdata)
</UL>
<P><STRONG><a name="[367]"></a>checkNextProtectFunction</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, appprotect.o(i.checkNextProtectFunction))
<BR><BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProtectUvp_L3
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProtectUvp_L2
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProtectUvp_L1
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProtectUvpPf
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProtectOvp_L3
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProtectOvp_L2
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProtectOvp_L1
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProtectOvPf
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProtectNone
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProtectDutp_L3
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProtectDutp_L2
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProtectDutp_L1
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProtectDotp_L3
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProtectDotp_L2
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProtectDotp_L1
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProtectDocp_L3
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProtectDocp_L2
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProtectDocp_L1
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProtectCutp_L3
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProtectCutp_L2
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProtectCutp_L1
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProtectCotp_L3
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProtectCotp_L2
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProtectCotp_L1
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProtectCocp_L3
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProtectCocp_L2
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProtectCocp_L1
</UL>

<P><STRONG><a name="[310]"></a>uvpProtectIni</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, apiprotectuvp.o(i.uvpProtectIni))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = uvpProtectIni
</UL>
<BR>[Calls]<UL><LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParIsUvpPfSet
</UL>
<BR>[Called By]<UL><LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiProtectUvpOpen
</UL>

<P><STRONG><a name="[30b]"></a>ovpProtectIni</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, apiprotectovp.o(i.ovpProtectIni))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ovpProtectIni
</UL>
<BR>[Calls]<UL><LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParIsOvpPfSet
</UL>
<BR>[Called By]<UL><LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiProtectOvpOpen
</UL>

<P><STRONG><a name="[2fd]"></a>cotpProtectIni</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, apiprotectcotp.o(i.cotpProtectIni))
<BR><BR>[Called By]<UL><LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiProtectCotpOpen
</UL>

<P><STRONG><a name="[301]"></a>cutpProtectIni</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, apiprotectcutp.o(i.cutpProtectIni))
<BR><BR>[Called By]<UL><LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiProtectCutpOpen
</UL>

<P><STRONG><a name="[306]"></a>dotpProtectIni</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, apiprotectdotp.o(i.dotpProtectIni))
<BR><BR>[Called By]<UL><LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiProtectDotpOpen
</UL>

<P><STRONG><a name="[37d]"></a>appSerialUartPackageJudgee</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, appserialuartdavinci.o(i.appSerialUartPackageJudgee))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = appSerialUartPackageJudgee &rArr; appSerialUartPackageParser &rArr; LibTemperatureToVoltage &rArr; __hardfp_exp &rArr; __kernel_poly &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_uart_get
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialUartPackageParser
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialUartDavinciTimerHandler
</UL>

<P><STRONG><a name="[37f]"></a>appSerialUartPackageParser</STRONG> (Thumb, 218 bytes, Stack size 24 bytes, appserialuartdavinci.o(i.appSerialUartPackageParser))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = appSerialUartPackageParser &rArr; LibTemperatureToVoltage &rArr; __hardfp_exp &rArr; __kernel_poly &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LibTemperatureToVoltage
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;halAfeSetNtcAdcData
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;halAfeSetCellVoltage
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalAfeSetCurrentValue
</UL>
<BR>[Called By]<UL><LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialUartPackageJudgee
</UL>

<P><STRONG><a name="[37b]"></a>canDavinciPaserCanPackage</STRONG> (Thumb, 88 bytes, Stack size 32 bytes, appserialcandavinci.o(i.canDavinciPaserCanPackage))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = canDavinciPaserCanPackage &rArr; dump_danpackage &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_can_get
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dump_danpackage
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciTimerHandler
</UL>

<P><STRONG><a name="[396]"></a>dump_danpackage</STRONG> (Thumb, 54 bytes, Stack size 128 bytes, appserialcandavinci.o(i.dump_danpackage))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = dump_danpackage &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
</UL>
<BR>[Called By]<UL><LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canDavinciPaserCanPackage
</UL>

<P><STRONG><a name="[e8]"></a>appSerialCanDavinciNotificationCellVoltage</STRONG> (Thumb, 154 bytes, Stack size 48 bytes, appserialcandavincinotification.o(i.appSerialCanDavinciNotificationCellVoltage))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = appSerialCanDavinciNotificationCellVoltage &rArr; appSerialCanDavinciPutPkgToCanFifo &rArr; smp_can_put &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;halAfeGetCellVoltage
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParGetCellNumber
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProjectGetScuId
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciPutPkgToCanFifo
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notifyNextFunction
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appserialcandavincinotification.o(.constdata)
</UL>
<P><STRONG><a name="[ec]"></a>appSerialCanDavinciNotificationCotpFlag</STRONG> (Thumb, 134 bytes, Stack size 40 bytes, appserialcandavincinotification.o(i.appSerialCanDavinciNotificationCotpFlag))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = appSerialCanDavinciNotificationCotpFlag &rArr; appSerialCanDavinciPutPkgToCanFifo &rArr; smp_can_put &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProjectGetScuId
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParGetNtcNumber
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiProtectCotpGetFlag
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciPutPkgToCanFifo
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notifyNextFunction
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appserialcandavincinotification.o(.constdata)
</UL>
<P><STRONG><a name="[ed]"></a>appSerialCanDavinciNotificationCutpFlag</STRONG> (Thumb, 134 bytes, Stack size 40 bytes, appserialcandavincinotification.o(i.appSerialCanDavinciNotificationCutpFlag))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = appSerialCanDavinciNotificationCutpFlag &rArr; appSerialCanDavinciPutPkgToCanFifo &rArr; smp_can_put &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProjectGetScuId
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiProtectCutpGetFlag
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParGetNtcNumber
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciPutPkgToCanFifo
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notifyNextFunction
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appserialcandavincinotification.o(.constdata)
</UL>
<P><STRONG><a name="[ee]"></a>appSerialCanDavinciNotificationDotpFlag</STRONG> (Thumb, 134 bytes, Stack size 40 bytes, appserialcandavincinotification.o(i.appSerialCanDavinciNotificationDotpFlag))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = appSerialCanDavinciNotificationDotpFlag &rArr; appSerialCanDavinciPutPkgToCanFifo &rArr; smp_can_put &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProjectGetScuId
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiProtectDotpGetFlag
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParGetNtcNumber
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciPutPkgToCanFifo
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notifyNextFunction
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appserialcandavincinotification.o(.constdata)
</UL>
<P><STRONG><a name="[ef]"></a>appSerialCanDavinciNotificationDutpFlag</STRONG> (Thumb, 134 bytes, Stack size 40 bytes, appserialcandavincinotification.o(i.appSerialCanDavinciNotificationDutpFlag))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = appSerialCanDavinciNotificationDutpFlag &rArr; appSerialCanDavinciPutPkgToCanFifo &rArr; smp_can_put &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProjectGetScuId
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParGetNtcNumber
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciPutPkgToCanFifo
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notifyNextFunction
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiProtectDutpGetFlag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appserialcandavincinotification.o(.constdata)
</UL>
<P><STRONG><a name="[f0]"></a>appSerialCanDavinciNotificationEnd</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, appserialcandavincinotification.o(i.appSerialCanDavinciNotificationEnd))
<BR>[Address Reference Count : 1]<UL><LI> appserialcandavincinotification.o(.constdata)
</UL>
<P><STRONG><a name="[e9]"></a>appSerialCanDavinciNotificationNtcVoltage</STRONG> (Thumb, 138 bytes, Stack size 40 bytes, appserialcandavincinotification.o(i.appSerialCanDavinciNotificationNtcVoltage))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = appSerialCanDavinciNotificationNtcVoltage &rArr; appSerialCanDavinciPutPkgToCanFifo &rArr; smp_can_put &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProjectGetScuId
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParGetNtcNumber
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalAfeGetNtcAdc
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciPutPkgToCanFifo
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notifyNextFunction
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appserialcandavincinotification.o(.constdata)
</UL>
<P><STRONG><a name="[ea]"></a>appSerialCanDavinciNotificationOvpFlag</STRONG> (Thumb, 154 bytes, Stack size 48 bytes, appserialcandavincinotification.o(i.appSerialCanDavinciNotificationOvpFlag))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = appSerialCanDavinciNotificationOvpFlag &rArr; appSerialCanDavinciPutPkgToCanFifo &rArr; smp_can_put &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appBalanceIsBalanceSet
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParGetCellNumber
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProjectGetScuId
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiProtectOvpGetFlag
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciPutPkgToCanFifo
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notifyNextFunction
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appserialcandavincinotification.o(.constdata)
</UL>
<P><STRONG><a name="[eb]"></a>appSerialCanDavinciNotificationUvpFlag</STRONG> (Thumb, 134 bytes, Stack size 40 bytes, appserialcandavincinotification.o(i.appSerialCanDavinciNotificationUvpFlag))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = appSerialCanDavinciNotificationUvpFlag &rArr; appSerialCanDavinciPutPkgToCanFifo &rArr; smp_can_put &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParGetCellNumber
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProjectGetScuId
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiProtectUvpGetFlag
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciPutPkgToCanFifo
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notifyNextFunction
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appserialcandavincinotification.o(.constdata)
</UL>
<P><STRONG><a name="[409]"></a>notifyBaseCurrent</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, appserialcandavincinotification.o(i.notifyBaseCurrent))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = notifyBaseCurrent &rArr; appSerialCanDavinciPutPkgToCanFifo &rArr; smp_can_put &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;halAfeGetCurrentValue
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appGaugeGetCurrentValue
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProjectGetScuId
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciPutPkgToCanFifo
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notifyBaseInfoPackage
</UL>

<P><STRONG><a name="[40a]"></a>notifyBaseCycleCount</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, appserialcandavincinotification.o(i.notifyBaseCycleCount))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = notifyBaseCycleCount &rArr; appSerialCanDavinciPutPkgToCanFifo &rArr; smp_can_put &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appGaugeGetCyleCount
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProjectGetScuId
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciPutPkgToCanFifo
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notifyBaseInfoPackage
</UL>

<P><STRONG><a name="[40c]"></a>notifyBaseFCC</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, appserialcandavincinotification.o(i.notifyBaseFCC))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = notifyBaseFCC &rArr; appSerialCanDavinciPutPkgToCanFifo &rArr; smp_can_put &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appGaugeGetFCC
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProjectGetScuId
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciPutPkgToCanFifo
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notifyBaseInfoPackage
</UL>

<P><STRONG><a name="[e7]"></a>notifyBaseInfoPackage</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, appserialcandavincinotification.o(i.notifyBaseInfoPackage))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = notifyBaseInfoPackage &rArr; notifyBaseScuTemp &rArr; apiScuTempGetTemperature &rArr; cvtMcuNtcTemp &rArr; LibNtcVoltageToTemperature &rArr; LibNtcRToTemperature &rArr; __hardfp_log &rArr; __kernel_poly &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notifyNextFunction
<LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notifyBaseVBatVoltage
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notifyBaseSystemFlag
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notifyBaseScuTemp
<LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notifyBaseScuId
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notifyBaseRmQmax
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notifyBaseRamSocPackage
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notifyBaseQStartPackage
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notifyBasePassCharge
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notifyBaseMinMaxValue
<LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notifyBaseFCC
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notifyBaseCycleCount
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notifyBaseCurrent
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appserialcandavincinotification.o(.constdata)
</UL>
<P><STRONG><a name="[412]"></a>notifyBaseMinMaxValue</STRONG> (Thumb, 128 bytes, Stack size 24 bytes, appserialcandavincinotification.o(i.notifyBaseMinMaxValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = notifyBaseMinMaxValue &rArr; LibNtcVoltageToTemperature &rArr; LibNtcRToTemperature &rArr; __hardfp_log &rArr; __kernel_poly &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;halAfeGetMinCellVoltage
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;halAfeGetMaxCellVoltage
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalAfeGetMaxNtcTempAdc
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LibNtcVoltageToTemperature
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProjectGetScuId
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciPutPkgToCanFifo
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalAfeGetMinNtcTempAdc
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notifyBaseInfoPackage
</UL>

<P><STRONG><a name="[416]"></a>notifyBasePassCharge</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, appserialcandavincinotification.o(i.notifyBasePassCharge))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = notifyBasePassCharge &rArr; appGaugeGetRPassCharge &rArr; CvtRaPassChargeTomAh &rArr; __aeabi_ldivmod &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appGaugeGetRPassCharge
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appGaugeGetQPassCharge
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProjectGetScuId
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciPutPkgToCanFifo
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notifyBaseInfoPackage
</UL>

<P><STRONG><a name="[414]"></a>notifyBaseQStartPackage</STRONG> (Thumb, 114 bytes, Stack size 32 bytes, appserialcandavincinotification.o(i.notifyBaseQStartPackage))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = notifyBaseQStartPackage &rArr; appSerialCanDavinciPutPkgToCanFifo &rArr; smp_can_put &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appGaugeGetSOH
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appGaugeGetRSoc
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appGaugeGetQStart
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProjectGetScuId
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciPutPkgToCanFifo
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notifyBaseInfoPackage
</UL>

<P><STRONG><a name="[415]"></a>notifyBaseRamSocPackage</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, appserialcandavincinotification.o(i.notifyBaseRamSocPackage))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = notifyBaseRamSocPackage &rArr; appSerialCanDavinciPutPkgToCanFifo &rArr; smp_can_put &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appGaugeGetSoc0
<LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appGaugeGetRamSoc
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appGaugeGetEndOfSoc
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appGaugeGetDisplaySoc
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProjectGetScuId
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciPutPkgToCanFifo
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notifyBaseInfoPackage
</UL>

<P><STRONG><a name="[410]"></a>notifyBaseRmQmax</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, appserialcandavincinotification.o(i.notifyBaseRmQmax))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = notifyBaseRmQmax &rArr; appSerialCanDavinciPutPkgToCanFifo &rArr; smp_can_put &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appGaugeGetRM
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appGaugeGetQmax
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProjectGetScuId
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciPutPkgToCanFifo
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notifyBaseInfoPackage
</UL>

<P><STRONG><a name="[40e]"></a>notifyBaseScuId</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, appserialcandavincinotification.o(i.notifyBaseScuId))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = notifyBaseScuId &rArr; appSerialCanDavinciPutPkgToCanFifo &rArr; smp_can_put &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProjectGetScuId
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciPutPkgToCanFifo
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notifyBaseInfoPackage
</UL>

<P><STRONG><a name="[413]"></a>notifyBaseScuTemp</STRONG> (Thumb, 120 bytes, Stack size 40 bytes, appserialcandavincinotification.o(i.notifyBaseScuTemp))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = notifyBaseScuTemp &rArr; apiScuTempGetTemperature &rArr; cvtMcuNtcTemp &rArr; LibNtcVoltageToTemperature &rArr; LibNtcRToTemperature &rArr; __hardfp_log &rArr; __kernel_poly &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProjectGetScuId
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciPutPkgToCanFifo
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiScuTempGetTemperature
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notifyBaseInfoPackage
</UL>

<P><STRONG><a name="[40f]"></a>notifyBaseSystemFlag</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, appserialcandavincinotification.o(i.notifyBaseSystemFlag))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = notifyBaseSystemFlag &rArr; appSerialCanDavinciPutPkgToCanFifo &rArr; smp_can_put &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProjectGetScuId
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciPutPkgToCanFifo
<LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSystemFlagGetFlag2
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSystemFlagGetFlag1
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notifyBaseInfoPackage
</UL>

<P><STRONG><a name="[411]"></a>notifyBaseVBatVoltage</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, appserialcandavincinotification.o(i.notifyBaseVBatVoltage))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = notifyBaseVBatVoltage &rArr; appSerialCanDavinciPutPkgToCanFifo &rArr; smp_can_put &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProjectGetScuId
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;halAfeGetVBatVoltage
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciPutPkgToCanFifo
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notifyBaseInfoPackage
</UL>

<P><STRONG><a name="[e6]"></a>notifyFunNone</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, appserialcandavincinotification.o(i.notifyFunNone))
<BR>[Address Reference Count : 1]<UL><LI> appserialcandavincinotification.o(.constdata)
</UL>
<P><STRONG><a name="[36f]"></a>notifyNextFunction</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, appserialcandavincinotification.o(i.notifyNextFunction))
<BR><BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notifyBaseInfoPackage
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciNotificationUvpFlag
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciNotificationOvpFlag
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciNotificationNtcVoltage
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciNotificationDutpFlag
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciNotificationDotpFlag
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciNotificationCutpFlag
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciNotificationCotpFlag
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciNotificationCellVoltage
</UL>

<P><STRONG><a name="[f3]"></a>davinciCanAdc</STRONG> (Thumb, 166 bytes, Stack size 24 bytes, appserialcandavincicmd.o(i.davinciCanAdc))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = davinciCanAdc &rArr; appSerialCanDavinciPutPkgToCanFifo &rArr; smp_can_put &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProjectGetScuId
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciPutPkgToCanFifo
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;halAfeGetVBatAdcValue
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;halAfeGetCurrentAdcValue
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appserialcandavincicmd.o(.constdata)
</UL>
<P><STRONG><a name="[f5]"></a>davinciCanChecksumn</STRONG> (Thumb, 108 bytes, Stack size 32 bytes, appserialcandavincicmd.o(i.davinciCanChecksumn))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = davinciCanChecksumn &rArr; appSerialCanDavinciPutPkgToCanFifo &rArr; smp_can_put &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProjectGetScuId
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciPutPkgToCanFifo
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParGetChecksum
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiCaliParGetChecksum
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appserialcandavincicmd.o(.constdata)
</UL>
<P><STRONG><a name="[f7]"></a>davinciCanCleanData</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, appserialcandavincicmd.o(i.davinciCanCleanData))
<BR><BR>[Stack]<UL><LI>Max Depth = 404<LI>Call Chain = davinciCanCleanData &rArr; appGaugeCleanCycleCount &rArr; apiSysParSetCycleCount &rArr; appSerialCanDavinciSendTextMessage &rArr; appSerialCanDavinciPutPkgToCanFifo &rArr; smp_can_put &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appGaugeCleanCycleCount
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciSendTextMessage
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProjectGetScuId
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appserialcandavincicmd.o(.constdata)
</UL>
<P><STRONG><a name="[f8]"></a>davinciCanFaultLog</STRONG> (Thumb, 188 bytes, Stack size 40 bytes, appserialcandavincicmd.o(i.davinciCanFaultLog))
<BR><BR>[Stack]<UL><LI>Max Depth = 404<LI>Call Chain = davinciCanFaultLog &rArr; appSerialCanDavinciSendTextMessage &rArr; appSerialCanDavinciPutPkgToCanFifo &rArr; smp_can_put &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciSendTextMessage
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProjectGetScuId
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciPutPkgToCanFifo
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiEventLogReadLogData
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiEventLogGetLogNumber
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appserialcandavincicmd.o(.constdata)
</UL>
<P><STRONG><a name="[f6]"></a>davinciCanPfFlag</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, appserialcandavincicmd.o(i.davinciCanPfFlag))
<BR><BR>[Stack]<UL><LI>Max Depth = 388<LI>Call Chain = davinciCanPfFlag &rArr; appSerialCanDavinciSendTextMessage &rArr; appSerialCanDavinciPutPkgToCanFifo &rArr; smp_can_put &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciSendTextMessage
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProjectGetScuId
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiProtectOvpPfClean
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiProtectUvpPfClean
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciPutPkgToCanFifo
<LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParUvpPfClean
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParOvpPfClean
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appserialcandavincicmd.o(.constdata)
</UL>
<P><STRONG><a name="[f4]"></a>davinciCanRelayOn</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, appserialcandavincicmd.o(i.davinciCanRelayOn))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = davinciCanRelayOn &rArr; appSerialCanDavinciPutPkgToCanFifo &rArr; smp_can_put &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProjectGetScuId
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciPutPkgToCanFifo
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiRelayControlSetMasterTurnOnFlag
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appserialcandavincicmd.o(.constdata)
</UL>
<P><STRONG><a name="[f2]"></a>davinciCanRtc</STRONG> (Thumb, 174 bytes, Stack size 40 bytes, appserialcandavincicmd.o(i.davinciCanRtc))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = davinciCanRtc &rArr; HalRtcSetupTime &rArr; HAL_RTC_SetTime &rArr; RTC_ExitInitMode &rArr; HAL_RTC_WaitForSynchro
</UL>
<BR>[Calls]<UL><LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalRtcSmpUnixTimeToDateTime
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalRtcGetSmpUnixTime
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProjectGetScuId
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciPutPkgToCanFifo
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalRtcSetupTime
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalRtcSetupDate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appserialcandavincicmd.o(.constdata)
</UL>
<P><STRONG><a name="[f9]"></a>davinciCanSoc</STRONG> (Thumb, 102 bytes, Stack size 40 bytes, appserialcandavincicmd.o(i.davinciCanSoc))
<BR><BR>[Stack]<UL><LI>Max Depth = 404<LI>Call Chain = davinciCanSoc &rArr; appSerialCanDavinciSendTextMessage &rArr; appSerialCanDavinciPutPkgToCanFifo &rArr; smp_can_put &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appGaugeUpdateSoc0
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appGaugeSetSoc0
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciSendTextMessage
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProjectGetScuId
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciPutPkgToCanFifo
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appserialcandavincicmd.o(.constdata)
</UL>
<P><STRONG><a name="[b0]"></a>faultLog1DataCallBack</STRONG> (Thumb, 100 bytes, Stack size 144 bytes, appserialcandavincicmd.o(i.faultLog1DataCallBack))
<BR><BR>[Stack]<UL><LI>Max Depth = 508<LI>Call Chain = faultLog1DataCallBack &rArr; appSerialCanDavinciSendTextMessage &rArr; appSerialCanDavinciPutPkgToCanFifo &rArr; smp_can_put &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciSendTextMessage
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProjectGetScuId
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciPutPkgToCanFifo
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appserialcandavincicmd.o(i.davinciCanFaultLog)
</UL>
<P><STRONG><a name="[105]"></a>DavinciCanParameterAfeCommunication</STRONG> (Thumb, 124 bytes, Stack size 40 bytes, appserialcandavinciparameter.o(i.DavinciCanParameterAfeCommunication))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = DavinciCanParameterAfeCommunication &rArr; appSerialCanDavinciPutPkgToCanFifo &rArr; smp_can_put &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProjectGetScuId
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciPutPkgToCanFifo
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParSetAfeCommTime
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParGetAfeCommTime
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isParWritable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appserialcandavinciparameter.o(.constdata)
</UL>
<P><STRONG><a name="[119]"></a>DavinciCanParameterBalanceChg</STRONG> (Thumb, 188 bytes, Stack size 40 bytes, appserialcandavinciparameter.o(i.DavinciCanParameterBalanceChg))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = DavinciCanParameterBalanceChg &rArr; appSerialCanDavinciPutPkgToCanFifo &rArr; smp_can_put &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParGetBalanceChg
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProjectGetScuId
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciPutPkgToCanFifo
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParSetBalanceChg
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isParWritable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appserialcandavinciparameter.o(.constdata)
</UL>
<P><STRONG><a name="[11a]"></a>DavinciCanParameterBalanceDhg</STRONG> (Thumb, 188 bytes, Stack size 40 bytes, appserialcandavinciparameter.o(i.DavinciCanParameterBalanceDhg))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = DavinciCanParameterBalanceDhg &rArr; appSerialCanDavinciPutPkgToCanFifo &rArr; smp_can_put &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProjectGetScuId
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciPutPkgToCanFifo
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParSetBalanceDhg
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParGetBalanceDhg
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isParWritable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appserialcandavinciparameter.o(.constdata)
</UL>
<P><STRONG><a name="[118]"></a>DavinciCanParameterBalanceDuty</STRONG> (Thumb, 132 bytes, Stack size 40 bytes, appserialcandavinciparameter.o(i.DavinciCanParameterBalanceDuty))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = DavinciCanParameterBalanceDuty &rArr; appSerialCanDavinciPutPkgToCanFifo &rArr; smp_can_put &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParGetBalanceDuty
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProjectGetScuId
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciPutPkgToCanFifo
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParSetBalanceDuty
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isParWritable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appserialcandavinciparameter.o(.constdata)
</UL>
<P><STRONG><a name="[11b]"></a>DavinciCanParameterBalanceRlx</STRONG> (Thumb, 188 bytes, Stack size 40 bytes, appserialcandavinciparameter.o(i.DavinciCanParameterBalanceRlx))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = DavinciCanParameterBalanceRlx &rArr; appSerialCanDavinciPutPkgToCanFifo &rArr; smp_can_put &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParGetBalanceRlx
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProjectGetScuId
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciPutPkgToCanFifo
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParSetBalanceRlx
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isParWritable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appserialcandavinciparameter.o(.constdata)
</UL>
<P><STRONG><a name="[115]"></a>DavinciCanParameterCocp</STRONG> (Thumb, 170 bytes, Stack size 40 bytes, appserialcandavinciparameter.o(i.DavinciCanParameterCocp))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = DavinciCanParameterCocp &rArr; appSerialCanDavinciPutPkgToCanFifo &rArr; smp_can_put &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProjectGetScuId
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParGetCocpPar
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciPutPkgToCanFifo
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParSetCocpPar
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isParWritable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appserialcandavinciparameter.o(.constdata)
</UL>
<P><STRONG><a name="[110]"></a>DavinciCanParameterCotp</STRONG> (Thumb, 142 bytes, Stack size 40 bytes, appserialcandavinciparameter.o(i.DavinciCanParameterCotp))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = DavinciCanParameterCotp &rArr; appSerialCanDavinciPutPkgToCanFifo &rArr; smp_can_put &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProjectGetScuId
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciPutPkgToCanFifo
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParSetCotpPar
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParGetCotpPar
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isParWritable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appserialcandavinciparameter.o(.constdata)
</UL>
<P><STRONG><a name="[11c]"></a>DavinciCanParameterCurrentCalibration</STRONG> (Thumb, 188 bytes, Stack size 136 bytes, appserialcandavinciparameter.o(i.DavinciCanParameterCurrentCalibration))
<BR><BR>[Stack]<UL><LI>Max Depth = 540<LI>Call Chain = DavinciCanParameterCurrentCalibration &rArr; apiCaliParSetCurrentValue &rArr; saveCalPar &rArr; appSerialCanDavinciSendTextMessage &rArr; appSerialCanDavinciPutPkgToCanFifo &rArr; smp_can_put &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProjectGetScuId
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciPutPkgToCanFifo
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiCaliParSetCurrentValue
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiCaliParGetCurrentValue
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isParWritable
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get3BytesInt32
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appserialcandavinciparameter.o(.constdata)
</UL>
<P><STRONG><a name="[111]"></a>DavinciCanParameterCutp</STRONG> (Thumb, 142 bytes, Stack size 40 bytes, appserialcandavinciparameter.o(i.DavinciCanParameterCutp))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = DavinciCanParameterCutp &rArr; appSerialCanDavinciPutPkgToCanFifo &rArr; smp_can_put &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProjectGetScuId
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciPutPkgToCanFifo
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParSetCutpPar
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParGetCutpPar
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isParWritable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appserialcandavinciparameter.o(.constdata)
</UL>
<P><STRONG><a name="[101]"></a>DavinciCanParameterDesignedCapacity</STRONG> (Thumb, 136 bytes, Stack size 32 bytes, appserialcandavinciparameter.o(i.DavinciCanParameterDesignedCapacity))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = DavinciCanParameterDesignedCapacity &rArr; appSerialCanDavinciPutPkgToCanFifo &rArr; smp_can_put &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParGetDesignedCapacity
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProjectGetScuId
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciPutPkgToCanFifo
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParSetDesignedCapacity
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isParWritable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appserialcandavinciparameter.o(.constdata)
</UL>
<P><STRONG><a name="[116]"></a>DavinciCanParameterDocp</STRONG> (Thumb, 170 bytes, Stack size 40 bytes, appserialcandavinciparameter.o(i.DavinciCanParameterDocp))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = DavinciCanParameterDocp &rArr; appSerialCanDavinciPutPkgToCanFifo &rArr; smp_can_put &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProjectGetScuId
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParGetDocpPar
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciPutPkgToCanFifo
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParSetDocpPar
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isParWritable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appserialcandavinciparameter.o(.constdata)
</UL>
<P><STRONG><a name="[112]"></a>DavinciCanParameterDotp</STRONG> (Thumb, 142 bytes, Stack size 40 bytes, appserialcandavinciparameter.o(i.DavinciCanParameterDotp))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = DavinciCanParameterDotp &rArr; appSerialCanDavinciPutPkgToCanFifo &rArr; smp_can_put &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProjectGetScuId
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciPutPkgToCanFifo
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParSetDotpPar
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParGetDotpPar
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isParWritable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appserialcandavinciparameter.o(.constdata)
</UL>
<P><STRONG><a name="[114]"></a>DavinciCanParameterDtp</STRONG> (Thumb, 142 bytes, Stack size 40 bytes, appserialcandavinciparameter.o(i.DavinciCanParameterDtp))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = DavinciCanParameterDtp &rArr; appSerialCanDavinciPutPkgToCanFifo &rArr; smp_can_put &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProjectGetScuId
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciPutPkgToCanFifo
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParSetDtpPar
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParGetDtpPar
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isParWritable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appserialcandavinciparameter.o(.constdata)
</UL>
<P><STRONG><a name="[113]"></a>DavinciCanParameterDutp</STRONG> (Thumb, 142 bytes, Stack size 40 bytes, appserialcandavinciparameter.o(i.DavinciCanParameterDutp))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = DavinciCanParameterDutp &rArr; appSerialCanDavinciPutPkgToCanFifo &rArr; smp_can_put &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProjectGetScuId
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciPutPkgToCanFifo
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParSetDutpPar
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParGetDutpPar
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isParWritable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appserialcandavinciparameter.o(.constdata)
</UL>
<P><STRONG><a name="[103]"></a>DavinciCanParameterFlatVoltage</STRONG> (Thumb, 136 bytes, Stack size 40 bytes, appserialcandavinciparameter.o(i.DavinciCanParameterFlatVoltage))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = DavinciCanParameterFlatVoltage &rArr; appSerialCanDavinciPutPkgToCanFifo &rArr; smp_can_put &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProjectGetScuId
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciPutPkgToCanFifo
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParSetFlatVoltage
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParGetFlatVoltage
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isParWritable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appserialcandavinciparameter.o(.constdata)
</UL>
<P><STRONG><a name="[102]"></a>DavinciCanParameterFullChargeCondition</STRONG> (Thumb, 148 bytes, Stack size 40 bytes, appserialcandavinciparameter.o(i.DavinciCanParameterFullChargeCondition))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = DavinciCanParameterFullChargeCondition &rArr; appSerialCanDavinciPutPkgToCanFifo &rArr; smp_can_put &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParGetFullChargeCondition
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProjectGetScuId
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciPutPkgToCanFifo
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParSetFullChargeCondition
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isParWritable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appserialcandavinciparameter.o(.constdata)
</UL>
<P><STRONG><a name="[fd]"></a>DavinciCanParameterFwBuildDateTime</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, appserialcandavinciparameter.o(i.DavinciCanParameterFwBuildDateTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = DavinciCanParameterFwBuildDateTime &rArr; appSerialCanDavinciPutPkgToCanFifo &rArr; smp_can_put &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProjectGetScuId
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciPutPkgToCanFifo
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isParWritable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appserialcandavinciparameter.o(.constdata)
</UL>
<P><STRONG><a name="[fc]"></a>DavinciCanParameterFwVersion</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, appserialcandavinciparameter.o(i.DavinciCanParameterFwVersion))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = DavinciCanParameterFwVersion &rArr; appSerialCanDavinciPutPkgToCanFifo &rArr; smp_can_put &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProjectGetScuId
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciPutPkgToCanFifo
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParGetFwVersion
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isParWritable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appserialcandavinciparameter.o(.constdata)
</UL>
<P><STRONG><a name="[fb]"></a>DavinciCanParameterHwVersion</STRONG> (Thumb, 108 bytes, Stack size 32 bytes, appserialcandavinciparameter.o(i.DavinciCanParameterHwVersion))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = DavinciCanParameterHwVersion &rArr; appSerialCanDavinciPutPkgToCanFifo &rArr; smp_can_put &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProjectGetScuId
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciPutPkgToCanFifo
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParSetHwVersion
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParGetHwVersion
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isParWritable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appserialcandavinciparameter.o(.constdata)
</UL>
<P><STRONG><a name="[106]"></a>DavinciCanParameterInsulationResistance</STRONG> (Thumb, 108 bytes, Stack size 40 bytes, appserialcandavinciparameter.o(i.DavinciCanParameterInsulationResistance))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = DavinciCanParameterInsulationResistance &rArr; appSerialCanDavinciPutPkgToCanFifo &rArr; smp_can_put &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProjectGetScuId
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciPutPkgToCanFifo
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParSetInsulationResistance
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParGetInsulationResistance
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isParWritable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appserialcandavinciparameter.o(.constdata)
</UL>
<P><STRONG><a name="[109]"></a>DavinciCanParameterNoteMessage</STRONG> (Thumb, 268 bytes, Stack size 40 bytes, appserialcandavinciparameter.o(i.DavinciCanParameterNoteMessage))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = DavinciCanParameterNoteMessage &rArr; appSerialCanDavinciPutPkgToCanFifo &rArr; smp_can_put &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProjectGetScuId
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciPutPkgToCanFifo
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParSetNotwMessageString
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParGetNotwMessageString
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isParWritable
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appserialcandavinciparameter.o(.constdata)
</UL>
<P><STRONG><a name="[10c]"></a>DavinciCanParameterOcvTable</STRONG> (Thumb, 140 bytes, Stack size 32 bytes, appserialcandavinciparameter.o(i.DavinciCanParameterOcvTable))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = DavinciCanParameterOcvTable &rArr; appSerialCanDavinciPutPkgToCanFifo &rArr; smp_can_put &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParGetOcvTable
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProjectGetScuId
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciPutPkgToCanFifo
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParSetOcvTable
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isParWritable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appserialcandavinciparameter.o(.constdata)
</UL>
<P><STRONG><a name="[10e]"></a>DavinciCanParameterOvp</STRONG> (Thumb, 170 bytes, Stack size 40 bytes, appserialcandavinciparameter.o(i.DavinciCanParameterOvp))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = DavinciCanParameterOvp &rArr; appSerialCanDavinciPutPkgToCanFifo &rArr; smp_can_put &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProjectGetScuId
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParGetOvpPar
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciPutPkgToCanFifo
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParSetOvpPar
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isParWritable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appserialcandavinciparameter.o(.constdata)
</UL>
<P><STRONG><a name="[117]"></a>DavinciCanParameterPF</STRONG> (Thumb, 168 bytes, Stack size 40 bytes, appserialcandavinciparameter.o(i.DavinciCanParameterPF))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = DavinciCanParameterPF &rArr; appSerialCanDavinciPutPkgToCanFifo &rArr; smp_can_put &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProjectGetScuId
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParGetOvpPfPar
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParGetUvpPfPar
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciPutPkgToCanFifo
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParSetUvpPfPar
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParSetOvpPfPar
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isParWritable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appserialcandavinciparameter.o(.constdata)
</UL>
<P><STRONG><a name="[ff]"></a>DavinciCanParameterPreDischargeTime</STRONG> (Thumb, 114 bytes, Stack size 32 bytes, appserialcandavinciparameter.o(i.DavinciCanParameterPreDischargeTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = DavinciCanParameterPreDischargeTime &rArr; appSerialCanDavinciPutPkgToCanFifo &rArr; smp_can_put &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProjectGetScuId
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciPutPkgToCanFifo
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParSetPreDischargeTime
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParGetPreDischargeTime
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isParWritable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appserialcandavinciparameter.o(.constdata)
</UL>
<P><STRONG><a name="[107]"></a>DavinciCanParameterQmax</STRONG> (Thumb, 144 bytes, Stack size 32 bytes, appserialcandavinciparameter.o(i.DavinciCanParameterQmax))
<BR><BR>[Stack]<UL><LI>Max Depth = 508<LI>Call Chain = DavinciCanParameterQmax &rArr; apiSysParSetQmax &rArr; appSerialCanDavinciSendTextMessage &rArr; appSerialCanDavinciPutPkgToCanFifo &rArr; smp_can_put &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParSetQmax
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appGaugeSetQmax
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appGaugeGetQmax
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProjectGetScuId
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciPutPkgToCanFifo
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isParWritable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appserialcandavinciparameter.o(.constdata)
</UL>
<P><STRONG><a name="[108]"></a>DavinciCanParameterRM</STRONG> (Thumb, 136 bytes, Stack size 32 bytes, appserialcandavinciparameter.o(i.DavinciCanParameterRM))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = DavinciCanParameterRM &rArr; appSerialCanDavinciPutPkgToCanFifo &rArr; smp_can_put &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appGaugeSetRM
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appGaugeGetRM
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProjectGetScuId
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciPutPkgToCanFifo
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isParWritable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appserialcandavinciparameter.o(.constdata)
</UL>
<P><STRONG><a name="[10d]"></a>DavinciCanParameterRaTable</STRONG> (Thumb, 140 bytes, Stack size 32 bytes, appserialcandavinciparameter.o(i.DavinciCanParameterRaTable))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = DavinciCanParameterRaTable &rArr; appSerialCanDavinciPutPkgToCanFifo &rArr; smp_can_put &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParGetRaTable
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProjectGetScuId
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciPutPkgToCanFifo
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParSetRaTable
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isParWritable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appserialcandavinciparameter.o(.constdata)
</UL>
<P><STRONG><a name="[100]"></a>DavinciCanParameterRelayOnDiffVoltage</STRONG> (Thumb, 114 bytes, Stack size 32 bytes, appserialcandavinciparameter.o(i.DavinciCanParameterRelayOnDiffVoltage))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = DavinciCanParameterRelayOnDiffVoltage &rArr; appSerialCanDavinciPutPkgToCanFifo &rArr; smp_can_put &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProjectGetScuId
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciPutPkgToCanFifo
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParGetRelayOnDiffVoltage
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParSetRelayOnDiffVoltage
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isParWritable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appserialcandavinciparameter.o(.constdata)
</UL>
<P><STRONG><a name="[104]"></a>DavinciCanParameterTerminateVoltage</STRONG> (Thumb, 110 bytes, Stack size 32 bytes, appserialcandavinciparameter.o(i.DavinciCanParameterTerminateVoltage))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = DavinciCanParameterTerminateVoltage &rArr; appSerialCanDavinciPutPkgToCanFifo &rArr; smp_can_put &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParGetTerminateVoltage
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProjectGetScuId
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciPutPkgToCanFifo
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParSetTerminateVoltage
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isParWritable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appserialcandavinciparameter.o(.constdata)
</UL>
<P><STRONG><a name="[10f]"></a>DavinciCanParameterUvp</STRONG> (Thumb, 170 bytes, Stack size 40 bytes, appserialcandavinciparameter.o(i.DavinciCanParameterUvp))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = DavinciCanParameterUvp &rArr; appSerialCanDavinciPutPkgToCanFifo &rArr; smp_can_put &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProjectGetScuId
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParGetUvpPar
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciPutPkgToCanFifo
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParSetUvpPar
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isParWritable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appserialcandavinciparameter.o(.constdata)
</UL>
<P><STRONG><a name="[11d]"></a>DavinciCanParameterVBatCalibration</STRONG> (Thumb, 188 bytes, Stack size 136 bytes, appserialcandavinciparameter.o(i.DavinciCanParameterVBatCalibration))
<BR><BR>[Stack]<UL><LI>Max Depth = 540<LI>Call Chain = DavinciCanParameterVBatCalibration &rArr; apiCaliParSetVbatValue &rArr; saveCalPar &rArr; appSerialCanDavinciSendTextMessage &rArr; appSerialCanDavinciPutPkgToCanFifo &rArr; smp_can_put &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProjectGetScuId
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciPutPkgToCanFifo
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiCaliParSetVbatValue
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiCaliParGetVbatValue
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isParWritable
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get3BytesInt32
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appserialcandavinciparameter.o(.constdata)
</UL>
<P><STRONG><a name="[fe]"></a>DavinciCanParameterZeroCurrent</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, appserialcandavinciparameter.o(i.DavinciCanParameterZeroCurrent))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = DavinciCanParameterZeroCurrent &rArr; appSerialCanDavinciPutPkgToCanFifo &rArr; smp_can_put &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParGetZeroCurrentValue
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParGetMinChargeCurrentValue
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProjectGetScuId
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciPutPkgToCanFifo
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParSetZeroCurrentValue
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParSetMinChargeCurrentValue
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isParWritable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appserialcandavinciparameter.o(.constdata)
</UL>
<P><STRONG><a name="[10a]"></a>DavinciParameterBmuNumber</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, appserialcandavinciparameter.o(i.DavinciParameterBmuNumber))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = DavinciParameterBmuNumber &rArr; appSerialCanDavinciPutPkgToCanFifo &rArr; smp_can_put &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParGetBmuNumber
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProjectGetScuId
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciPutPkgToCanFifo
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParSetBmuNumber
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isParWritable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appserialcandavinciparameter.o(.constdata)
</UL>
<P><STRONG><a name="[10b]"></a>DavinciParameterCellNtcFlag</STRONG> (Thumb, 210 bytes, Stack size 32 bytes, appserialcandavinciparameter.o(i.DavinciParameterCellNtcFlag))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = DavinciParameterCellNtcFlag &rArr; appSerialCanDavinciPutPkgToCanFifo &rArr; smp_can_put &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParGetCellFlag
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProjectGetScuId
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciPutPkgToCanFifo
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParSetNtcFlag
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParSetCellFlag
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParGetNtcFlag
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isParWritable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appserialcandavinciparameter.o(.constdata)
</UL>
<P><STRONG><a name="[fa]"></a>DavinciParameterMagicCode</STRONG> (Thumb, 108 bytes, Stack size 32 bytes, appserialcandavinciparameter.o(i.DavinciParameterMagicCode))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = DavinciParameterMagicCode &rArr; appSerialCanDavinciPutPkgToCanFifo &rArr; smp_can_put &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LibSwTimerOpen
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProjectGetScuId
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciPutPkgToCanFifo
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appserialcandavinciparameter.o(.constdata)
</UL>
<P><STRONG><a name="[1ac]"></a>Get3BytesInt32</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, appserialcandavinciparameter.o(i.Get3BytesInt32))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Get3BytesInt32
</UL>
<BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterVBatCalibration
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterCurrentCalibration
</UL>

<P><STRONG><a name="[19b]"></a>isParWritable</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, appserialcandavinciparameter.o(i.isParWritable))
<BR><BR>[Called By]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciParameterCellNtcFlag
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciParameterBmuNumber
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterZeroCurrent
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterVBatCalibration
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterUvp
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterTerminateVoltage
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterRelayOnDiffVoltage
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterRaTable
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterRM
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterQmax
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterPreDischargeTime
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterPF
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterOvp
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterOcvTable
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterNoteMessage
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterInsulationResistance
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterHwVersion
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterFwVersion
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterFwBuildDateTime
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterFullChargeCondition
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterFlatVoltage
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterDutp
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterDtp
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterDotp
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterDocp
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterDesignedCapacity
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterCutp
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterCurrentCalibration
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterCotp
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterCocp
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterBalanceRlx
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterBalanceDuty
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterBalanceDhg
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterBalanceChg
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanParameterAfeCommunication
</UL>

<P><STRONG><a name="[73]"></a>magicCodeIdleSwTimerHandler</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, appserialcandavinciparameter.o(i.magicCodeIdleSwTimerHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = magicCodeIdleSwTimerHandler &rArr; LibSwTimerClose &rArr; _LibRegisterRm
</UL>
<BR>[Calls]<UL><LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LibSwTimerClose
</UL>
<BR>[Address Reference Count : 2]<UL><LI> appserialcandavinciparameter.o(i.DavinciParameterMagicCode)
<LI> appserialcandavinciparameter.o(i.magicCodeIdleSwTimerHandler)
</UL>
<P><STRONG><a name="[11e]"></a>DavinciCommonRequestScuId</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, appserialcandavincicommon.o(i.DavinciCommonRequestScuId))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = DavinciCommonRequestScuId &rArr; appSerialCanDavinciPutPkgToCanFifo &rArr; smp_can_put &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appBmsGetScuId
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciPutPkgToCanFifo
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appBmsIsInAssignIdMode
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appserialcandavincicommon.o(.constdata)
</UL>
<P><STRONG><a name="[122]"></a>DavinciCommonResetScuId</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, appserialcandavincicommon.o(i.DavinciCommonResetScuId))
<BR><BR>[Stack]<UL><LI>Max Depth = 372<LI>Call Chain = DavinciCommonResetScuId &rArr; appSerialCanDavinciSendTextMessage &rArr; appSerialCanDavinciPutPkgToCanFifo &rArr; smp_can_put &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciSendTextMessage
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appBmsResetScuId
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appserialcandavincicommon.o(.constdata)
</UL>
<P><STRONG><a name="[11f]"></a>DavinciCommonSetScuId</STRONG> (Thumb, 78 bytes, Stack size 32 bytes, appserialcandavincicommon.o(i.DavinciCommonSetScuId))
<BR><BR>[Stack]<UL><LI>Max Depth = 428<LI>Call Chain = DavinciCommonSetScuId &rArr; appBmsAssignScuId &rArr; saveScuIdPar &rArr; appSerialCanDavinciSendTextMessage &rArr; appSerialCanDavinciPutPkgToCanFifo &rArr; smp_can_put &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciPutPkgToCanFifo
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appBmsIsInScuIdRequestMode
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appBmsAssignScuId
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appserialcandavincicommon.o(.constdata)
</UL>
<P><STRONG><a name="[120]"></a>DavinciCommonStopScuIdAssign</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, appserialcandavincicommon.o(i.DavinciCommonStopScuIdAssign))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = DavinciCommonStopScuIdAssign &rArr; appSerialCanDavinciPutPkgToCanFifo &rArr; smp_can_put &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appBmsGetScuId
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciPutPkgToCanFifo
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appBmsStopOutputAssignIdSignal
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appserialcandavincicommon.o(.constdata)
</UL>
<P><STRONG><a name="[121]"></a>DavinciCommonStopScuIdRequest</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, appserialcandavincicommon.o(i.DavinciCommonStopScuIdRequest))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = DavinciCommonStopScuIdRequest &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appBmsGetScuId
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appBmsExitScuIdRequestMode
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appBmsEnterScuIdAssignMode
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appserialcandavincicommon.o(.constdata)
</UL>
<P><STRONG><a name="[126]"></a>DavinciCanDebugCellVSimu</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, appserialcandavincidebug.o(i.DavinciCanDebugCellVSimu))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = DavinciCanDebugCellVSimu
</UL>
<BR>[Calls]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;halAfeSetCellVoltage
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appserialcandavincidebug.o(.constdata)
</UL>
<P><STRONG><a name="[124]"></a>DavinciCanDebugCurrentAdc</STRONG> (Thumb, 52 bytes, Stack size 112 bytes, appserialcandavincidebug.o(i.DavinciCanDebugCurrentAdc))
<BR><BR>[Stack]<UL><LI>Max Depth = 476<LI>Call Chain = DavinciCanDebugCurrentAdc &rArr; appSerialCanDavinciSendTextMessage &rArr; appSerialCanDavinciPutPkgToCanFifo &rArr; smp_can_put &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciSendTextMessage
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;halAfeSetCurrentAdcValue
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appCurrDebug
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appserialcandavincidebug.o(.constdata)
</UL>
<P><STRONG><a name="[12a]"></a>DavinciCanDebugCurrentSimu</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, appserialcandavincidebug.o(i.DavinciCanDebugCurrentSimu))
<BR><BR>[Calls]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalAfeSetCurrentValue
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appserialcandavincidebug.o(.constdata)
</UL>
<P><STRONG><a name="[129]"></a>DavinciCanDebugGpio</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, appserialcandavincidebug.o(i.DavinciCanDebugGpio))
<BR>[Address Reference Count : 1]<UL><LI> appserialcandavincidebug.o(.constdata)
</UL>
<P><STRONG><a name="[123]"></a>DavinciCanDebugModeChange</STRONG> (Thumb, 116 bytes, Stack size 8 bytes, appserialcandavincidebug.o(i.DavinciCanDebugModeChange))
<BR><BR>[Stack]<UL><LI>Max Depth = 372<LI>Call Chain = DavinciCanDebugModeChange &rArr; appSerialCanDavinciSendTextMessage &rArr; appSerialCanDavinciPutPkgToCanFifo &rArr; smp_can_put &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciSendTextMessage
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProjectEnableSimuMode
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProjectEnableEngMode
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProjectDisableSimuMode
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProjectDisableEngMode
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appserialcandavincidebug.o(.constdata)
</UL>
<P><STRONG><a name="[128]"></a>DavinciCanDebugNtcTSimu</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, appserialcandavincidebug.o(i.DavinciCanDebugNtcTSimu))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = DavinciCanDebugNtcTSimu &rArr; LibTemperatureToVoltage &rArr; __hardfp_exp &rArr; __kernel_poly &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LibTemperatureToVoltage
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;halAfeSetNtcAdcData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appserialcandavincidebug.o(.constdata)
</UL>
<P><STRONG><a name="[127]"></a>DavinciCanDebugNtcVSimu</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, appserialcandavincidebug.o(i.DavinciCanDebugNtcVSimu))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = DavinciCanDebugNtcVSimu
</UL>
<BR>[Calls]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;halAfeSetNtcAdcData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appserialcandavincidebug.o(.constdata)
</UL>
<P><STRONG><a name="[12c]"></a>DavinciCanDebugRelayControl</STRONG> (Thumb, 198 bytes, Stack size 8 bytes, appserialcandavincidebug.o(i.DavinciCanDebugRelayControl))
<BR><BR>[Stack]<UL><LI>Max Depth = 372<LI>Call Chain = DavinciCanDebugRelayControl &rArr; appSerialCanDavinciSendTextMessage &rArr; appSerialCanDavinciPutPkgToCanFifo &rArr; smp_can_put &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciSendTextMessage
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProjectIsInEngMode
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;halBspPreDischargeRelayOn
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;halBspPreDischargeRelayOff
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;halBspPostiveRelayOn
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;halBspPostiveRelayOff
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;halBspNegtiveRelayOn
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;halBspNegtiveRelayOff
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;halBspFanRelayOn
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;halBspFanRelayOff
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalBspRelayPsCtrl
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appserialcandavincidebug.o(.constdata)
</UL>
<P><STRONG><a name="[12b]"></a>DavinciCanDebugVBatSimu</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, appserialcandavincidebug.o(i.DavinciCanDebugVBatSimu))
<BR><BR>[Calls]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;halAfeSetVBatVoltage
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appserialcandavincidebug.o(.constdata)
</UL>
<P><STRONG><a name="[125]"></a>DavinciCanDebugVbatAdc</STRONG> (Thumb, 52 bytes, Stack size 112 bytes, appserialcandavincidebug.o(i.DavinciCanDebugVbatAdc))
<BR><BR>[Stack]<UL><LI>Max Depth = 476<LI>Call Chain = DavinciCanDebugVbatAdc &rArr; appSerialCanDavinciSendTextMessage &rArr; appSerialCanDavinciPutPkgToCanFifo &rArr; smp_can_put &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciSendTextMessage
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;halAfeSetVBatAdcValue
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appVbatDebug
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appserialcandavincidebug.o(.constdata)
</UL>
<P><STRONG><a name="[12f]"></a>scuCurrent</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, appserialcandavincibasecmd.o(i.scuCurrent))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = scuCurrent &rArr; appBmsSetScuCurrent &rArr; updateScuIdleCount
</UL>
<BR>[Calls]<UL><LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appBmsSetScuCurrent
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appserialcandavincibasecmd.o(.constdata)
</UL>
<P><STRONG><a name="[12d]"></a>scuIdBrocast</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, appserialcandavincibasecmd.o(i.scuIdBrocast))
<BR><BR>[Calls]<UL><LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appBmsRcvScuIdBrocast
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appserialcandavincibasecmd.o(.constdata)
</UL>
<P><STRONG><a name="[12e]"></a>scuSystemFlag</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, appserialcandavincibasecmd.o(i.scuSystemFlag))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = scuSystemFlag &rArr; appBmsSetScuSystemFlag &rArr; updateScuIdleCount
</UL>
<BR>[Calls]<UL><LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appBmsSetScuSystemFlag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appserialcandavincibasecmd.o(.constdata)
</UL>
<P><STRONG><a name="[130]"></a>scuVbat</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, appserialcandavincibasecmd.o(i.scuVbat))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = scuVbat &rArr; appBmsSetScuVbat &rArr; updateScuIdleCount
</UL>
<BR>[Calls]<UL><LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appBmsSetScuVbat
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appserialcandavincibasecmd.o(.constdata)
</UL>
<P><STRONG><a name="[199]"></a>decodeFuDataPackage</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, appserialcandavincifirmwareupgrade.o(i.decodeFuDataPackage))
<BR><BR>[Stack]<UL><LI>Max Depth = 444<LI>Call Chain = decodeFuDataPackage &rArr; apiFuSetUpgradeData &rArr; checkRcvFuCodeData &rArr; appSerialCanDavinciSendTextMessage &rArr; appSerialCanDavinciPutPkgToCanFifo &rArr; smp_can_put &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiFuSetUpgradeData
</UL>
<BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanFunFuRx
</UL>

<P><STRONG><a name="[19a]"></a>decodeFuInfoPackage</STRONG> (Thumb, 220 bytes, Stack size 8 bytes, appserialcandavincifirmwareupgrade.o(i.decodeFuInfoPackage))
<BR><BR>[Stack]<UL><LI>Max Depth = 380<LI>Call Chain = decodeFuInfoPackage &rArr; apiFuUpdateFw &rArr; appSerialCanDavinciSendTextMessage &rArr; appSerialCanDavinciPutPkgToCanFifo &rArr; smp_can_put &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciSendTextMessage
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiFuUpdateFw
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiFuStartUp
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiFuSetTotalPackageNum
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiFuSetMagicCode
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiFuResetApp
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiFuResetAndUpdate
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiFuRcvSetVersion
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiFuRcvSetBaseAddr
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiFuJumpToBootloader
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanFunFuRx
</UL>

<P><STRONG><a name="[198]"></a>isValidScuId</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, appserialcandavincifirmwareupgrade.o(i.isValidScuId))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = isValidScuId
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProjectGetScuId
</UL>
<BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DavinciCanFunFuRx
</UL>

<P><STRONG><a name="[3a9]"></a>checkRelayOn</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, apirelaycontrol.o(i.checkRelayOn))
<BR><BR>[Stack]<UL><LI>Max Depth = 380<LI>Call Chain = checkRelayOn &rArr; appSerialCanDavinciSendTextMessage &rArr; appSerialCanDavinciPutPkgToCanFifo &rArr; smp_can_put &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciSendTextMessage
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProjectIsInEngMode
<LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSystemFlagGetFlag2
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSystemFlagGetFlag1
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalBspRelayPsCtrl
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;relayControlSwTimerHandler
</UL>

<P><STRONG><a name="[91]"></a>relayControlSwTimerHandler</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, apirelaycontrol.o(i.relayControlSwTimerHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 380<LI>Call Chain = relayControlSwTimerHandler &rArr; checkRelayOn &rArr; appSerialCanDavinciSendTextMessage &rArr; appSerialCanDavinciPutPkgToCanFifo &rArr; smp_can_put &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkRelayOn
</UL>
<BR>[Address Reference Count : 1]<UL><LI> apirelaycontrol.o(i.apiRelayControlOpen)
</UL>
<P><STRONG><a name="[ae]"></a>turnOnRelayProcess</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, apirelaycontrol.o(i.turnOnRelayProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 380<LI>Call Chain = turnOnRelayProcess &rArr; appSerialCanDavinciSendTextMessage &rArr; appSerialCanDavinciPutPkgToCanFifo &rArr; smp_can_put &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciSendTextMessage
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProjectSetRelayOnFlag
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParGetPreDischargeTime
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;halBspPreDischargeRelayOn
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;halBspPreDischargeRelayOff
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;halBspPostiveRelayOn
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;halBspNegtiveRelayOn
</UL>
<BR>[Address Reference Count : 1]<UL><LI> apirelaycontrol.o(i.checkRelayOn)
</UL>
<P><STRONG><a name="[322]"></a>cvtMcuNtcTemp</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, apiscutemp.o(i.cvtMcuNtcTemp))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = cvtMcuNtcTemp &rArr; LibNtcVoltageToTemperature &rArr; LibNtcRToTemperature &rArr; __hardfp_log &rArr; __kernel_poly &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LibNtcVoltageToTemperature
</UL>
<BR>[Called By]<UL><LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiScuTempGetTemperature
</UL>

<P><STRONG><a name="[3ef]"></a>getScuTempValue</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, apiscutemp.o(i.getScuTempValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = getScuTempValue &rArr; hal_internal_adc_get &rArr; hal_internal_adc_channel_find
</UL>
<BR>[Calls]<UL><LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_internal_adc_get
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scuTempSwTimerHandler
</UL>

<P><STRONG><a name="[92]"></a>scuTempSwTimerHandler</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, apiscutemp.o(i.scuTempSwTimerHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = scuTempSwTimerHandler &rArr; getScuTempValue &rArr; hal_internal_adc_get &rArr; hal_internal_adc_channel_find
</UL>
<BR>[Calls]<UL><LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getScuTempValue
</UL>
<BR>[Address Reference Count : 1]<UL><LI> apiscutemp.o(i.apiScuTempOpen)
</UL>
<P><STRONG><a name="[42f]"></a>checkSignal</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, apisignalfeedback.o(i.checkSignal))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = checkSignal
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;signalFeedbackSwTimerHandler
</UL>

<P><STRONG><a name="[93]"></a>signalFeedbackSwTimerHandler</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, apisignalfeedback.o(i.signalFeedbackSwTimerHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = signalFeedbackSwTimerHandler &rArr; checkSignal
</UL>
<BR>[Calls]<UL><LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkSignal
</UL>
<BR>[Address Reference Count : 1]<UL><LI> apisignalfeedback.o(i.apiSignalFeedbackOpen)
</UL>
<P><STRONG><a name="[144]"></a>checkCOCP_DOCP_Flag</STRONG> (Thumb, 116 bytes, Stack size 8 bytes, apisystemflag.o(i.checkCOCP_DOCP_Flag))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = checkCOCP_DOCP_Flag
</UL>
<BR>[Calls]<UL><LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiProtectDocpGetFlag
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiProtectCocpGetFlag
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemFlagNextFunction
</UL>
<BR>[Address Reference Count : 1]<UL><LI> apisystemflag.o(.constdata)
</UL>
<P><STRONG><a name="[138]"></a>checkCOTP_L1</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, apisystemflag.o(i.checkCOTP_L1))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = checkCOTP_L1
</UL>
<BR>[Calls]<UL><LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParGetNtcNumber
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiProtectCotpGetFlag
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemFlagNextFunction
</UL>
<BR>[Address Reference Count : 1]<UL><LI> apisystemflag.o(.constdata)
</UL>
<P><STRONG><a name="[139]"></a>checkCOTP_L2</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, apisystemflag.o(i.checkCOTP_L2))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = checkCOTP_L2
</UL>
<BR>[Calls]<UL><LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParGetNtcNumber
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiProtectCotpGetFlag
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemFlagNextFunction
</UL>
<BR>[Address Reference Count : 1]<UL><LI> apisystemflag.o(.constdata)
</UL>
<P><STRONG><a name="[13a]"></a>checkCOTP_L3</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, apisystemflag.o(i.checkCOTP_L3))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = checkCOTP_L3
</UL>
<BR>[Calls]<UL><LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParGetNtcNumber
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiProtectCotpGetFlag
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemFlagNextFunction
</UL>
<BR>[Address Reference Count : 1]<UL><LI> apisystemflag.o(.constdata)
</UL>
<P><STRONG><a name="[13b]"></a>checkCUTP_L1</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, apisystemflag.o(i.checkCUTP_L1))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = checkCUTP_L1
</UL>
<BR>[Calls]<UL><LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiProtectCutpGetFlag
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParGetNtcNumber
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemFlagNextFunction
</UL>
<BR>[Address Reference Count : 1]<UL><LI> apisystemflag.o(.constdata)
</UL>
<P><STRONG><a name="[13c]"></a>checkCUTP_L2</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, apisystemflag.o(i.checkCUTP_L2))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = checkCUTP_L2
</UL>
<BR>[Calls]<UL><LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiProtectCutpGetFlag
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParGetNtcNumber
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemFlagNextFunction
</UL>
<BR>[Address Reference Count : 1]<UL><LI> apisystemflag.o(.constdata)
</UL>
<P><STRONG><a name="[13d]"></a>checkCUTP_L3</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, apisystemflag.o(i.checkCUTP_L3))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = checkCUTP_L3
</UL>
<BR>[Calls]<UL><LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiProtectCutpGetFlag
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParGetNtcNumber
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemFlagNextFunction
</UL>
<BR>[Address Reference Count : 1]<UL><LI> apisystemflag.o(.constdata)
</UL>
<P><STRONG><a name="[13e]"></a>checkDOTP_L1</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, apisystemflag.o(i.checkDOTP_L1))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = checkDOTP_L1
</UL>
<BR>[Calls]<UL><LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiProtectDotpGetFlag
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParGetNtcNumber
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemFlagNextFunction
</UL>
<BR>[Address Reference Count : 1]<UL><LI> apisystemflag.o(.constdata)
</UL>
<P><STRONG><a name="[13f]"></a>checkDOTP_L2</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, apisystemflag.o(i.checkDOTP_L2))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = checkDOTP_L2
</UL>
<BR>[Calls]<UL><LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiProtectDotpGetFlag
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParGetNtcNumber
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemFlagNextFunction
</UL>
<BR>[Address Reference Count : 1]<UL><LI> apisystemflag.o(.constdata)
</UL>
<P><STRONG><a name="[140]"></a>checkDOTP_L3</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, apisystemflag.o(i.checkDOTP_L3))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = checkDOTP_L3
</UL>
<BR>[Calls]<UL><LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiProtectDotpGetFlag
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParGetNtcNumber
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemFlagNextFunction
</UL>
<BR>[Address Reference Count : 1]<UL><LI> apisystemflag.o(.constdata)
</UL>
<P><STRONG><a name="[141]"></a>checkDUTP_L1</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, apisystemflag.o(i.checkDUTP_L1))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = checkDUTP_L1
</UL>
<BR>[Calls]<UL><LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParGetNtcNumber
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiProtectDutpGetFlag
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemFlagNextFunction
</UL>
<BR>[Address Reference Count : 1]<UL><LI> apisystemflag.o(.constdata)
</UL>
<P><STRONG><a name="[142]"></a>checkDUTP_L2</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, apisystemflag.o(i.checkDUTP_L2))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = checkDUTP_L2
</UL>
<BR>[Calls]<UL><LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParGetNtcNumber
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiProtectDutpGetFlag
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemFlagNextFunction
</UL>
<BR>[Address Reference Count : 1]<UL><LI> apisystemflag.o(.constdata)
</UL>
<P><STRONG><a name="[143]"></a>checkDUTP_L3</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, apisystemflag.o(i.checkDUTP_L3))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = checkDUTP_L3
</UL>
<BR>[Calls]<UL><LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParGetNtcNumber
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiProtectDutpGetFlag
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemFlagNextFunction
</UL>
<BR>[Address Reference Count : 1]<UL><LI> apisystemflag.o(.constdata)
</UL>
<P><STRONG><a name="[145]"></a>checkFbSignal</STRONG> (Thumb, 264 bytes, Stack size 8 bytes, apisystemflag.o(i.checkFbSignal))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = checkFbSignal &rArr; halAfeGetState
</UL>
<BR>[Calls]<UL><LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;halAfeGetState
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProjectIsInEngMode
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSignalFeedbackGetStatus
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemFlagNextFunction
</UL>
<BR>[Address Reference Count : 1]<UL><LI> apisystemflag.o(.constdata)
</UL>
<P><STRONG><a name="[131]"></a>checkFlagNone</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, apisystemflag.o(i.checkFlagNone))
<BR><BR>[Calls]<UL><LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemFlagNextFunction
</UL>
<BR>[Address Reference Count : 1]<UL><LI> apisystemflag.o(.constdata)
</UL>
<P><STRONG><a name="[147]"></a>checkMinMaxCellVoltage</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, apisystemflag.o(i.checkMinMaxCellVoltage))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = checkMinMaxCellVoltage &rArr; halAfeUpdateMinMaxCellVoltage
</UL>
<BR>[Calls]<UL><LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;halAfeUpdateMinMaxCellVoltage
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemFlagNextFunction
</UL>
<BR>[Address Reference Count : 1]<UL><LI> apisystemflag.o(.constdata)
</UL>
<P><STRONG><a name="[148]"></a>checkMinMaxNtcTempVoltage</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, apisystemflag.o(i.checkMinMaxNtcTempVoltage))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = checkMinMaxNtcTempVoltage &rArr; halAfeUpdateMinMaxNtcTempVoltage
</UL>
<BR>[Calls]<UL><LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;halAfeUpdateMinMaxNtcTempVoltage
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemFlagNextFunction
</UL>
<BR>[Address Reference Count : 1]<UL><LI> apisystemflag.o(.constdata)
</UL>
<P><STRONG><a name="[132]"></a>checkOVP_L1</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, apisystemflag.o(i.checkOVP_L1))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = checkOVP_L1
</UL>
<BR>[Calls]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParGetCellNumber
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiProtectOvpGetFlag
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemFlagNextFunction
</UL>
<BR>[Address Reference Count : 1]<UL><LI> apisystemflag.o(.constdata)
</UL>
<P><STRONG><a name="[133]"></a>checkOVP_L2</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, apisystemflag.o(i.checkOVP_L2))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = checkOVP_L2
</UL>
<BR>[Calls]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParGetCellNumber
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiProtectOvpGetFlag
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemFlagNextFunction
</UL>
<BR>[Address Reference Count : 1]<UL><LI> apisystemflag.o(.constdata)
</UL>
<P><STRONG><a name="[134]"></a>checkOVP_L3</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, apisystemflag.o(i.checkOVP_L3))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = checkOVP_L3
</UL>
<BR>[Calls]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParGetCellNumber
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiProtectOvpGetFlag
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemFlagNextFunction
</UL>
<BR>[Address Reference Count : 1]<UL><LI> apisystemflag.o(.constdata)
</UL>
<P><STRONG><a name="[146]"></a>checkOtherFlag</STRONG> (Thumb, 138 bytes, Stack size 8 bytes, apisystemflag.o(i.checkOtherFlag))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = checkOtherFlag
</UL>
<BR>[Calls]<UL><LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProjectIsSystemReadyFlag
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProjectIsRtcValid
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProjectGetRelayOnFlag
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiProtectOvpPfGetFlag
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiProtectUvpPfGetFlag
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appBmsIsScudIdReady
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appBmsIsMaster
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;halAfeIsL2Protect
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;halAfeIsL1Protect
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemFlagNextFunction
</UL>
<BR>[Address Reference Count : 1]<UL><LI> apisystemflag.o(.constdata)
</UL>
<P><STRONG><a name="[135]"></a>checkUVP_L1</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, apisystemflag.o(i.checkUVP_L1))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = checkUVP_L1
</UL>
<BR>[Calls]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParGetCellNumber
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiProtectUvpGetFlag
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemFlagNextFunction
</UL>
<BR>[Address Reference Count : 1]<UL><LI> apisystemflag.o(.constdata)
</UL>
<P><STRONG><a name="[136]"></a>checkUVP_L2</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, apisystemflag.o(i.checkUVP_L2))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = checkUVP_L2
</UL>
<BR>[Calls]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParGetCellNumber
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiProtectUvpGetFlag
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemFlagNextFunction
</UL>
<BR>[Address Reference Count : 1]<UL><LI> apisystemflag.o(.constdata)
</UL>
<P><STRONG><a name="[137]"></a>checkUVP_L3</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, apisystemflag.o(i.checkUVP_L3))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = checkUVP_L3
</UL>
<BR>[Calls]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParGetCellNumber
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiProtectUvpGetFlag
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemFlagNextFunction
</UL>
<BR>[Address Reference Count : 1]<UL><LI> apisystemflag.o(.constdata)
</UL>
<P><STRONG><a name="[149]"></a>systemFlagCheckFinish</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, apisystemflag.o(i.systemFlagCheckFinish))
<BR>[Address Reference Count : 1]<UL><LI> apisystemflag.o(.constdata)
</UL>
<P><STRONG><a name="[449]"></a>systemFlagIni</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, apisystemflag.o(i.systemFlagIni))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemFlagSwTimerHandler
</UL>

<P><STRONG><a name="[399]"></a>systemFlagNextFunction</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, apisystemflag.o(i.systemFlagNextFunction))
<BR><BR>[Called By]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkUVP_L3
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkUVP_L2
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkUVP_L1
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkOtherFlag
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkOVP_L3
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkOVP_L2
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkOVP_L1
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkMinMaxNtcTempVoltage
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkMinMaxCellVoltage
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkFlagNone
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkFbSignal
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkDUTP_L3
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkDUTP_L2
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkDUTP_L1
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkDOTP_L3
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkDOTP_L2
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkDOTP_L1
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkCUTP_L3
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkCUTP_L2
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkCUTP_L1
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkCOTP_L3
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkCOTP_L2
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkCOTP_L1
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkCOCP_DOCP_Flag
</UL>

<P><STRONG><a name="[94]"></a>systemFlagSwTimerHandler</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, apisystemflag.o(i.systemFlagSwTimerHandler))
<BR><BR>[Calls]<UL><LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemFlagIni
</UL>
<BR>[Address Reference Count : 1]<UL><LI> apisystemflag.o(i.apiSystemFlagOpen)
</UL>
<P><STRONG><a name="[ac]"></a>batteryInfoSwTimerHandler</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, apisyspar.o(i.batteryInfoSwTimerHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 404<LI>Call Chain = batteryInfoSwTimerHandler &rArr; saveBatteryInfoPar &rArr; appSerialCanDavinciSendTextMessage &rArr; appSerialCanDavinciPutPkgToCanFifo &rArr; smp_can_put &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LibSwTimerClose
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;saveBatteryInfoPar
</UL>
<BR>[Address Reference Count : 2]<UL><LI> apisyspar.o(i.batteryInfoSwTimerHandler)
<LI> apisyspar.o(i.resetBatteryInfoIdleCount)
</UL>
<P><STRONG><a name="[328]"></a>loadBatteryInfoPar</STRONG> (Thumb, 180 bytes, Stack size 2240 bytes, apisyspar.o(i.loadBatteryInfoPar))
<BR><BR>[Stack]<UL><LI>Max Depth = 2604<LI>Call Chain = loadBatteryInfoPar &rArr; appSerialCanDavinciSendTextMessage &rArr; appSerialCanDavinciPutPkgToCanFifo &rArr; smp_can_put &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciSendTextMessage
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalEePromRead
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParOpen
</UL>

<P><STRONG><a name="[32b]"></a>loadCalPar</STRONG> (Thumb, 162 bytes, Stack size 2240 bytes, apisyspar.o(i.loadCalPar))
<BR><BR>[Stack]<UL><LI>Max Depth = 2604<LI>Call Chain = loadCalPar &rArr; appSerialCanDavinciSendTextMessage &rArr; appSerialCanDavinciPutPkgToCanFifo &rArr; smp_can_put &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciSendTextMessage
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalEePromRead
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParOpen
</UL>

<P><STRONG><a name="[32c]"></a>loadScuIdPar</STRONG> (Thumb, 208 bytes, Stack size 2240 bytes, apisyspar.o(i.loadScuIdPar))
<BR><BR>[Stack]<UL><LI>Max Depth = 2604<LI>Call Chain = loadScuIdPar &rArr; appSerialCanDavinciSendTextMessage &rArr; appSerialCanDavinciPutPkgToCanFifo &rArr; smp_can_put &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciSendTextMessage
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalEePromRead
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParOpen
</UL>

<P><STRONG><a name="[32a]"></a>loadSysPar</STRONG> (Thumb, 168 bytes, Stack size 2240 bytes, apisyspar.o(i.loadSysPar))
<BR><BR>[Stack]<UL><LI>Max Depth = 2604<LI>Call Chain = loadSysPar &rArr; appSerialCanDavinciSendTextMessage &rArr; appSerialCanDavinciPutPkgToCanFifo &rArr; smp_can_put &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciSendTextMessage
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalEePromRead
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParOpen
</UL>

<P><STRONG><a name="[331]"></a>resetBatteryInfoIdleCount</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, apisyspar.o(i.resetBatteryInfoIdleCount))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = resetBatteryInfoIdleCount &rArr; LibSwTimerOpen &rArr; _LibRegisterAdd
</UL>
<BR>[Calls]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LibSwTimerOpen
</UL>
<BR>[Called By]<UL><LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParSetQmaxUpdateTimes
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParSetQmax
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParSetCycleCount
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParUvpPfSet
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParOvpPfSet
<LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParUvpPfClean
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParOvpPfClean
</UL>

<P><STRONG><a name="[333]"></a>resetSysParIdleCount</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, apisyspar.o(i.resetSysParIdleCount))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = resetSysParIdleCount &rArr; LibSwTimerOpen &rArr; _LibRegisterAdd
</UL>
<BR>[Calls]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LibSwTimerOpen
</UL>
<BR>[Called By]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParSetZeroCurrentValue
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParSetUvpPfPar
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParSetUvpPar
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParSetTerminateVoltage
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParSetRelayOnDiffVoltage
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParSetRaTable
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParSetPreDischargeTime
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParSetOvpPfPar
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParSetOvpPar
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParSetOcvTable
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParSetNtcFlag
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParSetNotwMessageString
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParSetMinChargeCurrentValue
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParSetInsulationResistance
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParSetHwVersion
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParSetFullChargeCondition
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParSetFlatVoltage
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParSetDutpPar
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParSetDtpPar
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParSetDotpPar
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParSetDocpPar
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParSetDesignedCapacity
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParSetCutpPar
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParSetCotpPar
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParSetCocpPar
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParSetCellFlag
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParSetBmuNumber
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParSetBalanceRlx
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParSetBalanceDuty
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParSetBalanceDhg
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParSetBalanceChg
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParSetAfeCommTime
</UL>

<P><STRONG><a name="[392]"></a>saveBatteryInfoPar</STRONG> (Thumb, 84 bytes, Stack size 32 bytes, apisyspar.o(i.saveBatteryInfoPar))
<BR><BR>[Stack]<UL><LI>Max Depth = 396<LI>Call Chain = saveBatteryInfoPar &rArr; appSerialCanDavinciSendTextMessage &rArr; appSerialCanDavinciPutPkgToCanFifo &rArr; smp_can_put &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciSendTextMessage
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalEePromWrite
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalEePromErase
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batteryInfoSwTimerHandler
</UL>

<P><STRONG><a name="[2e4]"></a>saveCalPar</STRONG> (Thumb, 88 bytes, Stack size 32 bytes, apisyspar.o(i.saveCalPar))
<BR><BR>[Stack]<UL><LI>Max Depth = 396<LI>Call Chain = saveCalPar &rArr; appSerialCanDavinciSendTextMessage &rArr; appSerialCanDavinciPutPkgToCanFifo &rArr; smp_can_put &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciSendTextMessage
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalEePromWrite
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalEePromErase
</UL>
<BR>[Called By]<UL><LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiCaliParSetVbatValue
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiCaliParSetCurrentValue
</UL>

<P><STRONG><a name="[422]"></a>saveSysPar</STRONG> (Thumb, 92 bytes, Stack size 32 bytes, apisyspar.o(i.saveSysPar))
<BR><BR>[Stack]<UL><LI>Max Depth = 396<LI>Call Chain = saveSysPar &rArr; appSerialCanDavinciSendTextMessage &rArr; appSerialCanDavinciPutPkgToCanFifo &rArr; smp_can_put &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciSendTextMessage
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalEePromWrite
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalEePromErase
</UL>
<BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sysParSwTimerHandler
</UL>

<P><STRONG><a name="[327]"></a>setBatteryInfoDefaultValue</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, apisyspar.o(i.setBatteryInfoDefaultValue))
<BR><BR>[Called By]<UL><LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParOpen
</UL>

<P><STRONG><a name="[2e3]"></a>setCalParRamValue</STRONG> (Thumb, 82 bytes, Stack size 40 bytes, apisyspar.o(i.setCalParRamValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = setCalParRamValue &rArr; calCoef &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calCoef
</UL>
<BR>[Called By]<UL><LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParOpen
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiCaliParSetVbatValue
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiCaliParSetCurrentValue
</UL>

<P><STRONG><a name="[426]"></a>setDefaultBalanceValue</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, apisyspar.o(i.setDefaultBalanceValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = setDefaultBalanceValue
</UL>
<BR>[Calls]<UL><LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LibSetRealTemperatureToInternalValue
</UL>
<BR>[Called By]<UL><LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sysParSetDefaultRomValue
</UL>

<P><STRONG><a name="[445]"></a>setDefaultCocpValue</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, apisyspar.o(i.setDefaultCocpValue))
<BR><BR>[Called By]<UL><LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sysParSetDefaultRomValue
</UL>

<P><STRONG><a name="[428]"></a>setDefaultCotpValue</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, apisyspar.o(i.setDefaultCotpValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = setDefaultCotpValue
</UL>
<BR>[Calls]<UL><LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LibSetRealTemperatureToInternalValue
</UL>
<BR>[Called By]<UL><LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sysParSetDefaultRomValue
</UL>

<P><STRONG><a name="[429]"></a>setDefaultCutpValue</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, apisyspar.o(i.setDefaultCutpValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = setDefaultCutpValue
</UL>
<BR>[Calls]<UL><LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LibSetRealTemperatureToInternalValue
</UL>
<BR>[Called By]<UL><LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sysParSetDefaultRomValue
</UL>

<P><STRONG><a name="[446]"></a>setDefaultDocpValue</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, apisyspar.o(i.setDefaultDocpValue))
<BR><BR>[Called By]<UL><LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sysParSetDefaultRomValue
</UL>

<P><STRONG><a name="[42a]"></a>setDefaultDotpValue</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, apisyspar.o(i.setDefaultDotpValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = setDefaultDotpValue
</UL>
<BR>[Calls]<UL><LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LibSetRealTemperatureToInternalValue
</UL>
<BR>[Called By]<UL><LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sysParSetDefaultRomValue
</UL>

<P><STRONG><a name="[42b]"></a>setDefaultDutpValue</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, apisyspar.o(i.setDefaultDutpValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = setDefaultDutpValue
</UL>
<BR>[Calls]<UL><LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LibSetRealTemperatureToInternalValue
</UL>
<BR>[Called By]<UL><LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sysParSetDefaultRomValue
</UL>

<P><STRONG><a name="[42c]"></a>setDefaultOcvTable</STRONG> (Thumb, 58 bytes, Stack size 104 bytes, apisyspar.o(i.setDefaultOcvTable))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = setDefaultOcvTable
</UL>
<BR>[Calls]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sysParSetDefaultRomValue
</UL>

<P><STRONG><a name="[447]"></a>setDefaultOvpPfValue</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, apisyspar.o(i.setDefaultOvpPfValue))
<BR><BR>[Called By]<UL><LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sysParSetDefaultRomValue
</UL>

<P><STRONG><a name="[443]"></a>setDefaultOvpValue</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, apisyspar.o(i.setDefaultOvpValue))
<BR><BR>[Called By]<UL><LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sysParSetDefaultRomValue
</UL>

<P><STRONG><a name="[42d]"></a>setDefaultRaTable</STRONG> (Thumb, 58 bytes, Stack size 96 bytes, apisyspar.o(i.setDefaultRaTable))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = setDefaultRaTable
</UL>
<BR>[Calls]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sysParSetDefaultRomValue
</UL>

<P><STRONG><a name="[448]"></a>setDefaultUvpPfValue</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, apisyspar.o(i.setDefaultUvpPfValue))
<BR><BR>[Called By]<UL><LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sysParSetDefaultRomValue
</UL>

<P><STRONG><a name="[444]"></a>setDefaultUvpValue</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, apisyspar.o(i.setDefaultUvpValue))
<BR><BR>[Called By]<UL><LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sysParSetDefaultRomValue
</UL>

<P><STRONG><a name="[32f]"></a>setSysParRamValue</STRONG> (Thumb, 318 bytes, Stack size 8 bytes, apisyspar.o(i.setSysParRamValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = setSysParRamValue &rArr; LibTemperatureToVoltage &rArr; __hardfp_exp &rArr; __kernel_poly &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LibTemperatureToVoltage
</UL>
<BR>[Called By]<UL><LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParOpen
</UL>

<P><STRONG><a name="[329]"></a>sysParSetDefaultRomValue</STRONG> (Thumb, 208 bytes, Stack size 8 bytes, apisyspar.o(i.sysParSetDefaultRomValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = sysParSetDefaultRomValue &rArr; setDefaultOcvTable
</UL>
<BR>[Calls]<UL><LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setDefaultUvpValue
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setDefaultUvpPfValue
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setDefaultRaTable
<LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setDefaultOvpValue
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setDefaultOvpPfValue
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setDefaultOcvTable
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setDefaultDutpValue
<LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setDefaultDotpValue
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setDefaultDocpValue
<LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setDefaultCutpValue
<LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setDefaultCotpValue
<LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setDefaultCocpValue
<LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setDefaultBalanceValue
</UL>
<BR>[Called By]<UL><LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParOpen
</UL>

<P><STRONG><a name="[c1]"></a>sysParSwTimerHandler</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, apisyspar.o(i.sysParSwTimerHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 404<LI>Call Chain = sysParSwTimerHandler &rArr; saveSysPar &rArr; appSerialCanDavinciSendTextMessage &rArr; appSerialCanDavinciPutPkgToCanFifo &rArr; smp_can_put &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LibSwTimerClose
<LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;saveSysPar
</UL>
<BR>[Address Reference Count : 2]<UL><LI> apisyspar.o(i.resetSysParIdleCount)
<LI> apisyspar.o(i.sysParSwTimerHandler)
</UL>
<P><STRONG><a name="[32d]"></a>updateCellNumber</STRONG> (Thumb, 60 bytes, Stack size 12 bytes, apisyspar.o(i.updateCellNumber))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = updateCellNumber
</UL>
<BR>[Called By]<UL><LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParOpen
</UL>

<P><STRONG><a name="[32e]"></a>updateNtcNumber</STRONG> (Thumb, 62 bytes, Stack size 12 bytes, apisyspar.o(i.updateNtcNumber))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = updateNtcNumber
</UL>
<BR>[Called By]<UL><LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParOpen
</UL>

<P><STRONG><a name="[ad]"></a>checkFuCodeDataSwTimerHandler</STRONG> (Thumb, 256 bytes, Stack size 312 bytes, apifuflashrom.o(i.checkFuCodeDataSwTimerHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 676<LI>Call Chain = checkFuCodeDataSwTimerHandler &rArr; appSerialCanDavinciSendTextMessage &rArr; appSerialCanDavinciPutPkgToCanFifo &rArr; smp_can_put &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciSendTextMessage
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LibSwTimerClose
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalEePromRead
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isCorrectFwCodeHead2
<LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isCorrectFwCodeHead1
</UL>
<BR>[Address Reference Count : 2]<UL><LI> apifuflashrom.o(i.checkFuCodeDataSwTimerHandler)
<LI> apifuflashrom.o(i.checkRcvFuCodeData)
</UL>
<P><STRONG><a name="[2ef]"></a>checkRcvFuCodeData</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, apifuflashrom.o(i.checkRcvFuCodeData))
<BR><BR>[Stack]<UL><LI>Max Depth = 388<LI>Call Chain = checkRcvFuCodeData &rArr; appSerialCanDavinciSendTextMessage &rArr; appSerialCanDavinciPutPkgToCanFifo &rArr; smp_can_put &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciSendTextMessage
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LibSwTimerOpen
</UL>
<BR>[Called By]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiFuSetUpgradeData
</UL>

<P><STRONG><a name="[39a]"></a>isCorrectFwCodeHead1</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, apifuflashrom.o(i.isCorrectFwCodeHead1))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = isCorrectFwCodeHead1 &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkFuCodeDataSwTimerHandler
</UL>

<P><STRONG><a name="[39b]"></a>isCorrectFwCodeHead2</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, apifuflashrom.o(i.isCorrectFwCodeHead2))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = isCorrectFwCodeHead2 &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkFuCodeDataSwTimerHandler
</UL>

<P><STRONG><a name="[2ed]"></a>isValidInfoStatus</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, apifuflashrom.o(i.isValidInfoStatus))
<BR><BR>[Called By]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiFuSetUpgradeData
</UL>

<P><STRONG><a name="[2ee]"></a>writeCodeDataToFlashRom</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, apifuflashrom.o(i.writeCodeDataToFlashRom))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = writeCodeDataToFlashRom &rArr; HalEePromWrite &rArr; HAL_FLASH_Program &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalEePromWrite
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalEePromErase
</UL>
<BR>[Called By]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiFuSetUpgradeData
</UL>

<P><STRONG><a name="[8d]"></a>resetAndUpdateSwTimerHandler</STRONG> (Thumb, 40 bytes, Stack size 4 bytes, apifu.o(i.resetAndUpdateSwTimerHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = resetAndUpdateSwTimerHandler &rArr; apiFuSetMagicCode
</UL>
<BR>[Calls]<UL><LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiFuSetMagicCode
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiFuJumpToBootloader
</UL>
<BR>[Address Reference Count : 1]<UL><LI> apifu.o(i.apiFuResetAndUpdate)
</UL>
<P><STRONG><a name="[8e]"></a>resetAppSwTimerHandler</STRONG> (Thumb, 40 bytes, Stack size 4 bytes, apifu.o(i.resetAppSwTimerHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = resetAppSwTimerHandler &rArr; apiFuSetMagicCode
</UL>
<BR>[Calls]<UL><LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiFuSetMagicCode
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiFuJumpToBootloader
</UL>
<BR>[Address Reference Count : 1]<UL><LI> apifu.o(i.apiFuResetApp)
</UL>
<P><STRONG><a name="[8f]"></a>updatFwSwTimerHandler</STRONG> (Thumb, 118 bytes, Stack size 8 bytes, apifu.o(i.updatFwSwTimerHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 372<LI>Call Chain = updatFwSwTimerHandler &rArr; appSerialCanDavinciSendTextMessage &rArr; appSerialCanDavinciPutPkgToCanFifo &rArr; smp_can_put &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciSendTextMessage
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LibSwTimerClose
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiFuSetMagicCode
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiFuJumpToBootloader
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiFuGetFwCheckStatus
</UL>
<BR>[Address Reference Count : 2]<UL><LI> apifu.o(i.apiFuUpdateFw)
<LI> apifu.o(i.updatFwSwTimerHandler)
</UL>
<P><STRONG><a name="[424]"></a>isFinishWriteEventLogTempData</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, apieventflashrom.o(i.isFinishWriteEventLogTempData))
<BR><BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;searchLastLogAddressSwTimerHandler
</UL>

<P><STRONG><a name="[3f5]"></a>isValidEventLog</STRONG> (Thumb, 18 bytes, Stack size 4 bytes, apieventflashrom.o(i.isValidEventLog))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = isValidEventLog
</UL>
<BR>[Calls]<UL><LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calEventLogCheckSum
</UL>
<BR>[Called By]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;searchLastRecordAddress
</UL>

<P><STRONG><a name="[8c]"></a>searchLastLogAddressSwTimerHandler</STRONG> (Thumb, 80 bytes, Stack size 112 bytes, apieventflashrom.o(i.searchLastLogAddressSwTimerHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 868<LI>Call Chain = searchLastLogAddressSwTimerHandler &rArr; searchLastRecordAddress &rArr; appSerialCanDavinciSendTextMessage &rArr; appSerialCanDavinciPutPkgToCanFifo &rArr; smp_can_put &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciSendTextMessage
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LibSwTimerOpen
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;searchLastRecordAddress
<LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isFinishWriteEventLogTempData
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 2]<UL><LI> apieventflashrom.o(i.searchLastLogAddressSwTimerHandler)
<LI> apieventflashrom.o(i.apiEventLogOpen)
</UL>
<P><STRONG><a name="[425]"></a>searchLastRecordAddress</STRONG> (Thumb, 134 bytes, Stack size 392 bytes, apieventflashrom.o(i.searchLastRecordAddress))
<BR><BR>[Stack]<UL><LI>Max Depth = 756<LI>Call Chain = searchLastRecordAddress &rArr; appSerialCanDavinciSendTextMessage &rArr; appSerialCanDavinciPutPkgToCanFifo &rArr; smp_can_put &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appSerialCanDavinciSendTextMessage
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalEePromRead
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isValidEventLog
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;searchLastLogAddressSwTimerHandler
</UL>

<P><STRONG><a name="[28d]"></a>IRM_Balance_formula</STRONG> (Thumb, 132 bytes, Stack size 16 bytes, apiirmonitoring.o(i.IRM_Balance_formula))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = IRM_Balance_formula
</UL>
<BR>[Called By]<UL><LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRMonitoringMeasure_Steps
</UL>

<P><STRONG><a name="[28e]"></a>IRM_Unbalance_formula</STRONG> (Thumb, 204 bytes, Stack size 16 bytes, apiirmonitoring.o(i.IRM_Unbalance_formula))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = IRM_Unbalance_formula
</UL>
<BR>[Called By]<UL><LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRMonitoringMeasure_Steps
</UL>

<P><STRONG><a name="[287]"></a>IRMonitoringMeasure_Steps</STRONG> (Thumb, 714 bytes, Stack size 80 bytes, apiirmonitoring.o(i.IRMonitoringMeasure_Steps))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = IRMonitoringMeasure_Steps &rArr; __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRMonitoring_StateReset
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRMonitoring_CtrlSW
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRM_Unbalance_formula
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRM_Balance_formula
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_fabs
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRMonitoringSwTimerHandler
</UL>

<P><STRONG><a name="[90]"></a>IRMonitoringSwTimerHandler</STRONG> (Thumb, 120 bytes, Stack size 16 bytes, apiirmonitoring.o(i.IRMonitoringSwTimerHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = IRMonitoringSwTimerHandler &rArr; IRMonitoringMeasure_Steps &rArr; __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRMonitoring_CtrlSW
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRMonitoringMeasure_Steps
</UL>
<BR>[Address Reference Count : 1]<UL><LI> apiirmonitoring.o(i.apiIRMonitoringOpen)
</UL>
<P><STRONG><a name="[288]"></a>IRMonitoring_CtrlSW</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, apiirmonitoring.o(i.IRMonitoring_CtrlSW))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = IRMonitoring_CtrlSW
</UL>
<BR>[Called By]<UL><LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRMonitoring_StateReset
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRMonitoring_Init
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRMonitoringSwTimerHandler
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRMonitoringMeasure_Steps
</UL>

<P><STRONG><a name="[28f]"></a>IRMonitoring_Init</STRONG> (Thumb, 134 bytes, Stack size 24 bytes, apiirmonitoring.o(i.IRMonitoring_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = IRMonitoring_Init &rArr; IRMonitoring_CtrlSW
</UL>
<BR>[Calls]<UL><LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRMonitoring_CtrlSW
</UL>
<BR>[Called By]<UL><LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiIRMonitoringOpen
</UL>

<P><STRONG><a name="[289]"></a>IRMonitoring_StateReset</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, apiirmonitoring.o(i.IRMonitoring_StateReset))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = IRMonitoring_StateReset &rArr; IRMonitoring_CtrlSW
</UL>
<BR>[Calls]<UL><LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRMonitoring_CtrlSW
</UL>
<BR>[Called By]<UL><LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRMonitoringMeasure_Steps
</UL>

<P><STRONG><a name="[85]"></a>getIRMonitoringVoValue_cb</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, apiirmonitoring.o(i.getIRMonitoringVoValue_cb))
<BR>[Address Reference Count : 1]<UL><LI> apiirmonitoring.o(i.IRMonitoring_Init)
</UL>
<P><STRONG><a name="[27c]"></a>GetBank</STRONG> (Thumb, 78 bytes, Stack size 12 bytes, haleepromstm32l4xx.o(i.GetBank))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GetBank
</UL>
<BR>[Called By]<UL><LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalEePromErase
</UL>

<P><STRONG><a name="[27b]"></a>GetPage</STRONG> (Thumb, 68 bytes, Stack size 12 bytes, haleepromstm32l4xx.o(i.GetPage))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GetPage
</UL>
<BR>[Called By]<UL><LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalEePromErase
</UL>

<P><STRONG><a name="[1f3]"></a>DecodeCellVoltageByCellFlag</STRONG> (Thumb, 114 bytes, Stack size 32 bytes, halafebq796xx.o(i.DecodeCellVoltageByCellFlag))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = DecodeCellVoltageByCellFlag &rArr; CvtCellAdcToMv &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParGetCellFlag
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParGetBmuNumber
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProjectIsInSimuMode
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;halAfeSetCellVoltage
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CvtCellAdcToMv
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_afe_cb
</UL>

<P><STRONG><a name="[1f5]"></a>DecodeNtcVoltageByNtcFlag</STRONG> (Thumb, 150 bytes, Stack size 40 bytes, halafebq796xx.o(i.DecodeNtcVoltageByNtcFlag))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = DecodeNtcVoltageByNtcFlag &rArr; CvtNtcAdcToMv &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParGetBmuNumber
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProjectIsInSimuMode
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apiSysParGetNtcFlag
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;halAfeSetNtcAdcData
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CvtNtcAdcToMv
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_afe_cb
</UL>

<P><STRONG><a name="[af]"></a>ads7946_callBack</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, halafeads7946.o(i.ads7946_callBack))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ads7946_callBack &rArr; updateInternalVbatVoltage
</UL>
<BR>[Calls]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProjectIsInSimuMode
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;halAfeSetVBatAdcValue
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;halAfeSetCurrentAdcValue
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateInternalVbatVoltage
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateExternalVbatVoltage
</UL>
<BR>[Address Reference Count : 1]<UL><LI> halafeads7946.o(i.currentSwTimerHandler)
</UL>
<P><STRONG><a name="[b4]"></a>currentSwTimerHandler</STRONG> (Thumb, 126 bytes, Stack size 8 bytes, halafeads7946.o(i.currentSwTimerHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 236<LI>Call Chain = currentSwTimerHandler &rArr; smp_ADS7946_get_data &rArr; smp_spi_master_send_recv &rArr; HAL_SPI_Receive_DMA &rArr; HAL_SPI_TransmitReceive_DMA &rArr; HAL_DMA_Start_IT &rArr; DMA_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smp_ADS7946_get_data
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;halAfeCurrentGetCurrentValue
</UL>
<BR>[Address Reference Count : 1]<UL><LI> halafeads7946.o(i.halAfeCurrentOpen)
</UL>
<P><STRONG><a name="[3b1]"></a>halAfeCurrentGetCurrentValue</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, halafeads7946.o(i.halAfeCurrentGetCurrentValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = halAfeCurrentGetCurrentValue
</UL>
<BR>[Calls]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProjectIsInSimuMode
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;halAfeGetCurrentAdcValue
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalAfeSetCurrentValue
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doCalibration
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;currentSwTimerHandler
</UL>

<P><STRONG><a name="[2e1]"></a>updateExternalVbatVoltage</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, halafeads7946.o(i.updateExternalVbatVoltage))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = updateExternalVbatVoltage
</UL>
<BR>[Calls]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProjectIsInSimuMode
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;halAfeGetVBatAdcValue
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;halAfeSetVBatVoltage
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doCalibration
</UL>
<BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ads7946_callBack
</UL>

<P><STRONG><a name="[2e2]"></a>updateInternalVbatVoltage</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, halafeads7946.o(i.updateInternalVbatVoltage))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = updateInternalVbatVoltage
</UL>
<BR>[Calls]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appProjectIsInSimuMode
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;halAfeGetVBatAdcValue
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;halAfeSetVBatVoltage
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doCalibration
</UL>
<BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ads7946_callBack
</UL>

<P><STRONG><a name="[2d0]"></a>recordFree</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, libregister.o(i.recordFree))
<BR><BR>[Called By]<UL><LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LibRegisterRm
</UL>

<P><STRONG><a name="[2cf]"></a>recordMalloc</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, libregister.o(i.recordMalloc))
<BR><BR>[Called By]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LibRegisterAdd
</UL>

<P><STRONG><a name="[238]"></a>RCC_SetFlashLatencyFromMSIRange</STRONG> (Thumb, 122 bytes, Stack size 24 bytes, stm32l4xx_hal_rcc.o(i.RCC_SetFlashLatencyFromMSIRange))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = RCC_SetFlashLatencyFromMSIRange
</UL>
<BR>[Calls]<UL><LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_GetVoltageRange
</UL>
<BR>[Called By]<UL><LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
</UL>

<P><STRONG><a name="[230]"></a>RCCEx_PLLSAI1_Config</STRONG> (Thumb, 304 bytes, Stack size 24 bytes, stm32l4xx_hal_rcc_ex.o(i.RCCEx_PLLSAI1_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = RCCEx_PLLSAI1_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
</UL>

<P><STRONG><a name="[231]"></a>RCCEx_PLLSAI2_Config</STRONG> (Thumb, 270 bytes, Stack size 24 bytes, stm32l4xx_hal_rcc_ex.o(i.RCCEx_PLLSAI2_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = RCCEx_PLLSAI2_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
</UL>

<P><STRONG><a name="[22f]"></a>__NVIC_SetPriority</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, stm32l4xx_hal_cortex.o(i.__NVIC_SetPriority))
<BR><BR>[Called By]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Config
</UL>

<P><STRONG><a name="[202]"></a>LL_ADC_GetOffsetChannel</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32l4xx_hal_adc.o(i.LL_ADC_GetOffsetChannel))
<BR><BR>[Called By]<UL><LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_ConfigChannel
</UL>

<P><STRONG><a name="[200]"></a>LL_ADC_INJ_IsConversionOngoing</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32l4xx_hal_adc.o(i.LL_ADC_INJ_IsConversionOngoing))
<BR><BR>[Called By]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_Init
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_ConfigChannel
</UL>

<P><STRONG><a name="[168]"></a>LL_ADC_IsEnabled</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32l4xx_hal_adc.o(i.LL_ADC_IsEnabled))
<BR><BR>[Called By]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_Init
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_ConfigChannel
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Enable
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Disable
</UL>

<P><STRONG><a name="[1ff]"></a>LL_ADC_REG_IsConversionOngoing</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32l4xx_hal_adc.o(i.LL_ADC_REG_IsConversionOngoing))
<BR><BR>[Called By]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_Init
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_ConfigChannel
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_Start_DMA
</UL>

<P><STRONG><a name="[164]"></a>LL_ADC_REG_IsTriggerSourceSWStart</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32l4xx_hal_adc.o(i.LL_ADC_REG_IsTriggerSourceSWStart))
<BR><BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DMAConvCplt
</UL>

<P><STRONG><a name="[201]"></a>LL_ADC_SetChannelSamplingTime</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, stm32l4xx_hal_adc.o(i.LL_ADC_SetChannelSamplingTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LL_ADC_SetChannelSamplingTime
</UL>
<BR>[Called By]<UL><LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_ConfigChannel
</UL>

<P><STRONG><a name="[203]"></a>LL_ADC_SetOffsetState</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32l4xx_hal_adc.o(i.LL_ADC_SetOffsetState))
<BR><BR>[Called By]<UL><LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_ConfigChannel
</UL>

<P><STRONG><a name="[1fd]"></a>LL_ADC_REG_IsConversionOngoing</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32l4xx_hal_adc_ex.o(i.LL_ADC_REG_IsConversionOngoing))
<BR><BR>[Called By]<UL><LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADCEx_MultiModeConfigChannel
</UL>

<P><STRONG><a name="[223]"></a>DMA_SetConfig</STRONG> (Thumb, 48 bytes, Stack size 12 bytes, stm32l4xx_hal_dma.o(i.DMA_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = DMA_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Start_IT
</UL>

<P><STRONG><a name="[22a]"></a>FLASH_Program_DoubleWord</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, stm32l4xx_hal_flash.o(i.FLASH_Program_DoubleWord))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = FLASH_Program_DoubleWord
</UL>
<BR>[Called By]<UL><LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASH_Program
</UL>

<P><STRONG><a name="[22b]"></a>FLASH_Program_Fast</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, stm32l4xx_hal_flash.o(i.FLASH_Program_Fast))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = FLASH_Program_Fast
</UL>
<BR>[Called By]<UL><LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASH_Program
</UL>

<P><STRONG><a name="[226]"></a>FLASH_MassErase</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, stm32l4xx_hal_flash_ex.o(i.FLASH_MassErase))
<BR><BR>[Called By]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASHEx_Erase
</UL>

<P><STRONG><a name="[79]"></a>SPI_DMAError</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, stm32l4xx_hal_spi.o(i.SPI_DMAError))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SPI_DMAError
</UL>
<BR>[Calls]<UL><LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_ErrorCallback
</UL>
<BR>[Address Reference Count : 3]<UL><LI> stm32l4xx_hal_spi.o(i.HAL_SPI_Receive_DMA)
<LI> stm32l4xx_hal_spi.o(i.HAL_SPI_TransmitReceive_DMA)
<LI> stm32l4xx_hal_spi.o(i.HAL_SPI_Transmit_DMA)
</UL>
<P><STRONG><a name="[77]"></a>SPI_DMAHalfReceiveCplt</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, stm32l4xx_hal_spi.o(i.SPI_DMAHalfReceiveCplt))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SPI_DMAHalfReceiveCplt
</UL>
<BR>[Calls]<UL><LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_RxHalfCpltCallback
</UL>
<BR>[Address Reference Count : 2]<UL><LI> stm32l4xx_hal_spi.o(i.HAL_SPI_Receive_DMA)
<LI> stm32l4xx_hal_spi.o(i.HAL_SPI_TransmitReceive_DMA)
</UL>
<P><STRONG><a name="[7c]"></a>SPI_DMAHalfTransmitCplt</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, stm32l4xx_hal_spi.o(i.SPI_DMAHalfTransmitCplt))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SPI_DMAHalfTransmitCplt
</UL>
<BR>[Calls]<UL><LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_TxHalfCpltCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32l4xx_hal_spi.o(i.HAL_SPI_Transmit_DMA)
</UL>
<P><STRONG><a name="[7a]"></a>SPI_DMAHalfTransmitReceiveCplt</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, stm32l4xx_hal_spi.o(i.SPI_DMAHalfTransmitReceiveCplt))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SPI_DMAHalfTransmitReceiveCplt
</UL>
<BR>[Calls]<UL><LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_TxRxHalfCpltCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32l4xx_hal_spi.o(i.HAL_SPI_TransmitReceive_DMA)
</UL>
<P><STRONG><a name="[78]"></a>SPI_DMAReceiveCplt</STRONG> (Thumb, 230 bytes, Stack size 32 bytes, stm32l4xx_hal_spi.o(i.SPI_DMAReceiveCplt))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = SPI_DMAReceiveCplt &rArr; SPI_EndRxTransaction &rArr; SPI_WaitFifoStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_RxCpltCallback
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WaitFlagStateUntilTimeout
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_EndRxTransaction
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_ErrorCallback
</UL>
<BR>[Address Reference Count : 2]<UL><LI> stm32l4xx_hal_spi.o(i.HAL_SPI_Receive_DMA)
<LI> stm32l4xx_hal_spi.o(i.HAL_SPI_TransmitReceive_DMA)
</UL>
<P><STRONG><a name="[7d]"></a>SPI_DMATransmitCplt</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, stm32l4xx_hal_spi.o(i.SPI_DMATransmitCplt))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = SPI_DMATransmitCplt &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFifoStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_TxCpltCallback
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_EndRxTxTransaction
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_ErrorCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32l4xx_hal_spi.o(i.HAL_SPI_Transmit_DMA)
</UL>
<P><STRONG><a name="[7b]"></a>SPI_DMATransmitReceiveCplt</STRONG> (Thumb, 210 bytes, Stack size 32 bytes, stm32l4xx_hal_spi.o(i.SPI_DMATransmitReceiveCplt))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = SPI_DMATransmitReceiveCplt &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFifoStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WaitFifoStateUntilTimeout
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_EndRxTxTransaction
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_TxRxCpltCallback
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_ErrorCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32l4xx_hal_spi.o(i.HAL_SPI_TransmitReceive_DMA)
</UL>
<P><STRONG><a name="[24a]"></a>SPI_EndRxTransaction</STRONG> (Thumb, 126 bytes, Stack size 32 bytes, stm32l4xx_hal_spi.o(i.SPI_EndRxTransaction))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = SPI_EndRxTransaction &rArr; SPI_WaitFifoStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WaitFlagStateUntilTimeout
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WaitFifoStateUntilTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Receive
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_DMAReceiveCplt
</UL>

<P><STRONG><a name="[24d]"></a>SPI_EndRxTxTransaction</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, stm32l4xx_hal_spi.o(i.SPI_EndRxTxTransaction))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = SPI_EndRxTxTransaction &rArr; SPI_WaitFifoStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WaitFlagStateUntilTimeout
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WaitFifoStateUntilTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_TransmitReceive
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Transmit
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_DMATransmitReceiveCplt
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_DMATransmitCplt
</UL>

<P><STRONG><a name="[2bc]"></a>SPI_WaitFifoStateUntilTimeout</STRONG> (Thumb, 198 bytes, Stack size 40 bytes, stm32l4xx_hal_spi.o(i.SPI_WaitFifoStateUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SPI_WaitFifoStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_EndRxTxTransaction
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_EndRxTransaction
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_DMATransmitReceiveCplt
</UL>

<P><STRONG><a name="[249]"></a>SPI_WaitFlagStateUntilTimeout</STRONG> (Thumb, 184 bytes, Stack size 32 bytes, stm32l4xx_hal_spi.o(i.SPI_WaitFlagStateUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_TransmitReceive
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Receive
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_EndRxTxTransaction
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_EndRxTransaction
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_DMAReceiveCplt
</UL>

<P><STRONG><a name="[7e]"></a>UART_DMAAbortOnError</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, stm32l4xx_hal_uart.o(i.UART_DMAAbortOnError))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UART_DMAAbortOnError
</UL>
<BR>[Calls]<UL><LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_ErrorCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32l4xx_hal_uart.o(i.HAL_UART_IRQHandler)
</UL>
<P><STRONG><a name="[81]"></a>UART_DMAError</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, stm32l4xx_hal_uart.o(i.UART_DMAError))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UART_DMAError
</UL>
<BR>[Calls]<UL><LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_EndTxTransfer
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_EndRxTransfer
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_ErrorCallback
</UL>
<BR>[Address Reference Count : 2]<UL><LI> stm32l4xx_hal_uart.o(i.HAL_UART_Transmit_DMA)
<LI> stm32l4xx_hal_uart.o(i.UART_Start_Receive_DMA)
</UL>
<P><STRONG><a name="[86]"></a>UART_DMAReceiveCplt</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, stm32l4xx_hal_uart.o(i.UART_DMAReceiveCplt))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = UART_DMAReceiveCplt &rArr; HAL_UART_RxCpltCallback &rArr; HAL_UART_Receive_DMA &rArr; UART_Start_Receive_DMA &rArr; HAL_DMA_Start_IT &rArr; DMA_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UARTEx_RxEventCallback
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_RxCpltCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32l4xx_hal_uart.o(i.UART_Start_Receive_DMA)
</UL>
<P><STRONG><a name="[87]"></a>UART_DMARxHalfCplt</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, stm32l4xx_hal_uart.o(i.UART_DMARxHalfCplt))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UART_DMARxHalfCplt
</UL>
<BR>[Calls]<UL><LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_RxHalfCpltCallback
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UARTEx_RxEventCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32l4xx_hal_uart.o(i.UART_Start_Receive_DMA)
</UL>
<P><STRONG><a name="[7f]"></a>UART_DMATransmitCplt</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, stm32l4xx_hal_uart.o(i.UART_DMATransmitCplt))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = UART_DMATransmitCplt &rArr; HAL_UART_TxCpltCallback &rArr; HAL_UART_Transmit_DMA &rArr; HAL_DMA_Start_IT &rArr; DMA_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_TxCpltCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32l4xx_hal_uart.o(i.HAL_UART_Transmit_DMA)
</UL>
<P><STRONG><a name="[80]"></a>UART_DMATxHalfCplt</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, stm32l4xx_hal_uart.o(i.UART_DMATxHalfCplt))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UART_DMATxHalfCplt
</UL>
<BR>[Calls]<UL><LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_TxHalfCpltCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32l4xx_hal_uart.o(i.HAL_UART_Transmit_DMA)
</UL>
<P><STRONG><a name="[25e]"></a>UART_EndRxTransfer</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, stm32l4xx_hal_uart.o(i.UART_EndRxTransfer))
<BR><BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_DMAError
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>

<P><STRONG><a name="[264]"></a>UART_EndTransmit_IT</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, stm32l4xx_hal_uart.o(i.UART_EndTransmit_IT))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = UART_EndTransmit_IT &rArr; HAL_UART_TxCpltCallback &rArr; HAL_UART_Transmit_DMA &rArr; HAL_DMA_Start_IT &rArr; DMA_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_TxCpltCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>

<P><STRONG><a name="[2c2]"></a>UART_EndTxTransfer</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32l4xx_hal_uart.o(i.UART_EndTxTransfer))
<BR><BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_DMAError
</UL>

<P><STRONG><a name="[89]"></a>UART_RxISR_16BIT</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, stm32l4xx_hal_uart.o(i.UART_RxISR_16BIT))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = UART_RxISR_16BIT &rArr; HAL_UART_RxCpltCallback &rArr; HAL_UART_Receive_DMA &rArr; UART_Start_Receive_DMA &rArr; HAL_DMA_Start_IT &rArr; DMA_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UARTEx_RxEventCallback
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_RxCpltCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32l4xx_hal_uart.o(i.UART_Start_Receive_IT)
</UL>
<P><STRONG><a name="[88]"></a>UART_RxISR_8BIT</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, stm32l4xx_hal_uart.o(i.UART_RxISR_8BIT))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = UART_RxISR_8BIT &rArr; HAL_UART_RxCpltCallback &rArr; HAL_UART_Receive_DMA &rArr; UART_Start_Receive_DMA &rArr; HAL_DMA_Start_IT &rArr; DMA_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UARTEx_RxEventCallback
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_RxCpltCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32l4xx_hal_uart.o(i.UART_Start_Receive_IT)
</UL>
<P><STRONG><a name="[83]"></a>UART_TxISR_16BIT</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, stm32l4xx_hal_uart.o(i.UART_TxISR_16BIT))
<BR>[Address Reference Count : 1]<UL><LI> stm32l4xx_hal_uart.o(i.HAL_UART_Transmit_IT)
</UL>
<P><STRONG><a name="[82]"></a>UART_TxISR_8BIT</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, stm32l4xx_hal_uart.o(i.UART_TxISR_8BIT))
<BR>[Address Reference Count : 1]<UL><LI> stm32l4xx_hal_uart.o(i.HAL_UART_Transmit_IT)
</UL>
<P><STRONG><a name="[84]"></a>W5500SwTimerHandler</STRONG> (Thumb, 134 bytes, Stack size 16 bytes, smp_w5500_dma.o(i.W5500SwTimerHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 324<LI>Call Chain = W5500SwTimerHandler &rArr; W5500_Server_Step &rArr; smp_w5500_spiDMA_WriteMulti &rArr; smp_spi_master_send_recv &rArr; HAL_SPI_Receive_DMA &rArr; HAL_SPI_TransmitReceive_DMA &rArr; HAL_DMA_Start_IT &rArr; DMA_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W5500_Server_Step
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W5500_Init_Step
</UL>
<BR>[Address Reference Count : 1]<UL><LI> smp_w5500_dma.o(i.Hal_W5500_Open)
</UL>
<P><STRONG><a name="[2ab]"></a>_DoInit</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, segger_rtt.o(i._DoInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _DoInit
</UL>
<BR>[Calls]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_Init
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_Write
</UL>

<P><STRONG><a name="[2ae]"></a>_GetAvailWriteSpace</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, segger_rtt.o(i._GetAvailWriteSpace))
<BR><BR>[Called By]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_WriteNoLock
</UL>

<P><STRONG><a name="[2b0]"></a>_WriteBlocking</STRONG> (Thumb, 92 bytes, Stack size 32 bytes, segger_rtt.o(i._WriteBlocking))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _WriteBlocking
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_WriteNoLock
</UL>

<P><STRONG><a name="[2af]"></a>_WriteNoCheck</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, segger_rtt.o(i._WriteNoCheck))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _WriteNoCheck
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_WriteNoLock
</UL>

<P><STRONG><a name="[2b4]"></a>_PrintInt</STRONG> (Thumb, 216 bytes, Stack size 48 bytes, segger_rtt_printf.o(i._PrintInt))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking
</UL>
<BR>[Calls]<UL><LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_StoreChar
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PrintUnsigned
</UL>
<BR>[Called By]<UL><LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_vprintf
</UL>

<P><STRONG><a name="[2b5]"></a>_PrintUnsigned</STRONG> (Thumb, 210 bytes, Stack size 40 bytes, segger_rtt_printf.o(i._PrintUnsigned))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking
</UL>
<BR>[Calls]<UL><LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_StoreChar
</UL>
<BR>[Called By]<UL><LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_vprintf
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PrintInt
</UL>

<P><STRONG><a name="[2b3]"></a>_StoreChar</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, segger_rtt_printf.o(i._StoreChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_vprintf
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PrintUnsigned
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PrintInt
</UL>

<P><STRONG><a name="[2dd]"></a>_fp_digits</STRONG> (Thumb, 366 bytes, Stack size 64 bytes, printfa.o(i._fp_digits), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[2d2]"></a>_printf_core</STRONG> (Thumb, 1704 bytes, Stack size 136 bytes, printfa.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0printf
</UL>

<P><STRONG><a name="[2df]"></a>_printf_post_padding</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, printfa.o(i._printf_post_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[2de]"></a>_printf_pre_padding</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, printfa.o(i._printf_pre_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[8b]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, printfa.o(i._sputc))
<BR><BR>[Called By]<UL><LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printfa.o(i.__0sprintf)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
